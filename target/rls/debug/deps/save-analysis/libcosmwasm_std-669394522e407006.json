{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta","program":"/Users/stevenli/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","cosmwasm_std","--edition=2018","/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"iterator\"","--cfg","feature=\"staking\"","--cfg","feature=\"stargate\"","-C","metadata=669394522e407006","-C","extra-filename=-669394522e407006","--out-dir","/Users/stevenli/Downloads/cw-plus-0.10.2/target/rls/debug/deps","-L","dependency=/Users/stevenli/Downloads/cw-plus-0.10.2/target/rls/debug/deps","--extern","base64=/Users/stevenli/Downloads/cw-plus-0.10.2/target/rls/debug/deps/libbase64-e786e00c9d12bdd2.rmeta","--extern","cosmwasm_crypto=/Users/stevenli/Downloads/cw-plus-0.10.2/target/rls/debug/deps/libcosmwasm_crypto-b3bdfcbfbc9e7e24.rmeta","--extern","cosmwasm_derive=/Users/stevenli/Downloads/cw-plus-0.10.2/target/rls/debug/deps/libcosmwasm_derive-84c6b76efebd0160.dylib","--extern","schemars=/Users/stevenli/Downloads/cw-plus-0.10.2/target/rls/debug/deps/libschemars-1880c22e0302336a.rmeta","--extern","serde=/Users/stevenli/Downloads/cw-plus-0.10.2/target/rls/debug/deps/libserde-11fcde9e60472d7d.rmeta","--extern","serde_json_wasm=/Users/stevenli/Downloads/cw-plus-0.10.2/target/rls/debug/deps/libserde_json_wasm-e4443d4ff3aa57cf.rmeta","--extern","thiserror=/Users/stevenli/Downloads/cw-plus-0.10.2/target/rls/debug/deps/libthiserror-9d5cdbb7e4436142.rmeta","--extern","uint=/Users/stevenli/Downloads/cw-plus-0.10.2/target/rls/debug/deps/libuint-564a72b43799c939.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/stevenli/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/stevenli/Downloads/cw-plus-0.10.2/target/rls/debug/deps/libcosmwasm_std-669394522e407006.rmeta"},"prelude":{"crate_id":{"name":"cosmwasm_std","disambiguator":[15156164015663308526,0]},"crate_root":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src","external_crates":[{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[13397687447365136237,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/uint-0.9.1/src/uint.rs","num":2,"id":{"name":"core","disambiguator":[12597453921046050400,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10337807943449432441,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15255728868105367331,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3332034203136216330,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4768259444744658338,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14770965832479625303,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9296703136347489161,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2508387316696144016,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11194842143487016821,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[677485867405505285,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11695788395232495118,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[1893355350187676699,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[4235596681029805678,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[4025428084964080381,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[9641156662954966841,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3359352200029954805,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","num":18,"id":{"name":"schemars","disambiguator":[6806899402871699623,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","num":19,"id":{"name":"schemars_derive","disambiguator":[1976187636486445364,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","num":20,"id":{"name":"serde_json","disambiguator":[8477092997605756657,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","num":21,"id":{"name":"serde","disambiguator":[16063605659652312967,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","num":22,"id":{"name":"serde_derive","disambiguator":[12556891448448635906,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","num":23,"id":{"name":"itoa","disambiguator":[4434209777062634920,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","num":24,"id":{"name":"ryu","disambiguator":[8332292337861664911,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","num":25,"id":{"name":"dyn_clone","disambiguator":[273638250038740183,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":26,"id":{"name":"cosmwasm_crypto","disambiguator":[3029678423274074349,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":27,"id":{"name":"ed25519_zebra","disambiguator":[16616519542023164921,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":28,"id":{"name":"curve25519_dalek","disambiguator":[10651410005509581713,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":29,"id":{"name":"byteorder","disambiguator":[1864087017046294337,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":30,"id":{"name":"digest","disambiguator":[1754240173612408999,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":31,"id":{"name":"generic_array","disambiguator":[15602765620087248231,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":32,"id":{"name":"typenum","disambiguator":[18175737497416726821,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":33,"id":{"name":"rand_core","disambiguator":[15824879661750342242,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":34,"id":{"name":"getrandom","disambiguator":[9997952096143185898,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":35,"id":{"name":"cfg_if","disambiguator":[9443989023123562313,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":36,"id":{"name":"libc","disambiguator":[10107221870808860176,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":37,"id":{"name":"zeroize","disambiguator":[18005489203637171934,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":38,"id":{"name":"subtle","disambiguator":[535103164643848221,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":39,"id":{"name":"sha2","disambiguator":[10553909089109594836,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":40,"id":{"name":"block_buffer","disambiguator":[7372318802219812970,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":41,"id":{"name":"opaque_debug","disambiguator":[7296770258934881720,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":42,"id":{"name":"cpufeatures","disambiguator":[5904081071811818521,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":43,"id":{"name":"thiserror","disambiguator":[4400742192234274598,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":44,"id":{"name":"thiserror_impl","disambiguator":[14733956119479079415,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":45,"id":{"name":"hex","disambiguator":[11644895690105681363,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":46,"id":{"name":"k256","disambiguator":[2109253055472179571,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":47,"id":{"name":"elliptic_curve","disambiguator":[4730006442554629138,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":48,"id":{"name":"ff","disambiguator":[9769100878458948184,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":49,"id":{"name":"rand_core","disambiguator":[2907188604607456350,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":50,"id":{"name":"getrandom","disambiguator":[15452982165463005068,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":51,"id":{"name":"group","disambiguator":[9372026216059119421,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":52,"id":{"name":"pkcs8","disambiguator":[7630438676449505193,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":53,"id":{"name":"der","disambiguator":[7016942381733183916,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":54,"id":{"name":"const_oid","disambiguator":[12844180371547220824,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":55,"id":{"name":"spki","disambiguator":[13051761737259212687,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":56,"id":{"name":"crypto_bigint","disambiguator":[18196948676500870727,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":57,"id":{"name":"ecdsa","disambiguator":[2310664162718765488,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":58,"id":{"name":"hmac","disambiguator":[6529727977464492861,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":59,"id":{"name":"crypto_mac","disambiguator":[1567840143810513220,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","num":60,"id":{"name":"signature","disambiguator":[16930121058284434869,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","num":61,"id":{"name":"cosmwasm_derive","disambiguator":[16538438696422844924,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","num":62,"id":{"name":"uint","disambiguator":[5453810882815848708,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","num":63,"id":{"name":"static_assertions","disambiguator":[10300567661169896600,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","num":64,"id":{"name":"crunchy","disambiguator":[2161097900530502431,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","num":65,"id":{"name":"base64","disambiguator":[11681548617012926897,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/serde.rs","num":66,"id":{"name":"serde_json_wasm","disambiguator":[18414389634646077949,0]}}],"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":0,"byte_end":4298,"line_start":1,"line_end":120,"column_start":1,"column_end":38}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":3216},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":407,"byte_end":411,"line_start":27,"line_end":27,"column_start":28,"column_end":32},"alias_span":null,"name":"Addr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3266},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":413,"byte_end":426,"line_start":27,"line_end":27,"column_start":34,"column_end":47},"alias_span":null,"name":"CanonicalAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3267},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":413,"byte_end":426,"line_start":27,"line_end":27,"column_start":34,"column_end":47},"alias_span":null,"name":"CanonicalAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3312},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":452,"byte_end":458,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"alias_span":null,"name":"Binary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3313},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":452,"byte_end":458,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"alias_span":null,"name":"Binary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":483,"byte_end":487,"line_start":29,"line_end":29,"column_start":24,"column_end":28},"alias_span":null,"name":"coin","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":178},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":489,"byte_end":494,"line_start":29,"line_end":29,"column_start":30,"column_end":35},"alias_span":null,"name":"coins","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":182},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":496,"byte_end":505,"line_start":29,"line_end":29,"column_start":37,"column_end":46},"alias_span":null,"name":"has_coins","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3339},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":507,"byte_end":511,"line_start":29,"line_end":29,"column_start":48,"column_end":52},"alias_span":null,"name":"Coin","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3405},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":536,"byte_end":540,"line_start":30,"line_end":30,"column_start":23,"column_end":27},"alias_span":null,"name":"Deps","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":222},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":542,"byte_end":549,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"alias_span":null,"name":"DepsMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":213},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":551,"byte_end":560,"line_start":30,"line_end":30,"column_start":38,"column_end":47},"alias_span":null,"name":"OwnedDeps","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3546},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":592,"byte_end":615,"line_start":32,"line_end":32,"column_start":5,"column_end":28},"alias_span":null,"name":"ConversionOverflowError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3523},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":617,"byte_end":630,"line_start":32,"line_end":32,"column_start":30,"column_end":43},"alias_span":null,"name":"OverflowError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3482},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":632,"byte_end":649,"line_start":32,"line_end":32,"column_start":45,"column_end":62},"alias_span":null,"name":"OverflowOperation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3415},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":651,"byte_end":669,"line_start":32,"line_end":32,"column_start":64,"column_end":82},"alias_span":null,"name":"RecoverPubkeyError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3436},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":671,"byte_end":679,"line_start":32,"line_end":32,"column_start":84,"column_end":92},"alias_span":null,"name":"StdError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":311},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":685,"byte_end":694,"line_start":33,"line_end":33,"column_start":5,"column_end":14},"alias_span":null,"name":"StdResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3806},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":696,"byte_end":707,"line_start":33,"line_end":33,"column_start":16,"column_end":27},"alias_span":null,"name":"SystemError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3818},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":709,"byte_end":726,"line_start":33,"line_end":33,"column_start":29,"column_end":46},"alias_span":null,"name":"VerificationError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4431},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":786,"byte_end":804,"line_start":37,"line_end":37,"column_start":5,"column_end":23},"alias_span":null,"name":"IbcAcknowledgement","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5074},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":806,"byte_end":822,"line_start":37,"line_end":37,"column_start":25,"column_end":41},"alias_span":null,"name":"IbcBasicResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4156},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":824,"byte_end":834,"line_start":37,"line_end":37,"column_start":43,"column_end":53},"alias_span":null,"name":"IbcChannel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4883},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":836,"byte_end":854,"line_start":37,"line_end":37,"column_start":55,"column_end":73},"alias_span":null,"name":"IbcChannelCloseMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4752},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":856,"byte_end":876,"line_start":37,"line_end":37,"column_start":75,"column_end":95},"alias_span":null,"name":"IbcChannelConnectMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4619},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":882,"byte_end":899,"line_start":38,"line_end":38,"column_start":5,"column_end":22},"alias_span":null,"name":"IbcChannelOpenMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4028},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":901,"byte_end":912,"line_start":38,"line_end":38,"column_start":24,"column_end":35},"alias_span":null,"name":"IbcEndpoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4016},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":914,"byte_end":920,"line_start":38,"line_end":38,"column_start":37,"column_end":43},"alias_span":null,"name":"IbcMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4229},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":922,"byte_end":930,"line_start":38,"line_end":38,"column_start":45,"column_end":53},"alias_span":null,"name":"IbcOrder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4358},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":932,"byte_end":941,"line_start":38,"line_end":38,"column_start":55,"column_end":64},"alias_span":null,"name":"IbcPacket","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4949},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":943,"byte_end":958,"line_start":38,"line_end":38,"column_start":66,"column_end":81},"alias_span":null,"name":"IbcPacketAckMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4888},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":964,"byte_end":983,"line_start":39,"line_end":39,"column_start":5,"column_end":24},"alias_span":null,"name":"IbcPacketReceiveMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5013},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":985,"byte_end":1004,"line_start":39,"line_end":39,"column_start":26,"column_end":45},"alias_span":null,"name":"IbcPacketTimeoutMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5151},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1006,"byte_end":1024,"line_start":39,"line_end":39,"column_start":47,"column_end":65},"alias_span":null,"name":"IbcReceiveResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4153},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1026,"byte_end":1036,"line_start":39,"line_end":39,"column_start":67,"column_end":77},"alias_span":null,"name":"IbcTimeout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4290},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1038,"byte_end":1053,"line_start":39,"line_end":39,"column_start":79,"column_end":94},"alias_span":null,"name":"IbcTimeoutBlock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":557},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1133,"byte_end":1137,"line_start":43,"line_end":43,"column_start":26,"column_end":30},"alias_span":null,"name":"Pair","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5231},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1194,"byte_end":1199,"line_start":45,"line_end":45,"column_start":27,"column_end":32},"alias_span":null,"name":"Order","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":555},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1201,"byte_end":1207,"line_start":45,"line_end":45,"column_start":34,"column_end":40},"alias_span":null,"name":"Record","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5241},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1237,"byte_end":1244,"line_start":47,"line_end":47,"column_start":5,"column_end":12},"alias_span":null,"name":"Decimal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5276},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1246,"byte_end":1256,"line_start":47,"line_end":47,"column_start":14,"column_end":24},"alias_span":null,"name":"Decimal256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5309},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1258,"byte_end":1281,"line_start":47,"line_end":47,"column_start":26,"column_end":49},"alias_span":null,"name":"Decimal256RangeExceeded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5310},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1258,"byte_end":1281,"line_start":47,"line_end":47,"column_start":26,"column_end":49},"alias_span":null,"name":"Decimal256RangeExceeded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5274},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1283,"byte_end":1303,"line_start":47,"line_end":47,"column_start":51,"column_end":71},"alias_span":null,"name":"DecimalRangeExceeded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5275},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1283,"byte_end":1303,"line_start":47,"line_end":47,"column_start":51,"column_end":71},"alias_span":null,"name":"DecimalRangeExceeded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":824},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1305,"byte_end":1313,"line_start":47,"line_end":47,"column_start":73,"column_end":81},"alias_span":null,"name":"Fraction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5311},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1315,"byte_end":1322,"line_start":47,"line_end":47,"column_start":83,"column_end":90},"alias_span":null,"name":"Uint128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5882},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1324,"byte_end":1331,"line_start":47,"line_end":47,"column_start":92,"column_end":99},"alias_span":null,"name":"Uint256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6453},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1337,"byte_end":1344,"line_start":48,"line_end":48,"column_start":5,"column_end":12},"alias_span":null,"name":"Uint512","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6478},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1346,"byte_end":1352,"line_start":48,"line_end":48,"column_start":14,"column_end":20},"alias_span":null,"name":"Uint64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6756},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1385,"byte_end":1403,"line_start":51,"line_end":51,"column_start":5,"column_end":23},"alias_span":null,"name":"AllBalanceResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6695},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1405,"byte_end":1420,"line_start":51,"line_end":51,"column_start":25,"column_end":40},"alias_span":null,"name":"BalanceResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6630},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1422,"byte_end":1431,"line_start":51,"line_end":51,"column_start":42,"column_end":51},"alias_span":null,"name":"BankQuery","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8100},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1433,"byte_end":1453,"line_start":51,"line_end":51,"column_start":53,"column_end":73},"alias_span":null,"name":"ContractInfoResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1886},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1455,"byte_end":1466,"line_start":51,"line_end":51,"column_start":75,"column_end":86},"alias_span":null,"name":"CustomQuery","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8285},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1472,"byte_end":1484,"line_start":52,"line_end":52,"column_start":5,"column_end":17},"alias_span":null,"name":"QueryRequest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8091},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1486,"byte_end":1495,"line_start":52,"line_end":52,"column_start":19,"column_end":28},"alias_span":null,"name":"WasmQuery","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7470},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1556,"byte_end":1578,"line_start":56,"line_end":56,"column_start":5,"column_end":27},"alias_span":null,"name":"AllDelegationsResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7673},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1580,"byte_end":1601,"line_start":56,"line_end":56,"column_start":29,"column_end":50},"alias_span":null,"name":"AllValidatorsResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7409},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1603,"byte_end":1622,"line_start":56,"line_end":56,"column_start":52,"column_end":71},"alias_span":null,"name":"BondedDenomResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7472},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1624,"byte_end":1634,"line_start":56,"line_end":56,"column_start":73,"column_end":83},"alias_span":null,"name":"Delegation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7600},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1636,"byte_end":1650,"line_start":56,"line_end":56,"column_start":85,"column_end":99},"alias_span":null,"name":"FullDelegation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7340},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1656,"byte_end":1668,"line_start":57,"line_end":57,"column_start":5,"column_end":17},"alias_span":null,"name":"StakingQuery","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7795},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1670,"byte_end":1679,"line_start":57,"line_end":57,"column_start":19,"column_end":28},"alias_span":null,"name":"Validator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7734},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1681,"byte_end":1698,"line_start":57,"line_end":57,"column_start":30,"column_end":47},"alias_span":null,"name":"ValidatorResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7048},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1755,"byte_end":1770,"line_start":60,"line_end":60,"column_start":24,"column_end":39},"alias_span":null,"name":"ChannelResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6919},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1772,"byte_end":1780,"line_start":60,"line_end":60,"column_start":41,"column_end":49},"alias_span":null,"name":"IbcQuery","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6987},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1782,"byte_end":1802,"line_start":60,"line_end":60,"column_start":51,"column_end":71},"alias_span":null,"name":"ListChannelsResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6926},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1804,"byte_end":1818,"line_start":60,"line_end":60,"column_start":73,"column_end":87},"alias_span":null,"name":"PortIdResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2050},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1851,"byte_end":1855,"line_start":62,"line_end":62,"column_start":5,"column_end":9},"alias_span":null,"name":"attr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1970},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1857,"byte_end":1869,"line_start":62,"line_end":62,"column_start":11,"column_end":23},"alias_span":null,"name":"wasm_execute","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1968},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1871,"byte_end":1887,"line_start":62,"line_end":62,"column_start":25,"column_end":41},"alias_span":null,"name":"wasm_instantiate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9520},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1889,"byte_end":1898,"line_start":62,"line_end":62,"column_start":43,"column_end":52},"alias_span":null,"name":"Attribute","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8648},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1900,"byte_end":1907,"line_start":62,"line_end":62,"column_start":54,"column_end":61},"alias_span":null,"name":"BankMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8371},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1909,"byte_end":1923,"line_start":62,"line_end":62,"column_start":63,"column_end":77},"alias_span":null,"name":"ContractResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8495},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1925,"byte_end":1934,"line_start":62,"line_end":62,"column_start":79,"column_end":88},"alias_span":null,"name":"CosmosMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1966},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1936,"byte_end":1945,"line_start":62,"line_end":62,"column_start":90,"column_end":99},"alias_span":null,"name":"CustomMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9399},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1951,"byte_end":1956,"line_start":63,"line_end":63,"column_start":5,"column_end":10},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9456},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1958,"byte_end":1963,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2057},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1965,"byte_end":1978,"line_start":63,"line_end":63,"column_start":19,"column_end":32},"alias_span":null,"name":"QueryResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9815},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1980,"byte_end":1985,"line_start":63,"line_end":63,"column_start":34,"column_end":39},"alias_span":null,"name":"Reply","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9726},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1987,"byte_end":1994,"line_start":63,"line_end":63,"column_start":41,"column_end":48},"alias_span":null,"name":"ReplyOn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9586},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":1996,"byte_end":2004,"line_start":63,"line_end":63,"column_start":50,"column_end":58},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9735},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":2006,"byte_end":2012,"line_start":63,"line_end":63,"column_start":60,"column_end":66},"alias_span":null,"name":"SubMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9879},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":2014,"byte_end":2037,"line_start":63,"line_end":63,"column_start":68,"column_end":91},"alias_span":null,"name":"SubMsgExecutionResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10009},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":2043,"byte_end":2055,"line_start":64,"line_end":64,"column_start":5,"column_end":17},"alias_span":null,"name":"SystemResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9215},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":2057,"byte_end":2064,"line_start":64,"line_end":64,"column_start":19,"column_end":26},"alias_span":null,"name":"WasmMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8959},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":2122,"byte_end":2137,"line_start":67,"line_end":67,"column_start":26,"column_end":41},"alias_span":null,"name":"DistributionMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8823},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":2139,"byte_end":2149,"line_start":67,"line_end":67,"column_start":43,"column_end":53},"alias_span":null,"name":"StakingMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9326},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":2206,"byte_end":2212,"line_start":69,"line_end":69,"column_start":26,"column_end":32},"alias_span":null,"name":"GovMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9390},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":2214,"byte_end":2224,"line_start":69,"line_end":69,"column_start":34,"column_end":44},"alias_span":null,"name":"VoteOption","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2287},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":2250,"byte_end":2261,"line_start":70,"line_end":70,"column_start":24,"column_end":35},"alias_span":null,"name":"from_binary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2284},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":2263,"byte_end":2273,"line_start":70,"line_end":70,"column_start":37,"column_end":47},"alias_span":null,"name":"from_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2292},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":2275,"byte_end":2284,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"alias_span":null,"name":"to_binary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2289},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":2286,"byte_end":2292,"line_start":70,"line_end":70,"column_start":60,"column_end":66},"alias_span":null,"name":"to_vec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10017},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":2319,"byte_end":2332,"line_start":71,"line_end":71,"column_start":25,"column_end":38},"alias_span":null,"name":"MemoryStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10021},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":2360,"byte_end":2369,"line_start":72,"line_end":72,"column_start":27,"column_end":36},"alias_span":null,"name":"Timestamp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2487},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":2395,"byte_end":2398,"line_start":73,"line_end":73,"column_start":25,"column_end":28},"alias_span":null,"name":"Api","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2497},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":2400,"byte_end":2407,"line_start":73,"line_end":73,"column_start":30,"column_end":37},"alias_span":null,"name":"Querier","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2496},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":2409,"byte_end":2422,"line_start":73,"line_end":73,"column_start":39,"column_end":52},"alias_span":null,"name":"QuerierResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10071},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":2424,"byte_end":2438,"line_start":73,"line_end":73,"column_start":54,"column_end":68},"alias_span":null,"name":"QuerierWrapper","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2481},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":2440,"byte_end":2447,"line_start":73,"line_end":73,"column_start":70,"column_end":77},"alias_span":null,"name":"Storage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10200},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":2473,"byte_end":2482,"line_start":74,"line_end":74,"column_start":24,"column_end":33},"alias_span":null,"name":"BlockInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10323},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":2484,"byte_end":2496,"line_start":74,"line_end":74,"column_start":35,"column_end":47},"alias_span":null,"name":"ContractInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10080},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":2498,"byte_end":2501,"line_start":74,"line_end":74,"column_start":49,"column_end":52},"alias_span":null,"name":"Env","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10263},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":2503,"byte_end":2514,"line_start":74,"line_end":74,"column_start":54,"column_end":65},"alias_span":null,"name":"MessageInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10143},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":2516,"byte_end":2531,"line_start":74,"line_end":74,"column_start":67,"column_end":82},"alias_span":null,"name":"TransactionInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":10396},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":3587,"byte_end":3601,"line_start":103,"line_end":103,"column_start":26,"column_end":40},"alias_span":null,"name":"StakingQuerier","value":"","parent":{"krate":0,"index":3138}},{"kind":"Use","ref_id":{"krate":0,"index":3133},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":3638,"byte_end":3647,"line_start":105,"line_end":105,"column_start":9,"column_end":18},"alias_span":null,"name":"digit_sum","value":"","parent":{"krate":0,"index":3138}},{"kind":"Use","ref_id":{"krate":0,"index":3057},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":3649,"byte_end":3666,"line_start":105,"line_end":105,"column_start":20,"column_end":37},"alias_span":null,"name":"mock_dependencies","value":"","parent":{"krate":0,"index":3138}},{"kind":"Use","ref_id":{"krate":0,"index":3058},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":3668,"byte_end":3699,"line_start":105,"line_end":105,"column_start":39,"column_end":70},"alias_span":null,"name":"mock_dependencies_with_balances","value":"","parent":{"krate":0,"index":3138}},{"kind":"Use","ref_id":{"krate":0,"index":3076},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":3701,"byte_end":3709,"line_start":105,"line_end":105,"column_start":72,"column_end":80},"alias_span":null,"name":"mock_env","value":"","parent":{"krate":0,"index":3138}},{"kind":"Use","ref_id":{"krate":0,"index":3077},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":3711,"byte_end":3720,"line_start":105,"line_end":105,"column_start":82,"column_end":91},"alias_span":null,"name":"mock_info","value":"","parent":{"krate":0,"index":3138}},{"kind":"Use","ref_id":{"krate":0,"index":3135},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":3730,"byte_end":3745,"line_start":106,"line_end":106,"column_start":9,"column_end":24},"alias_span":null,"name":"mock_wasmd_attr","value":"","parent":{"krate":0,"index":3138}},{"kind":"Use","ref_id":{"krate":0,"index":3131},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":3747,"byte_end":3761,"line_start":106,"line_end":106,"column_start":26,"column_end":40},"alias_span":null,"name":"riffle_shuffle","value":"","parent":{"krate":0,"index":3138}},{"kind":"Use","ref_id":{"krate":0,"index":10390},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":3763,"byte_end":3774,"line_start":106,"line_end":106,"column_start":42,"column_end":53},"alias_span":null,"name":"BankQuerier","value":"","parent":{"krate":0,"index":3138}},{"kind":"Use","ref_id":{"krate":0,"index":10380},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":3776,"byte_end":3783,"line_start":106,"line_end":106,"column_start":55,"column_end":62},"alias_span":null,"name":"MockApi","value":"","parent":{"krate":0,"index":3138}},{"kind":"Use","ref_id":{"krate":0,"index":3094},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":3785,"byte_end":3796,"line_start":106,"line_end":106,"column_start":64,"column_end":75},"alias_span":null,"name":"MockQuerier","value":"","parent":{"krate":0,"index":3138}},{"kind":"Use","ref_id":{"krate":0,"index":3093},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":3806,"byte_end":3836,"line_start":107,"line_end":107,"column_start":9,"column_end":39},"alias_span":null,"name":"MockQuerierCustomHandlerResult","value":"","parent":{"krate":0,"index":3138}},{"kind":"Use","ref_id":{"krate":0,"index":3059},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":3838,"byte_end":3849,"line_start":107,"line_end":107,"column_start":41,"column_end":52},"alias_span":null,"name":"MockStorage","value":"","parent":{"krate":0,"index":3138}},{"kind":"Use","ref_id":{"krate":0,"index":3056},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":3851,"byte_end":3869,"line_start":107,"line_end":107,"column_start":54,"column_end":72},"alias_span":null,"name":"MOCK_CONTRACT_ADDR","value":"","parent":{"krate":0,"index":3138}},{"kind":"Use","ref_id":{"krate":0,"index":3078},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":3946,"byte_end":3962,"line_start":111,"line_end":111,"column_start":9,"column_end":25},"alias_span":null,"name":"mock_ibc_channel","value":"","parent":{"krate":0,"index":3138}},{"kind":"Use","ref_id":{"krate":0,"index":3084},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":3964,"byte_end":3994,"line_start":111,"line_end":111,"column_start":27,"column_end":57},"alias_span":null,"name":"mock_ibc_channel_close_confirm","value":"","parent":{"krate":0,"index":3138}},{"kind":"Use","ref_id":{"krate":0,"index":3083},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":3996,"byte_end":4023,"line_start":111,"line_end":111,"column_start":59,"column_end":86},"alias_span":null,"name":"mock_ibc_channel_close_init","value":"","parent":{"krate":0,"index":3138}},{"kind":"Use","ref_id":{"krate":0,"index":3081},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":4033,"byte_end":4061,"line_start":112,"line_end":112,"column_start":9,"column_end":37},"alias_span":null,"name":"mock_ibc_channel_connect_ack","value":"","parent":{"krate":0,"index":3138}},{"kind":"Use","ref_id":{"krate":0,"index":3082},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":4063,"byte_end":4095,"line_start":112,"line_end":112,"column_start":39,"column_end":71},"alias_span":null,"name":"mock_ibc_channel_connect_confirm","value":"","parent":{"krate":0,"index":3138}},{"kind":"Use","ref_id":{"krate":0,"index":3079},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":4097,"byte_end":4123,"line_start":112,"line_end":112,"column_start":73,"column_end":99},"alias_span":null,"name":"mock_ibc_channel_open_init","value":"","parent":{"krate":0,"index":3138}},{"kind":"Use","ref_id":{"krate":0,"index":3080},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":4133,"byte_end":4158,"line_start":113,"line_end":113,"column_start":9,"column_end":34},"alias_span":null,"name":"mock_ibc_channel_open_try","value":"","parent":{"krate":0,"index":3138}},{"kind":"Use","ref_id":{"krate":0,"index":3089},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":4160,"byte_end":4179,"line_start":113,"line_end":113,"column_start":36,"column_end":55},"alias_span":null,"name":"mock_ibc_packet_ack","value":"","parent":{"krate":0,"index":3138}},{"kind":"Use","ref_id":{"krate":0,"index":3085},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":4181,"byte_end":4201,"line_start":113,"line_end":113,"column_start":57,"column_end":77},"alias_span":null,"name":"mock_ibc_packet_recv","value":"","parent":{"krate":0,"index":3138}},{"kind":"Use","ref_id":{"krate":0,"index":3091},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":4211,"byte_end":4234,"line_start":114,"line_end":114,"column_start":9,"column_end":32},"alias_span":null,"name":"mock_ibc_packet_timeout","value":"","parent":{"krate":0,"index":3138}},{"kind":"Use","ref_id":{"krate":61,"index":10},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":4286,"byte_end":4297,"line_start":120,"line_end":120,"column_start":26,"column_end":37},"alias_span":null,"name":"entry_point","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":0,"byte_end":4298,"line_start":1,"line_end":120,"column_start":1,"column_end":38},"name":"","qualname":"::","value":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":66},{"krate":0,"index":70},{"krate":0,"index":156},{"krate":0,"index":185},{"krate":0,"index":190},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":386},{"krate":0,"index":542},{"krate":0,"index":548},{"krate":0,"index":564},{"krate":0,"index":1729},{"krate":0,"index":1903},{"krate":0,"index":2255},{"krate":0,"index":2263},{"krate":0,"index":2294},{"krate":0,"index":2338},{"krate":0,"index":2367},{"krate":0,"index":2536},{"krate":0,"index":2553},{"krate":0,"index":2554},{"krate":0,"index":2557},{"krate":0,"index":2558},{"krate":0,"index":2560},{"krate":0,"index":2561},{"krate":0,"index":2563},{"krate":0,"index":2564},{"krate":0,"index":2567},{"krate":0,"index":2570},{"krate":0,"index":2573},{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2580},{"krate":0,"index":2583},{"krate":0,"index":2586},{"krate":0,"index":2587},{"krate":0,"index":2590},{"krate":0,"index":2593},{"krate":0,"index":2596},{"krate":0,"index":2599},{"krate":0,"index":2602},{"krate":0,"index":2605},{"krate":0,"index":2608},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2615},{"krate":0,"index":2618},{"krate":0,"index":2621},{"krate":0,"index":2624},{"krate":0,"index":2627},{"krate":0,"index":2630},{"krate":0,"index":2633},{"krate":0,"index":2636},{"krate":0,"index":2639},{"krate":0,"index":2642},{"krate":0,"index":2645},{"krate":0,"index":2648},{"krate":0,"index":2651},{"krate":0,"index":2654},{"krate":0,"index":2657},{"krate":0,"index":2660},{"krate":0,"index":2663},{"krate":0,"index":2664},{"krate":0,"index":2667},{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2674},{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2683},{"krate":0,"index":2686},{"krate":0,"index":2689},{"krate":0,"index":2692},{"krate":0,"index":2695},{"krate":0,"index":2698},{"krate":0,"index":2699},{"krate":0,"index":2702},{"krate":0,"index":2705},{"krate":0,"index":2708},{"krate":0,"index":2711},{"krate":0,"index":2714},{"krate":0,"index":2717},{"krate":0,"index":2720},{"krate":0,"index":2721},{"krate":0,"index":2724},{"krate":0,"index":2727},{"krate":0,"index":2730},{"krate":0,"index":2733},{"krate":0,"index":2736},{"krate":0,"index":2739},{"krate":0,"index":2742},{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2749},{"krate":0,"index":2752},{"krate":0,"index":2755},{"krate":0,"index":2758},{"krate":0,"index":2759},{"krate":0,"index":2762},{"krate":0,"index":2765},{"krate":0,"index":2768},{"krate":0,"index":2771},{"krate":0,"index":2774},{"krate":0,"index":2777},{"krate":0,"index":2780},{"krate":0,"index":2783},{"krate":0,"index":2786},{"krate":0,"index":2789},{"krate":0,"index":2792},{"krate":0,"index":2795},{"krate":0,"index":2798},{"krate":0,"index":2801},{"krate":0,"index":2804},{"krate":0,"index":2807},{"krate":0,"index":2810},{"krate":0,"index":2813},{"krate":0,"index":2814},{"krate":0,"index":2817},{"krate":0,"index":2820},{"krate":0,"index":2821},{"krate":0,"index":2824},{"krate":0,"index":2827},{"krate":0,"index":2828},{"krate":0,"index":2831},{"krate":0,"index":2834},{"krate":0,"index":2837},{"krate":0,"index":2840},{"krate":0,"index":2843},{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":2850},{"krate":0,"index":2853},{"krate":0,"index":2856},{"krate":0,"index":2859},{"krate":0,"index":2862},{"krate":0,"index":2863},{"krate":0,"index":2866},{"krate":0,"index":2869},{"krate":0,"index":2872},{"krate":0,"index":2875},{"krate":0,"index":2878},{"krate":0,"index":3138},{"krate":0,"index":3213}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3216},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":5476,"byte_end":5480,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"Addr","qualname":"::addresses::Addr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A human readable address.","sig":null,"attributes":[{"value":"/ A human readable address.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":4449,"byte_end":4478,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":4479,"byte_end":4482,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ In Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":4483,"byte_end":4570,"line_start":11,"line_end":11,"column_start":1,"column_end":88}},{"value":"/ assumptions should be made other than being UTF-8 encoded and of reasonable length.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":4571,"byte_end":4658,"line_start":12,"line_end":12,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":4659,"byte_end":4662,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This type represents a validated address. It can be created in the following ways","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":4663,"byte_end":4748,"line_start":14,"line_end":14,"column_start":1,"column_end":86}},{"value":"/ 1. Use `Addr::unchecked(input)`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":4749,"byte_end":4784,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"/ 2. Use `let checked: Addr = deps.api.addr_validate(input)?`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":4785,"byte_end":4848,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/ 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":4849,"byte_end":4921,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ 4. Deserialize from JSON. This must only be done from JSON that was validated before","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":4922,"byte_end":5010,"line_start":18,"line_end":18,"column_start":1,"column_end":89}},{"value":"/    such as a contract's state. `Addr` must not be used in messages sent by the user","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":5011,"byte_end":5098,"line_start":19,"line_end":19,"column_start":1,"column_end":88}},{"value":"/    because this would result in unvalidated instances.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":5099,"byte_end":5157,"line_start":20,"line_end":20,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":5158,"byte_end":5161,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This type is immutable. If you really need to mutate it (Really? Are you sure?), create","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":5162,"byte_end":5253,"line_start":22,"line_end":22,"column_start":1,"column_end":92}},{"value":"/ a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":5254,"byte_end":5345,"line_start":23,"line_end":23,"column_start":1,"column_end":92}},{"value":"/ instance.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":5346,"byte_end":5359,"line_start":24,"line_end":24,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":6168,"byte_end":6177,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"unchecked","qualname":"<Addr>::unchecked","value":"pub fn unchecked<impl Into<String>: Into<String>>(impl Into<String>) -> Addr","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Addr` instance from the given input without checking the validity\n of the input. Since `Addr` must always contain valid addresses, the caller is\n responsible for ensuring the input is valid.","sig":null,"attributes":[{"value":"/ Creates a new `Addr` instance from the given input without checking the validity","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":5507,"byte_end":5591,"line_start":31,"line_end":31,"column_start":5,"column_end":89}},{"value":"/ of the input. Since `Addr` must always contain valid addresses, the caller is","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":5596,"byte_end":5677,"line_start":32,"line_end":32,"column_start":5,"column_end":86}},{"value":"/ responsible for ensuring the input is valid.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":5682,"byte_end":5730,"line_start":33,"line_end":33,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":5735,"byte_end":5738,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Use this in cases where the address was validated before or in test code.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":5743,"byte_end":5820,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ If you see this in contract code, it should most likely be replaced with","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":5825,"byte_end":5901,"line_start":36,"line_end":36,"column_start":5,"column_end":81}},{"value":"/ `let checked: Addr = deps.api.addr_humanize(canonical_addr)?`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":5906,"byte_end":5972,"line_start":37,"line_end":37,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":5977,"byte_end":5980,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":5985,"byte_end":6000,"line_start":39,"line_end":39,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":6005,"byte_end":6008,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":6013,"byte_end":6020,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Addr};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":6025,"byte_end":6056,"line_start":42,"line_end":42,"column_start":5,"column_end":36}},{"value":"/ let address = Addr::unchecked(\"foobar\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":6061,"byte_end":6105,"line_start":43,"line_end":43,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(address, \"foobar\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":6110,"byte_end":6144,"line_start":44,"line_end":44,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":6149,"byte_end":6156,"line_start":45,"line_end":45,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":6273,"byte_end":6279,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Addr>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":6252,"byte_end":6261,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":6488,"byte_end":6496,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Addr>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the UTF-8 encoded address string as a byte array.","sig":null,"attributes":[{"value":"/ Returns the UTF-8 encoded address string as a byte array.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":6332,"byte_end":6393,"line_start":55,"line_end":55,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":6398,"byte_end":6401,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `address.as_str().as_bytes()`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":6406,"byte_end":6462,"line_start":57,"line_end":57,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":6467,"byte_end":6476,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":6626,"byte_end":6637,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"into_string","qualname":"<Addr>::into_string","value":"pub fn into_string(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Utility for explicit conversion to `String`.\n","sig":null,"attributes":[{"value":"/ Utility for explicit conversion to `String`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":6552,"byte_end":6600,"line_start":63,"line_end":63,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":6605,"byte_end":6614,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3266},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":8063,"byte_end":8076,"line_start":139,"line_end":139,"column_start":12,"column_end":25},"name":"CanonicalAddr","qualname":"::addresses::CanonicalAddr","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3268},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":8077,"byte_end":8087,"line_start":139,"line_end":139,"column_start":26,"column_end":36},"name":"0","qualname":"::addresses::CanonicalAddr::0","value":"binary::Binary","parent":{"krate":0,"index":3266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":8999,"byte_end":9007,"line_start":173,"line_end":173,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<CanonicalAddr>::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3312},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":23281,"byte_end":23287,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Binary","qualname":"::binary::Binary","value":"","parent":null,"children":[],"decl_id":null,"docs":" Binary is a wrapper around Vec<u8> to add base64 de/serialization\n with serde. It also adds some helper methods to help encode inline.","sig":null,"attributes":[{"value":"/ Binary is a wrapper around Vec<u8> to add base64 de/serialization","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":22955,"byte_end":23024,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/ with serde. It also adds some helper methods to help encode inline.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":23025,"byte_end":23096,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":23097,"byte_end":23100,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":23101,"byte_end":23186,"line_start":12,"line_end":12,"column_start":1,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":3338},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":23317,"byte_end":23328,"line_start":14,"line_end":14,"column_start":48,"column_end":59},"name":"0","qualname":"::binary::Binary::0","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":3312},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"schemars(with = \"String\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":23288,"byte_end":23316,"line_start":14,"line_end":14,"column_start":19,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":23458,"byte_end":23469,"line_start":19,"line_end":19,"column_start":12,"column_end":23},"name":"from_base64","qualname":"<Binary>::from_base64","value":"pub fn from_base64(&str) -> StdResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" take an (untrusted) string and decode it into bytes.\n fails if it is not valid base64\n","sig":null,"attributes":[{"value":"/ take an (untrusted) string and decode it into bytes.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":23350,"byte_end":23406,"line_start":17,"line_end":17,"column_start":5,"column_end":61}},{"value":"/ fails if it is not valid base64","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":23411,"byte_end":23446,"line_start":18,"line_end":18,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":23788,"byte_end":23797,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"to_base64","qualname":"<Binary>::to_base64","value":"pub fn to_base64(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" encode to base64 string (guaranteed to be success as we control the data inside).\n this returns normalized form (with trailing = if needed)\n","sig":null,"attributes":[{"value":"/ encode to base64 string (guaranteed to be success as we control the data inside).","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":23626,"byte_end":23711,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ this returns normalized form (with trailing = if needed)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":23716,"byte_end":23776,"line_start":25,"line_end":25,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":23867,"byte_end":23875,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Binary>::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24919,"byte_end":24927,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Binary>::to_array","value":"pub fn to_array<const LENGTH: usize>(&Self) -> StdResult<[u8; ]>","parent":null,"children":[],"decl_id":null,"docs":" Copies content into fixed-sized array.\n The result type `A: ByteArray` is a workaround for\n the missing [const-generics](https://rust-lang.github.io/rfcs/2000-const-generics.html).\n `A` is a fixed-sized array like `[u8; 8]`.","sig":null,"attributes":[{"value":"/ Copies content into fixed-sized array.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":23931,"byte_end":23973,"line_start":34,"line_end":34,"column_start":5,"column_end":47}},{"value":"/ The result type `A: ByteArray` is a workaround for","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":23978,"byte_end":24032,"line_start":35,"line_end":35,"column_start":5,"column_end":59}},{"value":"/ the missing [const-generics](https://rust-lang.github.io/rfcs/2000-const-generics.html).","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24037,"byte_end":24129,"line_start":36,"line_end":36,"column_start":5,"column_end":97}},{"value":"/ `A` is a fixed-sized array like `[u8; 8]`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24134,"byte_end":24180,"line_start":37,"line_end":37,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24185,"byte_end":24188,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ByteArray is implemented for `[u8; 0]` to `[u8; 64]`, such that","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24193,"byte_end":24260,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ we are limited to 64 bytes for now.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24265,"byte_end":24304,"line_start":40,"line_end":40,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24309,"byte_end":24312,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24317,"byte_end":24331,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24336,"byte_end":24339,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Copy to array of explicit length","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24344,"byte_end":24380,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24385,"byte_end":24388,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24393,"byte_end":24400,"line_start":46,"line_end":46,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::Binary;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24405,"byte_end":24436,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/ let binary = Binary::from(&[0xfb, 0x1f, 0x37]);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24441,"byte_end":24492,"line_start":48,"line_end":48,"column_start":5,"column_end":56}},{"value":"/ let array: [u8; 3] = binary.to_array().unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24497,"byte_end":24549,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(array, [0xfb, 0x1f, 0x37]);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24554,"byte_end":24596,"line_start":50,"line_end":50,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24601,"byte_end":24608,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24613,"byte_end":24616,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Copy to integer","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24621,"byte_end":24640,"line_start":53,"line_end":53,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24645,"byte_end":24648,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24653,"byte_end":24660,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::Binary;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24665,"byte_end":24696,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/ let binary = Binary::from(&[0x8b, 0x67, 0x64, 0x84, 0xb5, 0xfb, 0x1f, 0x37]);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24701,"byte_end":24782,"line_start":57,"line_end":57,"column_start":5,"column_end":86}},{"value":"/ let num = u64::from_be_bytes(binary.to_array().unwrap());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24787,"byte_end":24848,"line_start":58,"line_end":58,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num, 10045108015024774967);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24853,"byte_end":24895,"line_start":59,"line_end":59,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":24900,"byte_end":24907,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3339},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":38874,"byte_end":38878,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Coin","qualname":"::coins::Coin","value":"Coin { denom, amount }","parent":null,"children":[{"krate":0,"index":3340},{"krate":0,"index":3341}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3340},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":38889,"byte_end":38894,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"denom","qualname":"::coins::Coin::denom","value":"std::string::String","parent":{"krate":0,"index":3339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3341},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":38912,"byte_end":38918,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"name":"amount","qualname":"::coins::Coin::amount","value":"math::uint128::Uint128","parent":{"krate":0,"index":3339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":38955,"byte_end":38958,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<Coin>::new","value":"pub fn new<impl Into<String>: Into<String>>(u128, impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":178},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40129,"byte_end":40134,"line_start":49,"line_end":49,"column_start":8,"column_end":13},"name":"coins","qualname":"::coins::coins","value":"pub fn coins<impl Into<String>: Into<String>>(u128, impl Into<String>)\n-> Vec<Coin>","parent":null,"children":[],"decl_id":null,"docs":" A shortcut constructor for a set of one denomination of coins","sig":null,"attributes":[{"value":"/ A shortcut constructor for a set of one denomination of coins","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":39604,"byte_end":39669,"line_start":32,"line_end":32,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":39670,"byte_end":39673,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":39674,"byte_end":39688,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":39689,"byte_end":39692,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":39693,"byte_end":39700,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{coins, BankMsg, CosmosMsg, Response, SubMsg};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":39701,"byte_end":39771,"line_start":37,"line_end":37,"column_start":1,"column_end":71}},{"value":"/ # use cosmwasm_std::testing::{mock_env, mock_info};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":39772,"byte_end":39827,"line_start":38,"line_end":38,"column_start":1,"column_end":56}},{"value":"/ # let env = mock_env();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":39828,"byte_end":39855,"line_start":39,"line_end":39,"column_start":1,"column_end":28}},{"value":"/ # let info = mock_info(\"sender\", &[]);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":39856,"byte_end":39898,"line_start":40,"line_end":40,"column_start":1,"column_end":43}},{"value":"/ let tip = coins(123, \"ucosm\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":39899,"byte_end":39933,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":39934,"byte_end":39937,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let mut response: Response = Default::default();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":39938,"byte_end":39990,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ response.messages = vec![SubMsg::new(BankMsg::Send {","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":39991,"byte_end":40047,"line_start":44,"line_end":44,"column_start":1,"column_end":57}},{"value":"/   to_address: info.sender.into(),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40048,"byte_end":40085,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/   amount: tip,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40086,"byte_end":40104,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ })];","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40105,"byte_end":40113,"line_start":47,"line_end":47,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40114,"byte_end":40121,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":180},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40770,"byte_end":40774,"line_start":73,"line_end":73,"column_start":8,"column_end":12},"name":"coin","qualname":"::coins::coin","value":"pub fn coin<impl Into<String>: Into<String>>(u128, impl Into<String>) -> Coin","parent":null,"children":[],"decl_id":null,"docs":" A shorthand constructor for Coin","sig":null,"attributes":[{"value":"/ A shorthand constructor for Coin","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40223,"byte_end":40259,"line_start":53,"line_end":53,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40260,"byte_end":40263,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40264,"byte_end":40278,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40279,"byte_end":40282,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40283,"byte_end":40290,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{coin, BankMsg, CosmosMsg, Response, SubMsg};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40291,"byte_end":40360,"line_start":58,"line_end":58,"column_start":1,"column_end":70}},{"value":"/ # use cosmwasm_std::testing::{mock_env, mock_info};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40361,"byte_end":40416,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/ # let env = mock_env();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40417,"byte_end":40444,"line_start":60,"line_end":60,"column_start":1,"column_end":28}},{"value":"/ # let info = mock_info(\"sender\", &[]);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40445,"byte_end":40487,"line_start":61,"line_end":61,"column_start":1,"column_end":43}},{"value":"/ let tip = vec![","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40488,"byte_end":40507,"line_start":62,"line_end":62,"column_start":1,"column_end":20}},{"value":"/     coin(123, \"ucosm\"),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40508,"byte_end":40535,"line_start":63,"line_end":63,"column_start":1,"column_end":28}},{"value":"/     coin(24, \"ustake\"),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40536,"byte_end":40563,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/ ];","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40564,"byte_end":40570,"line_start":65,"line_end":65,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40571,"byte_end":40574,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let mut response: Response = Default::default();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40575,"byte_end":40627,"line_start":67,"line_end":67,"column_start":1,"column_end":53}},{"value":"/ response.messages = vec![SubMsg::new(BankMsg::Send {","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40628,"byte_end":40684,"line_start":68,"line_end":68,"column_start":1,"column_end":57}},{"value":"/     to_address: info.sender.into(),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40685,"byte_end":40724,"line_start":69,"line_end":69,"column_start":1,"column_end":40}},{"value":"/     amount: tip,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40725,"byte_end":40745,"line_start":70,"line_end":70,"column_start":1,"column_end":21}},{"value":"/ })];","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40746,"byte_end":40754,"line_start":71,"line_end":71,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40755,"byte_end":40762,"line_start":72,"line_end":72,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":182},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40945,"byte_end":40954,"line_start":78,"line_end":78,"column_start":8,"column_end":17},"name":"has_coins","qualname":"::coins::has_coins","value":"pub fn has_coins(&[Coin], &Coin) -> bool","parent":null,"children":[],"decl_id":null,"docs":" has_coins returns true if the list of coins has at least the required amount\n","sig":null,"attributes":[{"value":"/ has_coins returns true if the list of coins has at least the required amount","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":40857,"byte_end":40937,"line_start":77,"line_end":77,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":213},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":44021,"byte_end":44030,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"OwnedDeps","qualname":"::deps::OwnedDeps","value":"OwnedDeps { storage, api, querier, custom_query_type }","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221}],"decl_id":null,"docs":" Holds all external dependencies of the contract.\n Designed to allow easy dependency injection at runtime.\n This cannot be copied or cloned since it would behave differently\n for mock storages and a bridge storage in the VM.\n","sig":null,"attributes":[{"value":"/ Holds all external dependencies of the contract.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":43773,"byte_end":43825,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"/ Designed to allow easy dependency injection at runtime.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":43826,"byte_end":43885,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"/ This cannot be copied or cloned since it would behave differently","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":43886,"byte_end":43955,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ for mock storages and a bridge storage in the VM.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":43956,"byte_end":44009,"line_start":11,"line_end":11,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":218},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":44097,"byte_end":44104,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"name":"storage","qualname":"::deps::OwnedDeps::storage","value":"S","parent":{"krate":0,"index":213},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":219},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":44117,"byte_end":44120,"line_start":14,"line_end":14,"column_start":9,"column_end":12},"name":"api","qualname":"::deps::OwnedDeps::api","value":"A","parent":{"krate":0,"index":213},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":220},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":44133,"byte_end":44140,"line_start":15,"line_end":15,"column_start":9,"column_end":16},"name":"querier","qualname":"::deps::OwnedDeps::querier","value":"Q","parent":{"krate":0,"index":213},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":221},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":44153,"byte_end":44170,"line_start":16,"line_end":16,"column_start":9,"column_end":26},"name":"custom_query_type","qualname":"::deps::OwnedDeps::custom_query_type","value":"std::marker::PhantomData<C>","parent":{"krate":0,"index":213},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":222},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":44202,"byte_end":44209,"line_start":19,"line_end":19,"column_start":12,"column_end":19},"name":"DepsMut","qualname":"::deps::DepsMut","value":"DepsMut { storage, api, querier }","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":225},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":44248,"byte_end":44255,"line_start":20,"line_end":20,"column_start":9,"column_end":16},"name":"storage","qualname":"::deps::DepsMut::storage","value":"&'a mut (dyn traits::Storage + 'a)","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":226},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":44286,"byte_end":44289,"line_start":21,"line_end":21,"column_start":9,"column_end":12},"name":"api","qualname":"::deps::DepsMut::api","value":"&'a (dyn traits::Api + 'a)","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":227},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":44312,"byte_end":44319,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"name":"querier","qualname":"::deps::DepsMut::querier","value":"traits::QuerierWrapper<'a, C>","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3405},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":44375,"byte_end":44379,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"Deps","qualname":"::deps::Deps","value":"Deps { storage, api, querier }","parent":null,"children":[{"krate":0,"index":3408},{"krate":0,"index":3409},{"krate":0,"index":3410}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3408},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":44418,"byte_end":44425,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"name":"storage","qualname":"::deps::Deps::storage","value":"&'a (dyn traits::Storage + 'a)","parent":{"krate":0,"index":3405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3409},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":44452,"byte_end":44455,"line_start":28,"line_end":28,"column_start":9,"column_end":12},"name":"api","qualname":"::deps::Deps::api","value":"&'a (dyn traits::Api + 'a)","parent":{"krate":0,"index":3405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3410},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":44478,"byte_end":44485,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"name":"querier","qualname":"::deps::Deps::querier","value":"traits::QuerierWrapper<'a, C>","parent":{"krate":0,"index":3405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":44946,"byte_end":44952,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<OwnedDeps<S, A, Q, C>>::as_ref","value":"pub fn as_ref(&Self) -> Deps<, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":45144,"byte_end":45150,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<OwnedDeps<S, A, Q, C>>::as_mut","value":"pub fn as_mut(&mut Self) -> DepsMut<, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":45400,"byte_end":45406,"line_start":57,"line_end":57,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<DepsMut>::as_ref","value":"pub fn as_ref(&Self) -> Deps<, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":45574,"byte_end":45580,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"branch","qualname":"<DepsMut>::branch","value":"pub fn branch(&mut Self) -> DepsMut<, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3428},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","byte_start":52348,"byte_end":52365,"line_start":11,"line_end":11,"column_start":5,"column_end":22},"name":"InvalidHashFormat","qualname":"::errors::recover_pubkey_error::RecoverPubkeyError::InvalidHashFormat","value":"RecoverPubkeyError::InvalidHashFormat","parent":{"krate":0,"index":3415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid hash format\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","byte_start":52312,"byte_end":52343,"line_start":10,"line_end":10,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3430},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","byte_start":52412,"byte_end":52434,"line_start":13,"line_end":13,"column_start":5,"column_end":27},"name":"InvalidSignatureFormat","qualname":"::errors::recover_pubkey_error::RecoverPubkeyError::InvalidSignatureFormat","value":"RecoverPubkeyError::InvalidSignatureFormat","parent":{"krate":0,"index":3415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid signature format\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","byte_start":52371,"byte_end":52407,"line_start":12,"line_end":12,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3432},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","byte_start":52511,"byte_end":52531,"line_start":15,"line_end":15,"column_start":5,"column_end":25},"name":"InvalidRecoveryParam","qualname":"::errors::recover_pubkey_error::RecoverPubkeyError::InvalidRecoveryParam","value":"RecoverPubkeyError::InvalidRecoveryParam","parent":{"krate":0,"index":3415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid recovery parameter. Supported values: 0 and 1.\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","byte_start":52440,"byte_end":52506,"line_start":14,"line_end":14,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":3434},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","byte_start":52581,"byte_end":52591,"line_start":17,"line_end":17,"column_start":5,"column_end":15},"name":"UnknownErr","qualname":"::errors::recover_pubkey_error::RecoverPubkeyError::UnknownErr","value":"RecoverPubkeyError::UnknownErr { error_code }","parent":{"krate":0,"index":3415},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unknown error: {error_code}\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","byte_start":52537,"byte_end":52576,"line_start":16,"line_end":16,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":3415},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","byte_start":52287,"byte_end":52305,"line_start":9,"line_end":9,"column_start":10,"column_end":28},"name":"RecoverPubkeyError","qualname":"::errors::recover_pubkey_error::RecoverPubkeyError","value":"pub enum RecoverPubkeyError {\n    InvalidHashFormat,\n    InvalidSignatureFormat,\n    InvalidRecoveryParam,\n    UnknownErr {\n        error_code: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":3428},{"krate":0,"index":3430},{"krate":0,"index":3432},{"krate":0,"index":3434}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","byte_start":52735,"byte_end":52746,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"unknown_err","qualname":"<RecoverPubkeyError>::unknown_err","value":"pub fn unknown_err(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3455},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":55661,"byte_end":55676,"line_start":26,"line_end":26,"column_start":5,"column_end":20},"name":"VerificationErr","qualname":"::errors::std_error::StdError::VerificationErr","value":"StdError::VerificationErr { source }","parent":{"krate":0,"index":3436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Verification error: {source}\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":55616,"byte_end":55656,"line_start":25,"line_end":25,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":3457},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":55841,"byte_end":55857,"line_start":32,"line_end":32,"column_start":5,"column_end":21},"name":"RecoverPubkeyErr","qualname":"::errors::std_error::StdError::RecoverPubkeyErr","value":"StdError::RecoverPubkeyErr { source }","parent":{"krate":0,"index":3436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Recover pubkey error: {source}\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":55794,"byte_end":55836,"line_start":31,"line_end":31,"column_start":5,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":3459},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":56072,"byte_end":56082,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"GenericErr","qualname":"::errors::std_error::StdError::GenericErr","value":"StdError::GenericErr { msg }","parent":{"krate":0,"index":3436},"children":[],"decl_id":null,"docs":" Whenever there is no specific error type available\n","sig":null,"attributes":[{"value":"/ Whenever there is no specific error type available","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":55976,"byte_end":56030,"line_start":37,"line_end":37,"column_start":5,"column_end":59}},{"value":"error(\"Generic error: {msg}\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":56035,"byte_end":56067,"line_start":38,"line_end":38,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":3461},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":56231,"byte_end":56244,"line_start":45,"line_end":45,"column_start":5,"column_end":18},"name":"InvalidBase64","qualname":"::errors::std_error::StdError::InvalidBase64","value":"StdError::InvalidBase64 { msg }","parent":{"krate":0,"index":3436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid Base64 string: {msg}\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":56186,"byte_end":56226,"line_start":44,"line_end":44,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":3463},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":56419,"byte_end":56434,"line_start":51,"line_end":51,"column_start":5,"column_end":20},"name":"InvalidDataSize","qualname":"::errors::std_error::StdError::InvalidDataSize","value":"StdError::InvalidDataSize { expected, actual }","parent":{"krate":0,"index":3436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid data size: expected={expected} actual={actual}\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":56348,"byte_end":56414,"line_start":50,"line_end":50,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":3466},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":56736,"byte_end":56747,"line_start":59,"line_end":59,"column_start":5,"column_end":16},"name":"InvalidUtf8","qualname":"::errors::std_error::StdError::InvalidUtf8","value":"StdError::InvalidUtf8 { msg }","parent":{"krate":0,"index":3436},"children":[],"decl_id":null,"docs":" Whenever UTF-8 bytes cannot be decoded into a unicode string, e.g. in String::from_utf8 or str::from_utf8.\n","sig":null,"attributes":[{"value":"/ Whenever UTF-8 bytes cannot be decoded into a unicode string, e.g. in String::from_utf8 or str::from_utf8.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":56561,"byte_end":56671,"line_start":57,"line_end":57,"column_start":5,"column_end":115}},{"value":"error(\"Cannot decode UTF8 bytes into string: {msg}\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":56676,"byte_end":56731,"line_start":58,"line_end":58,"column_start":5,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":3468},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":56884,"byte_end":56892,"line_start":65,"line_end":65,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::errors::std_error::StdError::NotFound","value":"StdError::NotFound { kind }","parent":{"krate":0,"index":3436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"{kind} not found\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":56851,"byte_end":56879,"line_start":64,"line_end":64,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":3470},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":57058,"byte_end":57066,"line_start":71,"line_end":71,"column_start":5,"column_end":13},"name":"ParseErr","qualname":"::errors::std_error::StdError::ParseErr","value":"StdError::ParseErr { target_type, msg }","parent":{"krate":0,"index":3436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Error parsing into type {target_type}: {msg}\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":56997,"byte_end":57053,"line_start":70,"line_end":70,"column_start":5,"column_end":61}}]},{"kind":"StructVariant","id":{"krate":0,"index":3473},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":57306,"byte_end":57318,"line_start":79,"line_end":79,"column_start":5,"column_end":17},"name":"SerializeErr","qualname":"::errors::std_error::StdError::SerializeErr","value":"StdError::SerializeErr { source_type, msg }","parent":{"krate":0,"index":3436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Error serializing type {source_type}: {msg}\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":57246,"byte_end":57301,"line_start":78,"line_end":78,"column_start":5,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":3476},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":57533,"byte_end":57541,"line_start":87,"line_end":87,"column_start":5,"column_end":13},"name":"Overflow","qualname":"::errors::std_error::StdError::Overflow","value":"StdError::Overflow { source }","parent":{"krate":0,"index":3436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Overflow: {source}\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":57498,"byte_end":57528,"line_start":86,"line_end":86,"column_start":5,"column_end":35}}]},{"kind":"StructVariant","id":{"krate":0,"index":3478},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":57696,"byte_end":57708,"line_start":93,"line_end":93,"column_start":5,"column_end":17},"name":"DivideByZero","qualname":"::errors::std_error::StdError::DivideByZero","value":"StdError::DivideByZero { source }","parent":{"krate":0,"index":3436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Divide by zero: {source}\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":57655,"byte_end":57691,"line_start":92,"line_end":92,"column_start":5,"column_end":41}}]},{"kind":"StructVariant","id":{"krate":0,"index":3480},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":57861,"byte_end":57879,"line_start":99,"line_end":99,"column_start":5,"column_end":23},"name":"ConversionOverflow","qualname":"::errors::std_error::StdError::ConversionOverflow","value":"StdError::ConversionOverflow { source }","parent":{"krate":0,"index":3436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Conversion error: \")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":57826,"byte_end":57856,"line_start":98,"line_end":98,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":3436},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":55601,"byte_end":55609,"line_start":24,"line_end":24,"column_start":10,"column_end":18},"name":"StdError","qualname":"::errors::std_error::StdError","value":"pub enum StdError {\n    VerificationErr {\n        source: VerificationError,\n    },\n    RecoverPubkeyErr {\n        source: RecoverPubkeyError,\n    },\n    GenericErr {\n        msg: String,\n    },\n    InvalidBase64 {\n        msg: String,\n    },\n    InvalidDataSize {\n        expected: u64,\n        actual: u64,\n    },\n    InvalidUtf8 {\n        msg: String,\n    },\n    NotFound {\n        kind: String,\n    },\n    ParseErr {\n        target_type: String,\n        msg: String,\n    },\n    SerializeErr {\n        source_type: String,\n        msg: String,\n    },\n    Overflow {\n        source: OverflowError,\n    },\n    DivideByZero {\n        source: DivideByZeroError,\n    },\n    ConversionOverflow {\n        source: ConversionOverflowError,\n    },\n}","parent":null,"children":[{"krate":0,"index":3455},{"krate":0,"index":3457},{"krate":0,"index":3459},{"krate":0,"index":3461},{"krate":0,"index":3463},{"krate":0,"index":3466},{"krate":0,"index":3468},{"krate":0,"index":3470},{"krate":0,"index":3473},{"krate":0,"index":3476},{"krate":0,"index":3478},{"krate":0,"index":3480}],"decl_id":null,"docs":" Structured error type for init, execute and query.","sig":null,"attributes":[{"value":"/ Structured error type for init, execute and query.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":54820,"byte_end":54874,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":54875,"byte_end":54878,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This can be serialized and passed over the Wasm/VM boundary, which allows us to use structured","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":54879,"byte_end":54977,"line_start":10,"line_end":10,"column_start":1,"column_end":99}},{"value":"/ error types in e.g. integration tests. In that process backtraces are stripped off.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":54978,"byte_end":55065,"line_start":11,"line_end":11,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":55066,"byte_end":55069,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The prefix \"Std\" means \"the standard error within the standard library\". This is not the only","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":55070,"byte_end":55167,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"/ result/error type in cosmwasm-std.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":55168,"byte_end":55206,"line_start":14,"line_end":14,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":55207,"byte_end":55210,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When new cases are added, they should describe the problem rather than what was attempted (e.g.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":55211,"byte_end":55310,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ InvalidBase64 is preferred over Base64DecodingErr). In the long run this allows us to get rid of","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":55311,"byte_end":55411,"line_start":17,"line_end":17,"column_start":1,"column_end":101}},{"value":"/ the duplication in \"StdError::FooErr\".","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":55412,"byte_end":55454,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":55455,"byte_end":55458,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Checklist for adding a new error:","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":55459,"byte_end":55496,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/ - Add enum case","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":55497,"byte_end":55516,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/ - Add creator function in std_error_helpers.rs","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":55517,"byte_end":55567,"line_start":22,"line_end":22,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":58045,"byte_end":58061,"line_start":108,"line_end":108,"column_start":12,"column_end":28},"name":"verification_err","qualname":"<StdError>::verification_err","value":"pub fn verification_err(VerificationError) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":58271,"byte_end":58289,"line_start":116,"line_end":116,"column_start":12,"column_end":30},"name":"recover_pubkey_err","qualname":"<StdError>::recover_pubkey_err","value":"pub fn recover_pubkey_err(RecoverPubkeyError) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":58501,"byte_end":58512,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"generic_err","qualname":"<StdError>::generic_err","value":"pub fn generic_err<impl Into<String>: Into<String>>(impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":58723,"byte_end":58737,"line_start":132,"line_end":132,"column_start":12,"column_end":26},"name":"invalid_base64","qualname":"<StdError>::invalid_base64","value":"pub fn invalid_base64<impl ToString: ToString>(impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":58952,"byte_end":58969,"line_start":140,"line_end":140,"column_start":12,"column_end":29},"name":"invalid_data_size","qualname":"<StdError>::invalid_data_size","value":"pub fn invalid_data_size(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":59333,"byte_end":59345,"line_start":150,"line_end":150,"column_start":12,"column_end":24},"name":"invalid_utf8","qualname":"<StdError>::invalid_utf8","value":"pub fn invalid_utf8<impl ToString: ToString>(impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":59558,"byte_end":59567,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"not_found","qualname":"<StdError>::not_found","value":"pub fn not_found<impl Into<String>: Into<String>>(impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":59779,"byte_end":59788,"line_start":166,"line_end":166,"column_start":12,"column_end":21},"name":"parse_err","qualname":"<StdError>::parse_err","value":"pub fn parse_err<impl Into<String>: Into<String>,\n                 impl ToString: ToString>(impl Into<String>, impl ToString)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":60065,"byte_end":60078,"line_start":175,"line_end":175,"column_start":12,"column_end":25},"name":"serialize_err","qualname":"<StdError>::serialize_err","value":"pub fn serialize_err<impl Into<String>: Into<String>,\n                     impl ToString: ToString>(impl Into<String>,\n                                              impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":60359,"byte_end":60367,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"overflow","qualname":"<StdError>::overflow","value":"pub fn overflow(OverflowError) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":60566,"byte_end":60580,"line_start":192,"line_end":192,"column_start":12,"column_end":26},"name":"divide_by_zero","qualname":"<StdError>::divide_by_zero","value":"pub fn divide_by_zero(DivideByZeroError) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":311},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":68356,"byte_end":68365,"line_start":447,"line_end":447,"column_start":10,"column_end":19},"name":"StdResult","qualname":"::errors::std_error::StdResult","value":"core::result::Result<T, StdError>","parent":null,"children":[],"decl_id":null,"docs":" The return type for init, execute and query. Since the error type cannot be serialized to JSON,\n this is only available within the contract and its unit tests.","sig":null,"attributes":[{"value":"/ The return type for init, execute and query. Since the error type cannot be serialized to JSON,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":68038,"byte_end":68137,"line_start":442,"line_end":442,"column_start":1,"column_end":100}},{"value":"/ this is only available within the contract and its unit tests.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":68138,"byte_end":68204,"line_start":443,"line_end":443,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":68205,"byte_end":68208,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ The prefix \"Std\" means \"the standard result within the standard library\". This is not the only","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":68209,"byte_end":68307,"line_start":445,"line_end":445,"column_start":1,"column_end":99}},{"value":"/ result/error type in cosmwasm-std.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":68308,"byte_end":68346,"line_start":446,"line_end":446,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3483},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":68479,"byte_end":68482,"line_start":451,"line_end":451,"column_start":5,"column_end":8},"name":"Add","qualname":"::errors::std_error::OverflowOperation::Add","value":"OverflowOperation::Add","parent":{"krate":0,"index":3482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3485},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":68488,"byte_end":68491,"line_start":452,"line_end":452,"column_start":5,"column_end":8},"name":"Sub","qualname":"::errors::std_error::OverflowOperation::Sub","value":"OverflowOperation::Sub","parent":{"krate":0,"index":3482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3487},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":68497,"byte_end":68500,"line_start":453,"line_end":453,"column_start":5,"column_end":8},"name":"Mul","qualname":"::errors::std_error::OverflowOperation::Mul","value":"OverflowOperation::Mul","parent":{"krate":0,"index":3482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3489},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":68506,"byte_end":68509,"line_start":454,"line_end":454,"column_start":5,"column_end":8},"name":"Pow","qualname":"::errors::std_error::OverflowOperation::Pow","value":"OverflowOperation::Pow","parent":{"krate":0,"index":3482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3491},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":68515,"byte_end":68518,"line_start":455,"line_end":455,"column_start":5,"column_end":8},"name":"Shr","qualname":"::errors::std_error::OverflowOperation::Shr","value":"OverflowOperation::Shr","parent":{"krate":0,"index":3482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3493},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":68524,"byte_end":68527,"line_start":456,"line_end":456,"column_start":5,"column_end":8},"name":"Shl","qualname":"::errors::std_error::OverflowOperation::Shl","value":"OverflowOperation::Shl","parent":{"krate":0,"index":3482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3482},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":68455,"byte_end":68472,"line_start":450,"line_end":450,"column_start":10,"column_end":27},"name":"OverflowOperation","qualname":"::errors::std_error::OverflowOperation","value":"pub enum OverflowOperation { Add, Sub, Mul, Pow, Shr, Shl, }","parent":null,"children":[{"krate":0,"index":3483},{"krate":0,"index":3485},{"krate":0,"index":3487},{"krate":0,"index":3489},{"krate":0,"index":3491},{"krate":0,"index":3493}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3523},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":68786,"byte_end":68799,"line_start":467,"line_end":467,"column_start":12,"column_end":25},"name":"OverflowError","qualname":"::errors::std_error::OverflowError","value":"OverflowError { operation, operand1, operand2 }","parent":null,"children":[{"krate":0,"index":3524},{"krate":0,"index":3525},{"krate":0,"index":3526}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Cannot {operation} with {operand1} and {operand2}\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":68713,"byte_end":68774,"line_start":466,"line_end":466,"column_start":1,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":3524},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":68810,"byte_end":68819,"line_start":468,"line_end":468,"column_start":9,"column_end":18},"name":"operation","qualname":"::errors::std_error::OverflowError::operation","value":"errors::std_error::OverflowOperation","parent":{"krate":0,"index":3523},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3525},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":68848,"byte_end":68856,"line_start":469,"line_end":469,"column_start":9,"column_end":17},"name":"operand1","qualname":"::errors::std_error::OverflowError::operand1","value":"std::string::String","parent":{"krate":0,"index":3523},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3526},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":68874,"byte_end":68882,"line_start":470,"line_end":470,"column_start":9,"column_end":17},"name":"operand2","qualname":"::errors::std_error::OverflowError::operand2","value":"std::string::String","parent":{"krate":0,"index":3523},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":68927,"byte_end":68930,"line_start":474,"line_end":474,"column_start":12,"column_end":15},"name":"new","qualname":"<OverflowError>::new","value":"pub fn new<impl ToString: ToString,\n           impl ToString: ToString>(OverflowOperation, impl ToString,\n                                    impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3546},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":69556,"byte_end":69579,"line_start":495,"line_end":495,"column_start":12,"column_end":35},"name":"ConversionOverflowError","qualname":"::errors::std_error::ConversionOverflowError","value":"ConversionOverflowError { source_type, target_type, value }","parent":null,"children":[{"krate":0,"index":3547},{"krate":0,"index":3548},{"krate":0,"index":3549}],"decl_id":null,"docs":" The error returned by [`TryFrom`] conversions that overflow, for example\n when converting from [`Uint256`] to [`Uint128`].","sig":null,"attributes":[{"value":"/ The error returned by [`TryFrom`] conversions that overflow, for example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":69197,"byte_end":69273,"line_start":487,"line_end":487,"column_start":1,"column_end":77}},{"value":"/ when converting from [`Uint256`] to [`Uint128`].","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":69274,"byte_end":69326,"line_start":488,"line_end":488,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":69327,"byte_end":69330,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ [`TryFrom`]: std::convert::TryFrom","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":69331,"byte_end":69369,"line_start":490,"line_end":490,"column_start":1,"column_end":39}},{"value":"/ [`Uint256`]: crate::Uint256","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":69370,"byte_end":69401,"line_start":491,"line_end":491,"column_start":1,"column_end":32}},{"value":"/ [`Uint128`]: crate::Uint128","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":69402,"byte_end":69433,"line_start":492,"line_end":492,"column_start":1,"column_end":32}},{"value":"error(\"Error converting {source_type} to {target_type} for {value}\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":69473,"byte_end":69544,"line_start":494,"line_end":494,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3547},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":69590,"byte_end":69601,"line_start":496,"line_end":496,"column_start":9,"column_end":20},"name":"source_type","qualname":"::errors::std_error::ConversionOverflowError::source_type","value":"&'static str","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3548},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":69625,"byte_end":69636,"line_start":497,"line_end":497,"column_start":9,"column_end":20},"name":"target_type","qualname":"::errors::std_error::ConversionOverflowError::target_type","value":"&'static str","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3549},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":69660,"byte_end":69665,"line_start":498,"line_end":498,"column_start":9,"column_end":14},"name":"value","qualname":"::errors::std_error::ConversionOverflowError::value","value":"std::string::String","parent":{"krate":0,"index":3546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":69720,"byte_end":69723,"line_start":502,"line_end":502,"column_start":12,"column_end":15},"name":"new","qualname":"<ConversionOverflowError>::new","value":"pub fn new<impl Into<String>: Into<String>>(&'static str, &'static str,\n                                            impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3569},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":70056,"byte_end":70073,"line_start":517,"line_end":517,"column_start":12,"column_end":29},"name":"DivideByZeroError","qualname":"::errors::std_error::DivideByZeroError","value":"DivideByZeroError { operand }","parent":null,"children":[{"krate":0,"index":3570}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Cannot devide {operand} by zero\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":70001,"byte_end":70044,"line_start":516,"line_end":516,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3570},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":70084,"byte_end":70091,"line_start":518,"line_end":518,"column_start":9,"column_end":16},"name":"operand","qualname":"::errors::std_error::DivideByZeroError::operand","value":"std::string::String","parent":{"krate":0,"index":3569},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":70140,"byte_end":70143,"line_start":522,"line_end":522,"column_start":12,"column_end":15},"name":"new","qualname":"<DivideByZeroError>::new","value":"pub fn new<impl ToString: ToString>(impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3807},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/system_error.rs","byte_start":78883,"byte_end":78897,"line_start":19,"line_end":19,"column_start":5,"column_end":19},"name":"InvalidRequest","qualname":"::errors::system_error::SystemError::InvalidRequest","value":"SystemError::InvalidRequest { error, request }","parent":{"krate":0,"index":3806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3810},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/system_error.rs","byte_start":78959,"byte_end":78974,"line_start":23,"line_end":23,"column_start":5,"column_end":20},"name":"InvalidResponse","qualname":"::errors::system_error::SystemError::InvalidResponse","value":"SystemError::InvalidResponse { error, response }","parent":{"krate":0,"index":3806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3813},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/system_error.rs","byte_start":79037,"byte_end":79051,"line_start":27,"line_end":27,"column_start":5,"column_end":19},"name":"NoSuchContract","qualname":"::errors::system_error::SystemError::NoSuchContract","value":"SystemError::NoSuchContract { addr }","parent":{"krate":0,"index":3806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3815},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/system_error.rs","byte_start":79139,"byte_end":79146,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::errors::system_error::SystemError::Unknown","value":"SystemError::Unknown {  }","parent":{"krate":0,"index":3806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3816},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/system_error.rs","byte_start":79155,"byte_end":79173,"line_start":32,"line_end":32,"column_start":5,"column_end":23},"name":"UnsupportedRequest","qualname":"::errors::system_error::SystemError::UnsupportedRequest","value":"SystemError::UnsupportedRequest { kind }","parent":{"krate":0,"index":3806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3806},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/system_error.rs","byte_start":78865,"byte_end":78876,"line_start":18,"line_end":18,"column_start":10,"column_end":21},"name":"SystemError","qualname":"::errors::system_error::SystemError","value":"pub enum SystemError {\n    InvalidRequest {\n        error: String,\n        request: Binary,\n    },\n    InvalidResponse {\n        error: String,\n        response: Binary,\n    },\n    NoSuchContract {\n        addr: String,\n    },\n    Unknown {\n    },\n    UnsupportedRequest {\n        kind: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":3807},{"krate":0,"index":3810},{"krate":0,"index":3813},{"krate":0,"index":3815},{"krate":0,"index":3816}],"decl_id":null,"docs":" SystemError is used for errors inside the VM and is API friendly (i.e. serializable).","sig":null,"attributes":[{"value":"/ SystemError is used for errors inside the VM and is API friendly (i.e. serializable).","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/system_error.rs","byte_start":78138,"byte_end":78227,"line_start":6,"line_end":6,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/system_error.rs","byte_start":78228,"byte_end":78231,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is used on return values for Querier as a nested result: Result<StdResult<T>, SystemError>","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/system_error.rs","byte_start":78232,"byte_end":78331,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ The first wrap (SystemError) will trigger if the contract address doesn't exist,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/system_error.rs","byte_start":78332,"byte_end":78416,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/ the QueryRequest is malformated, etc. The second wrap will be an error message from","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/system_error.rs","byte_start":78417,"byte_end":78504,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"/ the contract itself.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/system_error.rs","byte_start":78505,"byte_end":78529,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/system_error.rs","byte_start":78530,"byte_end":78533,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Such errors are only created by the VM. The error type is defined in the standard library, to ensure","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/system_error.rs","byte_start":78534,"byte_end":78638,"line_start":13,"line_end":13,"column_start":1,"column_end":105}},{"value":"/ the contract understands the error format without creating a dependency on cosmwasm-vm.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/system_error.rs","byte_start":78639,"byte_end":78730,"line_start":14,"line_end":14,"column_start":1,"column_end":92}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/system_error.rs","byte_start":78802,"byte_end":78837,"line_start":16,"line_end":16,"column_start":1,"column_end":36}},{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/system_error.rs","byte_start":78838,"byte_end":78855,"line_start":17,"line_end":17,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3831},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/verification_error.rs","byte_start":80426,"byte_end":80434,"line_start":12,"line_end":12,"column_start":5,"column_end":13},"name":"BatchErr","qualname":"::errors::verification_error::VerificationError::BatchErr","value":"VerificationError::BatchErr","parent":{"krate":0,"index":3818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Batch error\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/verification_error.rs","byte_start":80398,"byte_end":80421,"line_start":11,"line_end":11,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3833},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/verification_error.rs","byte_start":80470,"byte_end":80480,"line_start":14,"line_end":14,"column_start":5,"column_end":15},"name":"GenericErr","qualname":"::errors::verification_error::VerificationError::GenericErr","value":"VerificationError::GenericErr","parent":{"krate":0,"index":3818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Generic error\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/verification_error.rs","byte_start":80440,"byte_end":80465,"line_start":13,"line_end":13,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3835},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/verification_error.rs","byte_start":80522,"byte_end":80539,"line_start":16,"line_end":16,"column_start":5,"column_end":22},"name":"InvalidHashFormat","qualname":"::errors::verification_error::VerificationError::InvalidHashFormat","value":"VerificationError::InvalidHashFormat","parent":{"krate":0,"index":3818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid hash format\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/verification_error.rs","byte_start":80486,"byte_end":80517,"line_start":15,"line_end":15,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3837},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/verification_error.rs","byte_start":80586,"byte_end":80608,"line_start":18,"line_end":18,"column_start":5,"column_end":27},"name":"InvalidSignatureFormat","qualname":"::errors::verification_error::VerificationError::InvalidSignatureFormat","value":"VerificationError::InvalidSignatureFormat","parent":{"krate":0,"index":3818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid signature format\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/verification_error.rs","byte_start":80545,"byte_end":80581,"line_start":17,"line_end":17,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3839},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/verification_error.rs","byte_start":80656,"byte_end":80675,"line_start":20,"line_end":20,"column_start":5,"column_end":24},"name":"InvalidPubkeyFormat","qualname":"::errors::verification_error::VerificationError::InvalidPubkeyFormat","value":"VerificationError::InvalidPubkeyFormat","parent":{"krate":0,"index":3818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid public key format\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/verification_error.rs","byte_start":80614,"byte_end":80651,"line_start":19,"line_end":19,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3841},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/verification_error.rs","byte_start":80752,"byte_end":80772,"line_start":22,"line_end":22,"column_start":5,"column_end":25},"name":"InvalidRecoveryParam","qualname":"::errors::verification_error::VerificationError::InvalidRecoveryParam","value":"VerificationError::InvalidRecoveryParam","parent":{"krate":0,"index":3818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid recovery parameter. Supported values: 0 and 1.\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/verification_error.rs","byte_start":80681,"byte_end":80747,"line_start":21,"line_end":21,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":3843},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/verification_error.rs","byte_start":80822,"byte_end":80832,"line_start":24,"line_end":24,"column_start":5,"column_end":15},"name":"UnknownErr","qualname":"::errors::verification_error::VerificationError::UnknownErr","value":"VerificationError::UnknownErr { error_code }","parent":{"krate":0,"index":3818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unknown error: {error_code}\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/verification_error.rs","byte_start":80778,"byte_end":80817,"line_start":23,"line_end":23,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":3818},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/verification_error.rs","byte_start":80374,"byte_end":80391,"line_start":10,"line_end":10,"column_start":10,"column_end":27},"name":"VerificationError","qualname":"::errors::verification_error::VerificationError","value":"pub enum VerificationError {\n    BatchErr,\n    GenericErr,\n    InvalidHashFormat,\n    InvalidSignatureFormat,\n    InvalidPubkeyFormat,\n    InvalidRecoveryParam,\n    UnknownErr {\n        error_code: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":3831},{"krate":0,"index":3833},{"krate":0,"index":3835},{"krate":0,"index":3837},{"krate":0,"index":3839},{"krate":0,"index":3841},{"krate":0,"index":3843}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/verification_error.rs","byte_start":80975,"byte_end":80986,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"unknown_err","qualname":"<VerificationError>::unknown_err","value":"pub fn unknown_err(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4017},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":84611,"byte_end":84619,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"Transfer","qualname":"::ibc::IbcMsg::Transfer","value":"IbcMsg::Transfer { channel_id, to_address, amount, timeout }","parent":{"krate":0,"index":4016},"children":[],"decl_id":null,"docs":" Sends bank tokens owned by the contract to the given address on another chain.\n The channel must already be established between the ibctransfer module on this chain\n and a matching module on the remote chain.\n We cannot select the port_id, this is whatever the local chain has bound the ibctransfer\n module to.\n","sig":null,"attributes":[{"value":"/ Sends bank tokens owned by the contract to the given address on another chain.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":84264,"byte_end":84346,"line_start":22,"line_end":22,"column_start":5,"column_end":87}},{"value":"/ The channel must already be established between the ibctransfer module on this chain","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":84351,"byte_end":84439,"line_start":23,"line_end":23,"column_start":5,"column_end":93}},{"value":"/ and a matching module on the remote chain.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":84444,"byte_end":84490,"line_start":24,"line_end":24,"column_start":5,"column_end":51}},{"value":"/ We cannot select the port_id, this is whatever the local chain has bound the ibctransfer","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":84495,"byte_end":84587,"line_start":25,"line_end":25,"column_start":5,"column_end":97}},{"value":"/ module to.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":84592,"byte_end":84606,"line_start":26,"line_end":26,"column_start":5,"column_end":19}}]},{"kind":"StructVariant","id":{"krate":0,"index":4022},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":85303,"byte_end":85313,"line_start":41,"line_end":41,"column_start":5,"column_end":15},"name":"SendPacket","qualname":"::ibc::IbcMsg::SendPacket","value":"IbcMsg::SendPacket { channel_id, data, timeout }","parent":{"krate":0,"index":4016},"children":[],"decl_id":null,"docs":" Sends an IBC packet with given data over the existing channel.\n Data should be encoded in a format defined by the channel version,\n and the module on the other side should know how to parse this.\n","sig":null,"attributes":[{"value":"/ Sends an IBC packet with given data over the existing channel.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":85085,"byte_end":85151,"line_start":38,"line_end":38,"column_start":5,"column_end":71}},{"value":"/ Data should be encoded in a format defined by the channel version,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":85156,"byte_end":85226,"line_start":39,"line_end":39,"column_start":5,"column_end":75}},{"value":"/ and the module on the other side should know how to parse this.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":85231,"byte_end":85298,"line_start":40,"line_end":40,"column_start":5,"column_end":72}}]},{"kind":"StructVariant","id":{"krate":0,"index":4026},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":85599,"byte_end":85611,"line_start":49,"line_end":49,"column_start":5,"column_end":17},"name":"CloseChannel","qualname":"::ibc::IbcMsg::CloseChannel","value":"IbcMsg::CloseChannel { channel_id }","parent":{"krate":0,"index":4016},"children":[],"decl_id":null,"docs":" This will close an existing channel that is owned by this contract.\n Port is auto-assigned to the contract's IBC port\n","sig":null,"attributes":[{"value":"/ This will close an existing channel that is owned by this contract.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":85466,"byte_end":85537,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/ Port is auto-assigned to the contract's IBC port","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":85542,"byte_end":85594,"line_start":48,"line_end":48,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":4016},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":84251,"byte_end":84257,"line_start":21,"line_end":21,"column_start":10,"column_end":16},"name":"IbcMsg","qualname":"::ibc::IbcMsg","value":"pub enum IbcMsg {\n    Transfer {\n        channel_id: String,\n        to_address: String,\n        amount: Coin,\n        timeout: IbcTimeout,\n    },\n    SendPacket {\n        channel_id: String,\n        data: Binary,\n        timeout: IbcTimeout,\n    },\n    CloseChannel {\n        channel_id: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":4017},{"krate":0,"index":4022},{"krate":0,"index":4026}],"decl_id":null,"docs":" These are messages in the IBC lifecycle. Only usable by IBC-enabled contracts\n (contracts that directly speak the IBC protocol via 6 entry points)\n","sig":null,"attributes":[{"value":"/ These are messages in the IBC lifecycle. Only usable by IBC-enabled contracts","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":83963,"byte_end":84044,"line_start":16,"line_end":16,"column_start":1,"column_end":82}},{"value":"/ (contracts that directly speak the IBC protocol via 6 entry points)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":84045,"byte_end":84116,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":84117,"byte_end":84134,"line_start":18,"line_end":18,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":84206,"byte_end":84241,"line_start":20,"line_end":20,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4028},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":85721,"byte_end":85732,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"name":"IbcEndpoint","qualname":"::ibc::IbcEndpoint","value":"IbcEndpoint { port_id, channel_id }","parent":null,"children":[{"krate":0,"index":4029},{"krate":0,"index":4030}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4029},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":85743,"byte_end":85750,"line_start":54,"line_end":54,"column_start":9,"column_end":16},"name":"port_id","qualname":"::ibc::IbcEndpoint::port_id","value":"std::string::String","parent":{"krate":0,"index":4028},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4030},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":85768,"byte_end":85778,"line_start":55,"line_end":55,"column_start":9,"column_end":19},"name":"channel_id","qualname":"::ibc::IbcEndpoint::channel_id","value":"std::string::String","parent":{"krate":0,"index":4028},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4153},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":86120,"byte_end":86130,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"IbcTimeout","qualname":"::ibc::IbcTimeout","value":"IbcTimeout {  }","parent":null,"children":[{"krate":0,"index":4154},{"krate":0,"index":4155}],"decl_id":null,"docs":" In IBC each package must set at least one type of timeout:\n the timestamp or the block height. Using this rather complex enum instead of\n two timeout fields we ensure that at least one timeout is set.\n","sig":null,"attributes":[{"value":"/ In IBC each package must set at least one type of timeout:","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":85791,"byte_end":85853,"line_start":58,"line_end":58,"column_start":1,"column_end":63}},{"value":"/ the timestamp or the block height. Using this rather complex enum instead of","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":85854,"byte_end":85934,"line_start":59,"line_end":59,"column_start":1,"column_end":81}},{"value":"/ two timeout fields we ensure that at least one timeout is set.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":85935,"byte_end":86001,"line_start":60,"line_end":60,"column_start":1,"column_end":67}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":86073,"byte_end":86108,"line_start":62,"line_end":62,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":86335,"byte_end":86345,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"with_block","qualname":"<IbcTimeout>::with_block","value":"pub fn with_block(IbcTimeoutBlock) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":86490,"byte_end":86504,"line_start":77,"line_end":77,"column_start":12,"column_end":26},"name":"with_timestamp","qualname":"<IbcTimeout>::with_timestamp","value":"pub fn with_timestamp(Timestamp) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":86651,"byte_end":86660,"line_start":84,"line_end":84,"column_start":12,"column_end":21},"name":"with_both","qualname":"<IbcTimeout>::with_both","value":"pub fn with_both(IbcTimeoutBlock, Timestamp) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":86838,"byte_end":86843,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"block","qualname":"<IbcTimeout>::block","value":"pub fn block(&Self) -> Option<IbcTimeoutBlock>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":86917,"byte_end":86926,"line_start":95,"line_end":95,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<IbcTimeout>::timestamp","value":"pub fn timestamp(&Self) -> Option<Timestamp>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4156},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":87570,"byte_end":87580,"line_start":118,"line_end":118,"column_start":12,"column_end":22},"name":"IbcChannel","qualname":"::ibc::IbcChannel","value":"IbcChannel { endpoint, counterparty_endpoint, order, version, connection_id }","parent":null,"children":[{"krate":0,"index":4157},{"krate":0,"index":4158},{"krate":0,"index":4159},{"krate":0,"index":4160},{"krate":0,"index":4161}],"decl_id":null,"docs":" IbcChannel defines all information on a channel.\n This is generally used in the hand-shake process, but can be queried directly.\n","sig":null,"attributes":[{"value":"/ IbcChannel defines all information on a channel.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":87334,"byte_end":87386,"line_start":114,"line_end":114,"column_start":1,"column_end":53}},{"value":"/ This is generally used in the hand-shake process, but can be queried directly.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":87387,"byte_end":87469,"line_start":115,"line_end":115,"column_start":1,"column_end":83}},{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":87541,"byte_end":87558,"line_start":117,"line_end":117,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":4157},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":87591,"byte_end":87599,"line_start":119,"line_end":119,"column_start":9,"column_end":17},"name":"endpoint","qualname":"::ibc::IbcChannel::endpoint","value":"ibc::IbcEndpoint","parent":{"krate":0,"index":4156},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4158},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":87622,"byte_end":87643,"line_start":120,"line_end":120,"column_start":9,"column_end":30},"name":"counterparty_endpoint","qualname":"::ibc::IbcChannel::counterparty_endpoint","value":"ibc::IbcEndpoint","parent":{"krate":0,"index":4156},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4159},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":87666,"byte_end":87671,"line_start":121,"line_end":121,"column_start":9,"column_end":14},"name":"order","qualname":"::ibc::IbcChannel::order","value":"ibc::IbcOrder","parent":{"krate":0,"index":4156},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4160},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":87691,"byte_end":87698,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"name":"version","qualname":"::ibc::IbcChannel::version","value":"std::string::String","parent":{"krate":0,"index":4156},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4161},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":87846,"byte_end":87859,"line_start":125,"line_end":125,"column_start":9,"column_end":22},"name":"connection_id","qualname":"::ibc::IbcChannel::connection_id","value":"std::string::String","parent":{"krate":0,"index":4156},"children":[],"decl_id":null,"docs":" The connection upon which this channel was created. If this is a multi-hop\n channel, we only expose the first hop.\n","sig":null,"attributes":[{"value":"/ The connection upon which this channel was created. If this is a multi-hop","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":87712,"byte_end":87790,"line_start":123,"line_end":123,"column_start":5,"column_end":83}},{"value":"/ channel, we only expose the first hop.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":87795,"byte_end":87837,"line_start":124,"line_end":124,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":87937,"byte_end":87940,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"new","qualname":"<IbcChannel>::new","value":"pub fn new<impl Into<String>: Into<String>,\n           impl Into<String>: Into<String>>(IbcEndpoint, IbcEndpoint,\n                                            IbcOrder, impl Into<String>,\n                                            impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new IbcChannel.\n","sig":null,"attributes":[{"value":"/ Construct a new IbcChannel.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":87894,"byte_end":87925,"line_start":129,"line_end":129,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4286},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":88707,"byte_end":88716,"line_start":153,"line_end":153,"column_start":5,"column_end":14},"name":"Unordered","qualname":"::ibc::IbcOrder::Unordered","value":"IbcOrder::Unordered","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ORDER_UNORDERED\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":88666,"byte_end":88702,"line_start":152,"line_end":152,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4288},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":88761,"byte_end":88768,"line_start":155,"line_end":155,"column_start":5,"column_end":12},"name":"Ordered","qualname":"::ibc::IbcOrder::Ordered","value":"IbcOrder::Ordered","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ORDER_ORDERED\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":88722,"byte_end":88756,"line_start":154,"line_end":154,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":4229},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":88651,"byte_end":88659,"line_start":151,"line_end":151,"column_start":10,"column_end":18},"name":"IbcOrder","qualname":"::ibc::IbcOrder","value":"pub enum IbcOrder { Unordered, Ordered, }","parent":null,"children":[{"krate":0,"index":4286},{"krate":0,"index":4288}],"decl_id":null,"docs":" IbcOrder defines if a channel is ORDERED or UNORDERED\n Values come from https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/ibc/core/channel/v1/channel.proto#L69-L80\n Naming comes from the protobuf files and go translations.\n","sig":null,"attributes":[{"value":"/ IbcOrder defines if a channel is ORDERED or UNORDERED","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":88332,"byte_end":88389,"line_start":147,"line_end":147,"column_start":1,"column_end":58}},{"value":"/ Values come from https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/ibc/core/channel/v1/channel.proto#L69-L80","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":88390,"byte_end":88508,"line_start":148,"line_end":148,"column_start":1,"column_end":119}},{"value":"/ Naming comes from the protobuf files and go translations.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":88509,"byte_end":88570,"line_start":149,"line_end":149,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":4290},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":89086,"byte_end":89101,"line_start":163,"line_end":163,"column_start":12,"column_end":27},"name":"IbcTimeoutBlock","qualname":"::ibc::IbcTimeoutBlock","value":"IbcTimeoutBlock { revision, height }","parent":null,"children":[{"krate":0,"index":4291},{"krate":0,"index":4292}],"decl_id":null,"docs":" IBCTimeoutHeight Height is a monotonically increasing data type\n that can be compared against another Height for the purposes of updating and\n freezing clients.\n Ordering is (revision_number, timeout_height)\n","sig":null,"attributes":[{"value":"/ IBCTimeoutHeight Height is a monotonically increasing data type","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":88773,"byte_end":88840,"line_start":158,"line_end":158,"column_start":1,"column_end":68}},{"value":"/ that can be compared against another Height for the purposes of updating and","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":88841,"byte_end":88921,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ freezing clients.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":88922,"byte_end":88943,"line_start":160,"line_end":160,"column_start":1,"column_end":22}},{"value":"/ Ordering is (revision_number, timeout_height)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":88944,"byte_end":88993,"line_start":161,"line_end":161,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":4291},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":89247,"byte_end":89255,"line_start":166,"line_end":166,"column_start":9,"column_end":17},"name":"revision","qualname":"::ibc::IbcTimeoutBlock::revision","value":"u64","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" the version that the client is currently on\n (eg. after reseting the chain this could increment 1 as height drops to 0)\n","sig":null,"attributes":[{"value":"/ the version that the client is currently on","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":89108,"byte_end":89155,"line_start":164,"line_end":164,"column_start":5,"column_end":52}},{"value":"/ (eg. after reseting the chain this could increment 1 as height drops to 0)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":89160,"byte_end":89238,"line_start":165,"line_end":165,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":4292},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":89370,"byte_end":89376,"line_start":169,"line_end":169,"column_start":9,"column_end":15},"name":"height","qualname":"::ibc::IbcTimeoutBlock::height","value":"u64","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" block height after which the packet times out.\n the height within the given revision\n","sig":null,"attributes":[{"value":"/ block height after which the packet times out.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":89266,"byte_end":89316,"line_start":167,"line_end":167,"column_start":5,"column_end":55}},{"value":"/ the height within the given revision","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":89321,"byte_end":89361,"line_start":168,"line_end":168,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":89420,"byte_end":89427,"line_start":173,"line_end":173,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<IbcTimeoutBlock>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4358},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":89978,"byte_end":89987,"line_start":195,"line_end":195,"column_start":12,"column_end":21},"name":"IbcPacket","qualname":"::ibc::IbcPacket","value":"IbcPacket { data, src, dest, sequence, timeout }","parent":null,"children":[{"krate":0,"index":4359},{"krate":0,"index":4360},{"krate":0,"index":4361},{"krate":0,"index":4362},{"krate":0,"index":4363}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":89949,"byte_end":89966,"line_start":194,"line_end":194,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":4359},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":90058,"byte_end":90062,"line_start":197,"line_end":197,"column_start":9,"column_end":13},"name":"data","qualname":"::ibc::IbcPacket::data","value":"binary::Binary","parent":{"krate":0,"index":4358},"children":[],"decl_id":null,"docs":" The raw data sent from the other side in the packet\n","sig":null,"attributes":[{"value":"/ The raw data sent from the other side in the packet","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":89994,"byte_end":90049,"line_start":196,"line_end":196,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":4360},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":90142,"byte_end":90145,"line_start":199,"line_end":199,"column_start":9,"column_end":12},"name":"src","qualname":"::ibc::IbcPacket::src","value":"ibc::IbcEndpoint","parent":{"krate":0,"index":4358},"children":[],"decl_id":null,"docs":" identifies the channel and port on the sending chain.\n","sig":null,"attributes":[{"value":"/ identifies the channel and port on the sending chain.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":90076,"byte_end":90133,"line_start":198,"line_end":198,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":4361},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":90232,"byte_end":90236,"line_start":201,"line_end":201,"column_start":9,"column_end":13},"name":"dest","qualname":"::ibc::IbcPacket::dest","value":"ibc::IbcEndpoint","parent":{"krate":0,"index":4358},"children":[],"decl_id":null,"docs":" identifies the channel and port on the receiving chain.\n","sig":null,"attributes":[{"value":"/ identifies the channel and port on the receiving chain.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":90164,"byte_end":90223,"line_start":200,"line_end":200,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":4362},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":90322,"byte_end":90330,"line_start":203,"line_end":203,"column_start":9,"column_end":17},"name":"sequence","qualname":"::ibc::IbcPacket::sequence","value":"u64","parent":{"krate":0,"index":4358},"children":[],"decl_id":null,"docs":" The sequence number of the packet on the given channel\n","sig":null,"attributes":[{"value":"/ The sequence number of the packet on the given channel","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":90255,"byte_end":90313,"line_start":202,"line_end":202,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":4363},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":90345,"byte_end":90352,"line_start":204,"line_end":204,"column_start":9,"column_end":16},"name":"timeout","qualname":"::ibc::IbcPacket::timeout","value":"ibc::IbcTimeout","parent":{"krate":0,"index":4358},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":90432,"byte_end":90435,"line_start":209,"line_end":209,"column_start":12,"column_end":15},"name":"new","qualname":"<IbcPacket>::new","value":"pub fn new<impl Into<Binary>: Into<Binary>>(impl Into<Binary>, IbcEndpoint,\n                                            IbcEndpoint, u64, IbcTimeout)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new IbcPacket.\n","sig":null,"attributes":[{"value":"/ Construct a new IbcPacket.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":90390,"byte_end":90420,"line_start":208,"line_end":208,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4431},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":90834,"byte_end":90852,"line_start":228,"line_end":228,"column_start":12,"column_end":30},"name":"IbcAcknowledgement","qualname":"::ibc::IbcAcknowledgement","value":"IbcAcknowledgement { data }","parent":null,"children":[{"krate":0,"index":4432}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":90805,"byte_end":90822,"line_start":227,"line_end":227,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":4432},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":90863,"byte_end":90867,"line_start":229,"line_end":229,"column_start":9,"column_end":13},"name":"data","qualname":"::ibc::IbcAcknowledgement::data","value":"binary::Binary","parent":{"krate":0,"index":4431},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":91086,"byte_end":91089,"line_start":235,"line_end":235,"column_start":12,"column_end":15},"name":"new","qualname":"<IbcAcknowledgement>::new","value":"pub fn new<impl Into<Binary>: Into<Binary>>(impl Into<Binary>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":91192,"byte_end":91203,"line_start":239,"line_end":239,"column_start":12,"column_end":23},"name":"encode_json","qualname":"<IbcAcknowledgement>::encode_json","value":"pub fn encode_json<impl Serialize: Serialize>(&impl Serialize)\n-> StdResult<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4620},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":91702,"byte_end":91710,"line_start":252,"line_end":252,"column_start":5,"column_end":13},"name":"OpenInit","qualname":"::ibc::IbcChannelOpenMsg::OpenInit","value":"IbcChannelOpenMsg::OpenInit { channel }","parent":{"krate":0,"index":4619},"children":[],"decl_id":null,"docs":" The ChanOpenInit step from https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#channel-lifecycle-management\n","sig":null,"attributes":[{"value":"/ The ChanOpenInit step from https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#channel-lifecycle-management","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":91549,"byte_end":91697,"line_start":251,"line_end":251,"column_start":5,"column_end":153}}]},{"kind":"StructVariant","id":{"krate":0,"index":4622},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":91892,"byte_end":91899,"line_start":254,"line_end":254,"column_start":5,"column_end":12},"name":"OpenTry","qualname":"::ibc::IbcChannelOpenMsg::OpenTry","value":"IbcChannelOpenMsg::OpenTry { channel, counterparty_version }","parent":{"krate":0,"index":4619},"children":[],"decl_id":null,"docs":" The ChanOpenTry step from https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#channel-lifecycle-management\n","sig":null,"attributes":[{"value":"/ The ChanOpenTry step from https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#channel-lifecycle-management","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":91740,"byte_end":91887,"line_start":253,"line_end":253,"column_start":5,"column_end":152}}]},{"kind":"Enum","id":{"krate":0,"index":4619},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":91525,"byte_end":91542,"line_start":250,"line_end":250,"column_start":10,"column_end":27},"name":"IbcChannelOpenMsg","qualname":"::ibc::IbcChannelOpenMsg","value":"pub enum IbcChannelOpenMsg {\n    OpenInit {\n        channel: IbcChannel,\n    },\n    OpenTry {\n        channel: IbcChannel,\n        counterparty_version: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":4620},{"krate":0,"index":4622}],"decl_id":null,"docs":" The message that is passed into `ibc_channel_open`\n","sig":null,"attributes":[{"value":"/ The message that is passed into `ibc_channel_open`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":91336,"byte_end":91390,"line_start":246,"line_end":246,"column_start":1,"column_end":55}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":91462,"byte_end":91497,"line_start":248,"line_end":248,"column_start":1,"column_end":36}},{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":91498,"byte_end":91515,"line_start":249,"line_end":249,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":92015,"byte_end":92023,"line_start":261,"line_end":261,"column_start":12,"column_end":20},"name":"new_init","qualname":"<IbcChannelOpenMsg>::new_init","value":"pub fn new_init(IbcChannel) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":92108,"byte_end":92115,"line_start":265,"line_end":265,"column_start":12,"column_end":19},"name":"new_try","qualname":"<IbcChannelOpenMsg>::new_try","value":"pub fn new_try<impl Into<String>: Into<String>>(IbcChannel, impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":92324,"byte_end":92331,"line_start":272,"line_end":272,"column_start":12,"column_end":19},"name":"channel","qualname":"<IbcChannelOpenMsg>::channel","value":"pub fn channel(&Self) -> &IbcChannel","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":92510,"byte_end":92530,"line_start":279,"line_end":279,"column_start":12,"column_end":32},"name":"counterparty_version","qualname":"<IbcChannelOpenMsg>::counterparty_version","value":"pub fn counterparty_version(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4753},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":93388,"byte_end":93395,"line_start":305,"line_end":305,"column_start":5,"column_end":12},"name":"OpenAck","qualname":"::ibc::IbcChannelConnectMsg::OpenAck","value":"IbcChannelConnectMsg::OpenAck { channel, counterparty_version }","parent":{"krate":0,"index":4752},"children":[],"decl_id":null,"docs":" The ChanOpenAck step from https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#channel-lifecycle-management\n","sig":null,"attributes":[{"value":"/ The ChanOpenAck step from https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#channel-lifecycle-management","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":93236,"byte_end":93383,"line_start":304,"line_end":304,"column_start":5,"column_end":152}}]},{"kind":"StructVariant","id":{"krate":0,"index":4756},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":93632,"byte_end":93643,"line_start":310,"line_end":310,"column_start":5,"column_end":16},"name":"OpenConfirm","qualname":"::ibc::IbcChannelConnectMsg::OpenConfirm","value":"IbcChannelConnectMsg::OpenConfirm { channel }","parent":{"krate":0,"index":4752},"children":[],"decl_id":null,"docs":" The ChanOpenConfirm step from https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#channel-lifecycle-management\n","sig":null,"attributes":[{"value":"/ The ChanOpenConfirm step from https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#channel-lifecycle-management","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":93476,"byte_end":93627,"line_start":309,"line_end":309,"column_start":5,"column_end":156}}]},{"kind":"Enum","id":{"krate":0,"index":4752},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":93209,"byte_end":93229,"line_start":303,"line_end":303,"column_start":10,"column_end":30},"name":"IbcChannelConnectMsg","qualname":"::ibc::IbcChannelConnectMsg","value":"pub enum IbcChannelConnectMsg {\n    OpenAck {\n        channel: IbcChannel,\n        counterparty_version: String,\n    },\n    OpenConfirm {\n        channel: IbcChannel,\n    },\n}","parent":null,"children":[{"krate":0,"index":4753},{"krate":0,"index":4756}],"decl_id":null,"docs":" The message that is passed into `ibc_channel_connect`\n","sig":null,"attributes":[{"value":"/ The message that is passed into `ibc_channel_connect`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":93017,"byte_end":93074,"line_start":299,"line_end":299,"column_start":1,"column_end":58}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":93146,"byte_end":93181,"line_start":301,"line_end":301,"column_start":1,"column_end":36}},{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":93182,"byte_end":93199,"line_start":302,"line_end":302,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":93711,"byte_end":93718,"line_start":314,"line_end":314,"column_start":12,"column_end":19},"name":"new_ack","qualname":"<IbcChannelConnectMsg>::new_ack","value":"pub fn new_ack<impl Into<String>: Into<String>>(IbcChannel, impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":93927,"byte_end":93938,"line_start":321,"line_end":321,"column_start":12,"column_end":23},"name":"new_confirm","qualname":"<IbcChannelConnectMsg>::new_confirm","value":"pub fn new_confirm(IbcChannel) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":94026,"byte_end":94033,"line_start":325,"line_end":325,"column_start":12,"column_end":19},"name":"channel","qualname":"<IbcChannelConnectMsg>::channel","value":"pub fn channel(&Self) -> &IbcChannel","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":94215,"byte_end":94235,"line_start":332,"line_end":332,"column_start":12,"column_end":32},"name":"counterparty_version","qualname":"<IbcChannelConnectMsg>::counterparty_version","value":"pub fn counterparty_version(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4884},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":95106,"byte_end":95115,"line_start":358,"line_end":358,"column_start":5,"column_end":14},"name":"CloseInit","qualname":"::ibc::IbcChannelCloseMsg::CloseInit","value":"IbcChannelCloseMsg::CloseInit { channel }","parent":{"krate":0,"index":4883},"children":[],"decl_id":null,"docs":" The ChanCloseInit step from https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#channel-lifecycle-management\n","sig":null,"attributes":[{"value":"/ The ChanCloseInit step from https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#channel-lifecycle-management","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":94952,"byte_end":95101,"line_start":357,"line_end":357,"column_start":5,"column_end":154}}]},{"kind":"StructVariant","id":{"krate":0,"index":4886},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":95302,"byte_end":95314,"line_start":360,"line_end":360,"column_start":5,"column_end":17},"name":"CloseConfirm","qualname":"::ibc::IbcChannelCloseMsg::CloseConfirm","value":"IbcChannelCloseMsg::CloseConfirm { channel }","parent":{"krate":0,"index":4883},"children":[],"decl_id":null,"docs":" The ChanCloseConfirm step from https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#channel-lifecycle-management\n","sig":null,"attributes":[{"value":"/ The ChanCloseConfirm step from https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#channel-lifecycle-management","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":95145,"byte_end":95297,"line_start":359,"line_end":359,"column_start":5,"column_end":157}}]},{"kind":"Enum","id":{"krate":0,"index":4883},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":94927,"byte_end":94945,"line_start":356,"line_end":356,"column_start":10,"column_end":28},"name":"IbcChannelCloseMsg","qualname":"::ibc::IbcChannelCloseMsg","value":"pub enum IbcChannelCloseMsg {\n    CloseInit {\n        channel: IbcChannel,\n    },\n    CloseConfirm {\n        channel: IbcChannel,\n    },\n}","parent":null,"children":[{"krate":0,"index":4884},{"krate":0,"index":4886}],"decl_id":null,"docs":" The message that is passed into `ibc_channel_close`\n","sig":null,"attributes":[{"value":"/ The message that is passed into `ibc_channel_close`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":94737,"byte_end":94792,"line_start":352,"line_end":352,"column_start":1,"column_end":56}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":94864,"byte_end":94899,"line_start":354,"line_end":354,"column_start":1,"column_end":36}},{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":94900,"byte_end":94917,"line_start":355,"line_end":355,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":95408,"byte_end":95416,"line_start":364,"line_end":364,"column_start":12,"column_end":20},"name":"new_init","qualname":"<IbcChannelCloseMsg>::new_init","value":"pub fn new_init(IbcChannel) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":95502,"byte_end":95513,"line_start":368,"line_end":368,"column_start":12,"column_end":23},"name":"new_confirm","qualname":"<IbcChannelCloseMsg>::new_confirm","value":"pub fn new_confirm(IbcChannel) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":95602,"byte_end":95609,"line_start":372,"line_end":372,"column_start":12,"column_end":19},"name":"channel","qualname":"<IbcChannelCloseMsg>::channel","value":"pub fn channel(&Self) -> &IbcChannel","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4888},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":96212,"byte_end":96231,"line_start":392,"line_end":392,"column_start":12,"column_end":31},"name":"IbcPacketReceiveMsg","qualname":"::ibc::IbcPacketReceiveMsg","value":"IbcPacketReceiveMsg { packet }","parent":null,"children":[{"krate":0,"index":4889}],"decl_id":null,"docs":" The message that is passed into `ibc_packet_receive`\n","sig":null,"attributes":[{"value":"/ The message that is passed into `ibc_packet_receive`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":96055,"byte_end":96111,"line_start":389,"line_end":389,"column_start":1,"column_end":57}},{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":96183,"byte_end":96200,"line_start":391,"line_end":391,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":4889},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":96242,"byte_end":96248,"line_start":393,"line_end":393,"column_start":9,"column_end":15},"name":"packet","qualname":"::ibc::IbcPacketReceiveMsg::packet","value":"ibc::IbcPacket","parent":{"krate":0,"index":4888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":96302,"byte_end":96305,"line_start":397,"line_end":397,"column_start":12,"column_end":15},"name":"new","qualname":"<IbcPacketReceiveMsg>::new","value":"pub fn new(IbcPacket) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4949},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":96521,"byte_end":96536,"line_start":405,"line_end":405,"column_start":12,"column_end":27},"name":"IbcPacketAckMsg","qualname":"::ibc::IbcPacketAckMsg","value":"IbcPacketAckMsg { acknowledgement, original_packet }","parent":null,"children":[{"krate":0,"index":4950},{"krate":0,"index":4951}],"decl_id":null,"docs":" The message that is passed into `ibc_packet_ack`\n","sig":null,"attributes":[{"value":"/ The message that is passed into `ibc_packet_ack`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":96368,"byte_end":96420,"line_start":402,"line_end":402,"column_start":1,"column_end":53}},{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":96492,"byte_end":96509,"line_start":404,"line_end":404,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":4950},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":96547,"byte_end":96562,"line_start":406,"line_end":406,"column_start":9,"column_end":24},"name":"acknowledgement","qualname":"::ibc::IbcPacketAckMsg::acknowledgement","value":"ibc::IbcAcknowledgement","parent":{"krate":0,"index":4949},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4951},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":96592,"byte_end":96607,"line_start":407,"line_end":407,"column_start":9,"column_end":24},"name":"original_packet","qualname":"::ibc::IbcPacketAckMsg::original_packet","value":"ibc::IbcPacket","parent":{"krate":0,"index":4949},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":96657,"byte_end":96660,"line_start":411,"line_end":411,"column_start":12,"column_end":15},"name":"new","qualname":"<IbcPacketAckMsg>::new","value":"pub fn new(IbcAcknowledgement, IbcPacket) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5013},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":96985,"byte_end":97004,"line_start":422,"line_end":422,"column_start":12,"column_end":31},"name":"IbcPacketTimeoutMsg","qualname":"::ibc::IbcPacketTimeoutMsg","value":"IbcPacketTimeoutMsg { packet }","parent":null,"children":[{"krate":0,"index":5014}],"decl_id":null,"docs":" The message that is passed into `ibc_packet_timeout`\n","sig":null,"attributes":[{"value":"/ The message that is passed into `ibc_packet_timeout`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":96828,"byte_end":96884,"line_start":419,"line_end":419,"column_start":1,"column_end":57}},{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":96956,"byte_end":96973,"line_start":421,"line_end":421,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":5014},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":97015,"byte_end":97021,"line_start":423,"line_end":423,"column_start":9,"column_end":15},"name":"packet","qualname":"::ibc::IbcPacketTimeoutMsg::packet","value":"ibc::IbcPacket","parent":{"krate":0,"index":5013},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":97075,"byte_end":97078,"line_start":427,"line_end":427,"column_start":12,"column_end":15},"name":"new","qualname":"<IbcPacketTimeoutMsg>::new","value":"pub fn new(IbcPacket) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5074},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":97599,"byte_end":97615,"line_start":441,"line_end":441,"column_start":12,"column_end":28},"name":"IbcBasicResponse","qualname":"::ibc::IbcBasicResponse","value":"IbcBasicResponse { messages, attributes, events }","parent":null,"children":[{"krate":0,"index":5076},{"krate":0,"index":5077},{"krate":0,"index":5078}],"decl_id":null,"docs":" This is the return value for the majority of the ibc handlers.\n That are able to dispatch messages / events on their own,\n but have no meaningful return value to the calling code.","sig":null,"attributes":[{"value":"/ This is the return value for the majority of the ibc handlers.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":97141,"byte_end":97207,"line_start":432,"line_end":432,"column_start":1,"column_end":67}},{"value":"/ That are able to dispatch messages / events on their own,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":97208,"byte_end":97269,"line_start":433,"line_end":433,"column_start":1,"column_end":62}},{"value":"/ but have no meaningful return value to the calling code.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":97270,"byte_end":97330,"line_start":434,"line_end":434,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":97331,"byte_end":97334,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ Callbacks that have return values (like receive_packet)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":97335,"byte_end":97394,"line_start":436,"line_end":436,"column_start":1,"column_end":60}},{"value":"/ or that cannot redispatch messages (like the handshake callbacks)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":97395,"byte_end":97464,"line_start":437,"line_end":437,"column_start":1,"column_end":70}},{"value":"/ will use other Response types","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":97465,"byte_end":97498,"line_start":438,"line_end":438,"column_start":1,"column_end":34}},{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":97570,"byte_end":97587,"line_start":440,"line_end":440,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":5076},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":97962,"byte_end":97970,"line_start":446,"line_end":446,"column_start":9,"column_end":17},"name":"messages","qualname":"::ibc::IbcBasicResponse::messages","value":"std::vec::Vec<results::submessages::SubMsg<T>>","parent":{"krate":0,"index":5074},"children":[],"decl_id":null,"docs":" Optional list of messages to pass. These will be executed in order.\n If the ReplyOn member is set, they will invoke this contract's `reply` entry point\n after execution. Otherwise, they act like \"fire and forget\".\n Use `SubMsg::new` to create messages with the older \"fire and forget\" semantics.\n","sig":null,"attributes":[{"value":"/ Optional list of messages to pass. These will be executed in order.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":97633,"byte_end":97704,"line_start":442,"line_end":442,"column_start":5,"column_end":76}},{"value":"/ If the ReplyOn member is set, they will invoke this contract's `reply` entry point","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":97709,"byte_end":97795,"line_start":443,"line_end":443,"column_start":5,"column_end":91}},{"value":"/ after execution. Otherwise, they act like \"fire and forget\".","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":97800,"byte_end":97864,"line_start":444,"line_end":444,"column_start":5,"column_end":69}},{"value":"/ Use `SubMsg::new` to create messages with the older \"fire and forget\" semantics.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":97869,"byte_end":97953,"line_start":445,"line_end":445,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":5077},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":98254,"byte_end":98264,"line_start":452,"line_end":452,"column_start":9,"column_end":19},"name":"attributes","qualname":"::ibc::IbcBasicResponse::attributes","value":"std::vec::Vec<results::events::Attribute>","parent":{"krate":0,"index":5074},"children":[],"decl_id":null,"docs":" The attributes that will be emitted as part of a `wasm` event.","sig":null,"attributes":[{"value":"/ The attributes that will be emitted as part of a `wasm` event.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":97992,"byte_end":98058,"line_start":447,"line_end":447,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":98063,"byte_end":98066,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ More info about events (and their attributes) can be found in [*Cosmos SDK* docs].","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":98071,"byte_end":98157,"line_start":449,"line_end":449,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":98162,"byte_end":98165,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ [*Cosmos SDK* docs]: https://docs.cosmos.network/v0.42/core/events.html","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":98170,"byte_end":98245,"line_start":451,"line_end":451,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":5078},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":98573,"byte_end":98579,"line_start":459,"line_end":459,"column_start":9,"column_end":15},"name":"events","qualname":"::ibc::IbcBasicResponse::events","value":"std::vec::Vec<results::events::Event>","parent":{"krate":0,"index":5074},"children":[],"decl_id":null,"docs":" Extra, custom events separate from the main `wasm` one. These will have\n `wasm-` prepended to the type.","sig":null,"attributes":[{"value":"/ Extra, custom events separate from the main `wasm` one. These will have","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":98286,"byte_end":98361,"line_start":453,"line_end":453,"column_start":5,"column_end":80}},{"value":"/ `wasm-` prepended to the type.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":98366,"byte_end":98400,"line_start":454,"line_end":454,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":98405,"byte_end":98408,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ More info about events can be found in [*Cosmos SDK* docs].","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":98413,"byte_end":98476,"line_start":456,"line_end":456,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":98481,"byte_end":98484,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ [*Cosmos SDK* docs]: https://docs.cosmos.network/v0.42/core/events.html","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":98489,"byte_end":98564,"line_start":458,"line_end":458,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":98934,"byte_end":98937,"line_start":474,"line_end":474,"column_start":12,"column_end":15},"name":"new","qualname":"<IbcBasicResponse<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":99052,"byte_end":99065,"line_start":479,"line_end":479,"column_start":12,"column_end":25},"name":"add_attribute","qualname":"<IbcBasicResponse<T>>::add_attribute","value":"pub fn add_attribute<impl Into<String>: Into<String>,\n                     impl Into<String>: Into<String>>(Self, impl Into<String>,\n                                                      impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add an attribute included in the main `wasm` event.\n","sig":null,"attributes":[{"value":"/ Add an attribute included in the main `wasm` event.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":98985,"byte_end":99040,"line_start":478,"line_end":478,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":99368,"byte_end":99379,"line_start":486,"line_end":486,"column_start":12,"column_end":23},"name":"add_message","qualname":"<IbcBasicResponse<T>>::add_message","value":"pub fn add_message<impl Into<CosmosMsg<T>>: Into<CosmosMsg<T>>>(Self,\n                                                                impl Into<CosmosMsg<T>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" This creates a \"fire and forget\" message, by using `SubMsg::new()` to wrap it,\n and adds it to the list of messages to process.\n","sig":null,"attributes":[{"value":"/ This creates a \"fire and forget\" message, by using `SubMsg::new()` to wrap it,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":99218,"byte_end":99300,"line_start":484,"line_end":484,"column_start":5,"column_end":87}},{"value":"/ and adds it to the list of messages to process.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":99305,"byte_end":99356,"line_start":485,"line_end":485,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":99636,"byte_end":99650,"line_start":493,"line_end":493,"column_start":12,"column_end":26},"name":"add_submessage","qualname":"<IbcBasicResponse<T>>::add_submessage","value":"pub fn add_submessage(Self, SubMsg<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This takes an explicit SubMsg (creates via eg. `reply_on_error`)\n and adds it to the list of messages to process.\n","sig":null,"attributes":[{"value":"/ This takes an explicit SubMsg (creates via eg. `reply_on_error`)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":99500,"byte_end":99568,"line_start":491,"line_end":491,"column_start":5,"column_end":73}},{"value":"/ and adds it to the list of messages to process.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":99573,"byte_end":99624,"line_start":492,"line_end":492,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":99970,"byte_end":99979,"line_start":503,"line_end":503,"column_start":12,"column_end":21},"name":"add_event","qualname":"<IbcBasicResponse<T>>::add_event","value":"pub fn add_event(Self, Event) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds an extra event to the response, separate from the main `wasm` event\n that is always created.","sig":null,"attributes":[{"value":"/ Adds an extra event to the response, separate from the main `wasm` event","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":99744,"byte_end":99820,"line_start":498,"line_end":498,"column_start":5,"column_end":81}},{"value":"/ that is always created.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":99825,"byte_end":99852,"line_start":499,"line_end":499,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":99857,"byte_end":99860,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ The `wasm-` prefix will be appended by the runtime to the provided type","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":99865,"byte_end":99940,"line_start":501,"line_end":501,"column_start":5,"column_end":80}},{"value":"/ of event.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":99945,"byte_end":99958,"line_start":502,"line_end":502,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":100681,"byte_end":100695,"line_start":526,"line_end":526,"column_start":12,"column_end":26},"name":"add_attributes","qualname":"<IbcBasicResponse<T>>::add_attributes","value":"pub fn add_attributes<A: Into<Attribute>,\n                      impl IntoIterator<Item = A>: IntoIterator<Item =\n                      A>>(Self, impl IntoIterator<Item = A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add attributes included in the main `wasm` event.","sig":null,"attributes":[{"value":"/ Bulk add attributes included in the main `wasm` event.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":100071,"byte_end":100129,"line_start":508,"line_end":508,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":100134,"byte_end":100137,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ Anything that can be turned into an iterator and yields something","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":100142,"byte_end":100211,"line_start":510,"line_end":510,"column_start":5,"column_end":74}},{"value":"/ that can be converted into an `Attribute` is accepted.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":100216,"byte_end":100274,"line_start":511,"line_end":511,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":100279,"byte_end":100282,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":100287,"byte_end":100302,"line_start":513,"line_end":513,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":100307,"byte_end":100310,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":100315,"byte_end":100322,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::{attr, IbcBasicResponse};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":100327,"byte_end":100374,"line_start":516,"line_end":516,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":100379,"byte_end":100382,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ let attrs = vec![","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":100387,"byte_end":100408,"line_start":518,"line_end":518,"column_start":5,"column_end":26}},{"value":"/     (\"action\", \"reaction\"),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":100413,"byte_end":100444,"line_start":519,"line_end":519,"column_start":5,"column_end":36}},{"value":"/     (\"answer\", \"42\"),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":100449,"byte_end":100474,"line_start":520,"line_end":520,"column_start":5,"column_end":30}},{"value":"/     (\"another\", \"attribute\"),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":100479,"byte_end":100512,"line_start":521,"line_end":521,"column_start":5,"column_end":38}},{"value":"/ ];","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":100517,"byte_end":100523,"line_start":522,"line_end":522,"column_start":5,"column_end":11}},{"value":"/ let res: IbcBasicResponse = IbcBasicResponse::new().add_attributes(attrs.clone());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":100528,"byte_end":100614,"line_start":523,"line_end":523,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(res.attributes, attrs);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":100619,"byte_end":100657,"line_start":524,"line_end":524,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":100662,"byte_end":100669,"line_start":525,"line_end":525,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":101239,"byte_end":101251,"line_start":545,"line_end":545,"column_start":12,"column_end":24},"name":"add_messages","qualname":"<IbcBasicResponse<T>>::add_messages","value":"pub fn add_messages<M: Into<CosmosMsg<T>>,\n                    impl IntoIterator<Item = M>: IntoIterator<Item =\n                    M>>(Self, impl IntoIterator<Item = M>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add \"fire and forget\" messages to the list of messages to process.","sig":null,"attributes":[{"value":"/ Bulk add \"fire and forget\" messages to the list of messages to process.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":100883,"byte_end":100958,"line_start":534,"line_end":534,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":100963,"byte_end":100966,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":100971,"byte_end":100986,"line_start":536,"line_end":536,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":100991,"byte_end":100994,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":100999,"byte_end":101006,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::{CosmosMsg, IbcBasicResponse};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":101011,"byte_end":101063,"line_start":539,"line_end":539,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":101068,"byte_end":101071,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ fn make_response_with_msgs(msgs: Vec<CosmosMsg>) -> IbcBasicResponse {","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":101076,"byte_end":101150,"line_start":541,"line_end":541,"column_start":5,"column_end":79}},{"value":"/     IbcBasicResponse::new().add_messages(msgs)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":101155,"byte_end":101205,"line_start":542,"line_end":542,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":101210,"byte_end":101215,"line_start":543,"line_end":543,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":101220,"byte_end":101227,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":101754,"byte_end":101769,"line_start":560,"line_end":560,"column_start":12,"column_end":27},"name":"add_submessages","qualname":"<IbcBasicResponse<T>>::add_submessages","value":"pub fn add_submessages<impl IntoIterator<Item = SubMsg<T>>: IntoIterator<Item\n                       =\n                       SubMsg<T>>>(Self, impl IntoIterator<Item = SubMsg<T>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add explicit SubMsg structs to the list of messages to process.","sig":null,"attributes":[{"value":"/ Bulk add explicit SubMsg structs to the list of messages to process.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":101401,"byte_end":101473,"line_start":549,"line_end":549,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":101478,"byte_end":101481,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":101486,"byte_end":101501,"line_start":551,"line_end":551,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":101506,"byte_end":101509,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":101514,"byte_end":101521,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::{SubMsg, IbcBasicResponse};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":101526,"byte_end":101575,"line_start":554,"line_end":554,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":101580,"byte_end":101583,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ fn make_response_with_submsgs(msgs: Vec<SubMsg>) -> IbcBasicResponse {","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":101588,"byte_end":101662,"line_start":556,"line_end":556,"column_start":5,"column_end":79}},{"value":"/     IbcBasicResponse::new().add_submessages(msgs)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":101667,"byte_end":101720,"line_start":557,"line_end":557,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":101725,"byte_end":101730,"line_start":558,"line_end":558,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":101735,"byte_end":101742,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":102123,"byte_end":102133,"line_start":570,"line_end":570,"column_start":12,"column_end":22},"name":"add_events","qualname":"<IbcBasicResponse<T>>::add_events","value":"pub fn add_events<impl IntoIterator<Item = Event>: IntoIterator<Item =\n                  Event>>(Self, impl IntoIterator<Item = Event>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add custom events to the response. These are separate from the main\n `wasm` event.","sig":null,"attributes":[{"value":"/ Bulk add custom events to the response. These are separate from the main","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":101905,"byte_end":101981,"line_start":565,"line_end":565,"column_start":5,"column_end":81}},{"value":"/ `wasm` event.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":101986,"byte_end":102003,"line_start":566,"line_end":566,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":102008,"byte_end":102011,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ The `wasm-` prefix will be appended by the runtime to the provided types","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":102016,"byte_end":102092,"line_start":568,"line_end":568,"column_start":5,"column_end":81}},{"value":"/ of events.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":102097,"byte_end":102111,"line_start":569,"line_end":569,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":5151},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":102719,"byte_end":102737,"line_start":583,"line_end":583,"column_start":12,"column_end":30},"name":"IbcReceiveResponse","qualname":"::ibc::IbcReceiveResponse","value":"IbcReceiveResponse { acknowledgement, messages, attributes, events }","parent":null,"children":[{"krate":0,"index":5153},{"krate":0,"index":5154},{"krate":0,"index":5155},{"krate":0,"index":5156}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":102690,"byte_end":102707,"line_start":582,"line_end":582,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":5153},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":102883,"byte_end":102898,"line_start":586,"line_end":586,"column_start":9,"column_end":24},"name":"acknowledgement","qualname":"::ibc::IbcReceiveResponse::acknowledgement","value":"binary::Binary","parent":{"krate":0,"index":5151},"children":[],"decl_id":null,"docs":" The bytes we return to the contract that sent the packet.\n This may represent a success or error of exection\n","sig":null,"attributes":[{"value":"/ The bytes we return to the contract that sent the packet.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":102755,"byte_end":102816,"line_start":584,"line_end":584,"column_start":5,"column_end":66}},{"value":"/ This may represent a success or error of exection","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":102821,"byte_end":102874,"line_start":585,"line_end":585,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5154},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":103250,"byte_end":103258,"line_start":591,"line_end":591,"column_start":9,"column_end":17},"name":"messages","qualname":"::ibc::IbcReceiveResponse::messages","value":"std::vec::Vec<results::submessages::SubMsg<T>>","parent":{"krate":0,"index":5151},"children":[],"decl_id":null,"docs":" Optional list of messages to pass. These will be executed in order.\n If the ReplyOn member is set, they will invoke this contract's `reply` entry point\n after execution. Otherwise, they act like \"fire and forget\".\n Use `call` or `msg.into()` to create messages with the older \"fire and forget\" semantics.\n","sig":null,"attributes":[{"value":"/ Optional list of messages to pass. These will be executed in order.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":102912,"byte_end":102983,"line_start":587,"line_end":587,"column_start":5,"column_end":76}},{"value":"/ If the ReplyOn member is set, they will invoke this contract's `reply` entry point","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":102988,"byte_end":103074,"line_start":588,"line_end":588,"column_start":5,"column_end":91}},{"value":"/ after execution. Otherwise, they act like \"fire and forget\".","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":103079,"byte_end":103143,"line_start":589,"line_end":589,"column_start":5,"column_end":69}},{"value":"/ Use `call` or `msg.into()` to create messages with the older \"fire and forget\" semantics.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":103148,"byte_end":103241,"line_start":590,"line_end":590,"column_start":5,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":5155},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":103542,"byte_end":103552,"line_start":597,"line_end":597,"column_start":9,"column_end":19},"name":"attributes","qualname":"::ibc::IbcReceiveResponse::attributes","value":"std::vec::Vec<results::events::Attribute>","parent":{"krate":0,"index":5151},"children":[],"decl_id":null,"docs":" The attributes that will be emitted as part of a \"wasm\" event.","sig":null,"attributes":[{"value":"/ The attributes that will be emitted as part of a \"wasm\" event.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":103280,"byte_end":103346,"line_start":592,"line_end":592,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":103351,"byte_end":103354,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ More info about events (and their attributes) can be found in [*Cosmos SDK* docs].","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":103359,"byte_end":103445,"line_start":594,"line_end":594,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":103450,"byte_end":103453,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ [*Cosmos SDK* docs]: https://docs.cosmos.network/v0.42/core/events.html","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":103458,"byte_end":103533,"line_start":596,"line_end":596,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":5156},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":103861,"byte_end":103867,"line_start":604,"line_end":604,"column_start":9,"column_end":15},"name":"events","qualname":"::ibc::IbcReceiveResponse::events","value":"std::vec::Vec<results::events::Event>","parent":{"krate":0,"index":5151},"children":[],"decl_id":null,"docs":" Extra, custom events separate from the main `wasm` one. These will have\n `wasm-` prepended to the type.","sig":null,"attributes":[{"value":"/ Extra, custom events separate from the main `wasm` one. These will have","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":103574,"byte_end":103649,"line_start":598,"line_end":598,"column_start":5,"column_end":80}},{"value":"/ `wasm-` prepended to the type.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":103654,"byte_end":103688,"line_start":599,"line_end":599,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":103693,"byte_end":103696,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ More info about events can be found in [*Cosmos SDK* docs].","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":103701,"byte_end":103764,"line_start":601,"line_end":601,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":103769,"byte_end":103772,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ [*Cosmos SDK* docs]: https://docs.cosmos.network/v0.42/core/events.html","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":103777,"byte_end":103852,"line_start":603,"line_end":603,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":104273,"byte_end":104276,"line_start":620,"line_end":620,"column_start":12,"column_end":15},"name":"new","qualname":"<IbcReceiveResponse<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":104382,"byte_end":104389,"line_start":625,"line_end":625,"column_start":12,"column_end":19},"name":"set_ack","qualname":"<IbcReceiveResponse<T>>::set_ack","value":"pub fn set_ack<impl Into<Binary>: Into<Binary>>(Self, impl Into<Binary>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the acknowledgement for this response.\n","sig":null,"attributes":[{"value":"/ Set the acknowledgement for this response.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":104324,"byte_end":104370,"line_start":624,"line_end":624,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":104568,"byte_end":104581,"line_start":631,"line_end":631,"column_start":12,"column_end":25},"name":"add_attribute","qualname":"<IbcReceiveResponse<T>>::add_attribute","value":"pub fn add_attribute<impl Into<String>: Into<String>,\n                     impl Into<String>: Into<String>>(Self, impl Into<String>,\n                                                      impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add an attribute included in the main `wasm` event.\n","sig":null,"attributes":[{"value":"/ Add an attribute included in the main `wasm` event.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":104501,"byte_end":104556,"line_start":630,"line_end":630,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":104884,"byte_end":104895,"line_start":638,"line_end":638,"column_start":12,"column_end":23},"name":"add_message","qualname":"<IbcReceiveResponse<T>>::add_message","value":"pub fn add_message<impl Into<CosmosMsg<T>>: Into<CosmosMsg<T>>>(Self,\n                                                                impl Into<CosmosMsg<T>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" This creates a \"fire and forget\" message, by using `SubMsg::new()` to wrap it,\n and adds it to the list of messages to process.\n","sig":null,"attributes":[{"value":"/ This creates a \"fire and forget\" message, by using `SubMsg::new()` to wrap it,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":104734,"byte_end":104816,"line_start":636,"line_end":636,"column_start":5,"column_end":87}},{"value":"/ and adds it to the list of messages to process.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":104821,"byte_end":104872,"line_start":637,"line_end":637,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":105152,"byte_end":105166,"line_start":645,"line_end":645,"column_start":12,"column_end":26},"name":"add_submessage","qualname":"<IbcReceiveResponse<T>>::add_submessage","value":"pub fn add_submessage(Self, SubMsg<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This takes an explicit SubMsg (creates via eg. `reply_on_error`)\n and adds it to the list of messages to process.\n","sig":null,"attributes":[{"value":"/ This takes an explicit SubMsg (creates via eg. `reply_on_error`)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":105016,"byte_end":105084,"line_start":643,"line_end":643,"column_start":5,"column_end":73}},{"value":"/ and adds it to the list of messages to process.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":105089,"byte_end":105140,"line_start":644,"line_end":644,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":105486,"byte_end":105495,"line_start":655,"line_end":655,"column_start":12,"column_end":21},"name":"add_event","qualname":"<IbcReceiveResponse<T>>::add_event","value":"pub fn add_event(Self, Event) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds an extra event to the response, separate from the main `wasm` event\n that is always created.","sig":null,"attributes":[{"value":"/ Adds an extra event to the response, separate from the main `wasm` event","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":105260,"byte_end":105336,"line_start":650,"line_end":650,"column_start":5,"column_end":81}},{"value":"/ that is always created.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":105341,"byte_end":105368,"line_start":651,"line_end":651,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":105373,"byte_end":105376,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ The `wasm-` prefix will be appended by the runtime to the provided type","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":105381,"byte_end":105456,"line_start":653,"line_end":653,"column_start":5,"column_end":80}},{"value":"/ of event.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":105461,"byte_end":105474,"line_start":654,"line_end":654,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":106203,"byte_end":106217,"line_start":678,"line_end":678,"column_start":12,"column_end":26},"name":"add_attributes","qualname":"<IbcReceiveResponse<T>>::add_attributes","value":"pub fn add_attributes<A: Into<Attribute>,\n                      impl IntoIterator<Item = A>: IntoIterator<Item =\n                      A>>(Self, impl IntoIterator<Item = A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add attributes included in the main `wasm` event.","sig":null,"attributes":[{"value":"/ Bulk add attributes included in the main `wasm` event.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":105587,"byte_end":105645,"line_start":660,"line_end":660,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":105650,"byte_end":105653,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ Anything that can be turned into an iterator and yields something","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":105658,"byte_end":105727,"line_start":662,"line_end":662,"column_start":5,"column_end":74}},{"value":"/ that can be converted into an `Attribute` is accepted.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":105732,"byte_end":105790,"line_start":663,"line_end":663,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":105795,"byte_end":105798,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":105803,"byte_end":105818,"line_start":665,"line_end":665,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":105823,"byte_end":105826,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":105831,"byte_end":105838,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::{attr, IbcReceiveResponse};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":105843,"byte_end":105892,"line_start":668,"line_end":668,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":105897,"byte_end":105900,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ let attrs = vec![","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":105905,"byte_end":105926,"line_start":670,"line_end":670,"column_start":5,"column_end":26}},{"value":"/     (\"action\", \"reaction\"),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":105931,"byte_end":105962,"line_start":671,"line_end":671,"column_start":5,"column_end":36}},{"value":"/     (\"answer\", \"42\"),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":105967,"byte_end":105992,"line_start":672,"line_end":672,"column_start":5,"column_end":30}},{"value":"/     (\"another\", \"attribute\"),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":105997,"byte_end":106030,"line_start":673,"line_end":673,"column_start":5,"column_end":38}},{"value":"/ ];","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":106035,"byte_end":106041,"line_start":674,"line_end":674,"column_start":5,"column_end":11}},{"value":"/ let res: IbcReceiveResponse = IbcReceiveResponse::new().add_attributes(attrs.clone());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":106046,"byte_end":106136,"line_start":675,"line_end":675,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(res.attributes, attrs);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":106141,"byte_end":106179,"line_start":676,"line_end":676,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":106184,"byte_end":106191,"line_start":677,"line_end":677,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":106767,"byte_end":106779,"line_start":697,"line_end":697,"column_start":12,"column_end":24},"name":"add_messages","qualname":"<IbcReceiveResponse<T>>::add_messages","value":"pub fn add_messages<M: Into<CosmosMsg<T>>,\n                    impl IntoIterator<Item = M>: IntoIterator<Item =\n                    M>>(Self, impl IntoIterator<Item = M>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add \"fire and forget\" messages to the list of messages to process.","sig":null,"attributes":[{"value":"/ Bulk add \"fire and forget\" messages to the list of messages to process.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":106405,"byte_end":106480,"line_start":686,"line_end":686,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":106485,"byte_end":106488,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":106493,"byte_end":106508,"line_start":688,"line_end":688,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":106513,"byte_end":106516,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":106521,"byte_end":106528,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::{CosmosMsg, IbcReceiveResponse};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":106533,"byte_end":106587,"line_start":691,"line_end":691,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":106592,"byte_end":106595,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ fn make_response_with_msgs(msgs: Vec<CosmosMsg>) -> IbcReceiveResponse {","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":106600,"byte_end":106676,"line_start":693,"line_end":693,"column_start":5,"column_end":81}},{"value":"/     IbcReceiveResponse::new().add_messages(msgs)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":106681,"byte_end":106733,"line_start":694,"line_end":694,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":106738,"byte_end":106743,"line_start":695,"line_end":695,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":106748,"byte_end":106755,"line_start":696,"line_end":696,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":107288,"byte_end":107303,"line_start":712,"line_end":712,"column_start":12,"column_end":27},"name":"add_submessages","qualname":"<IbcReceiveResponse<T>>::add_submessages","value":"pub fn add_submessages<impl IntoIterator<Item = SubMsg<T>>: IntoIterator<Item\n                       =\n                       SubMsg<T>>>(Self, impl IntoIterator<Item = SubMsg<T>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add explicit SubMsg structs to the list of messages to process.","sig":null,"attributes":[{"value":"/ Bulk add explicit SubMsg structs to the list of messages to process.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":106929,"byte_end":107001,"line_start":701,"line_end":701,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":107006,"byte_end":107009,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":107014,"byte_end":107029,"line_start":703,"line_end":703,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":107034,"byte_end":107037,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":107042,"byte_end":107049,"line_start":705,"line_end":705,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::{SubMsg, IbcReceiveResponse};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":107054,"byte_end":107105,"line_start":706,"line_end":706,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":107110,"byte_end":107113,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ fn make_response_with_submsgs(msgs: Vec<SubMsg>) -> IbcReceiveResponse {","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":107118,"byte_end":107194,"line_start":708,"line_end":708,"column_start":5,"column_end":81}},{"value":"/     IbcReceiveResponse::new().add_submessages(msgs)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":107199,"byte_end":107254,"line_start":709,"line_end":709,"column_start":5,"column_end":60}},{"value":"/ }","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":107259,"byte_end":107264,"line_start":710,"line_end":710,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":107269,"byte_end":107276,"line_start":711,"line_end":711,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":107657,"byte_end":107667,"line_start":722,"line_end":722,"column_start":12,"column_end":22},"name":"add_events","qualname":"<IbcReceiveResponse<T>>::add_events","value":"pub fn add_events<impl IntoIterator<Item = Event>: IntoIterator<Item =\n                  Event>>(Self, impl IntoIterator<Item = Event>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add custom events to the response. These are separate from the main\n `wasm` event.","sig":null,"attributes":[{"value":"/ Bulk add custom events to the response. These are separate from the main","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":107439,"byte_end":107515,"line_start":717,"line_end":717,"column_start":5,"column_end":81}},{"value":"/ `wasm` event.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":107520,"byte_end":107537,"line_start":718,"line_end":718,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":107542,"byte_end":107545,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ The `wasm-` prefix will be appended by the runtime to the provided types","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":107550,"byte_end":107626,"line_start":720,"line_end":720,"column_start":5,"column_end":81}},{"value":"/ of events.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":107631,"byte_end":107645,"line_start":721,"line_end":721,"column_start":5,"column_end":19}}]},{"kind":"Type","id":{"krate":0,"index":555},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/iterator.rs","byte_start":113570,"byte_end":113576,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"Record","qualname":"::iterator::Record","value":"(Vec<u8>, V)","parent":null,"children":[],"decl_id":null,"docs":" A record of a key-value storage that is created through an iterator API.\n The first element (key) is always raw binary data. The second element\n (value) is binary by default but can be changed to a custom type. This\n allows contracts to reuse the type when deserializing database records.\n","sig":null,"attributes":[{"value":"/ A record of a key-value storage that is created through an iterator API.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/iterator.rs","byte_start":113259,"byte_end":113335,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ The first element (key) is always raw binary data. The second element","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/iterator.rs","byte_start":113336,"byte_end":113409,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ (value) is binary by default but can be changed to a custom type. This","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/iterator.rs","byte_start":113410,"byte_end":113484,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ allows contracts to reuse the type when deserializing database records.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/iterator.rs","byte_start":113485,"byte_end":113560,"line_start":7,"line_end":7,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":557},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/iterator.rs","byte_start":113683,"byte_end":113687,"line_start":11,"line_end":11,"column_start":10,"column_end":14},"name":"Pair","qualname":"::iterator::Pair","value":"Record<V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"Renamed to Record, please use this instead\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/iterator.rs","byte_start":113607,"byte_end":113673,"line_start":10,"line_end":10,"column_start":1,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5232},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/iterator.rs","byte_start":113852,"byte_end":113861,"line_start":16,"line_end":16,"column_start":5,"column_end":14},"name":"Ascending","qualname":"::iterator::Order::Ascending","value":"Order::Ascending","parent":{"krate":0,"index":5231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5235},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/iterator.rs","byte_start":113871,"byte_end":113881,"line_start":17,"line_end":17,"column_start":5,"column_end":15},"name":"Descending","qualname":"::iterator::Order::Descending","value":"Order::Descending","parent":{"krate":0,"index":5231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5231},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/iterator.rs","byte_start":113840,"byte_end":113845,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Order","qualname":"::iterator::Order","value":"pub enum Order { Ascending = , Descending = , }","parent":null,"children":[{"krate":0,"index":5232},{"krate":0,"index":5235}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5241},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":115322,"byte_end":115329,"line_start":20,"line_end":20,"column_start":12,"column_end":19},"name":"Decimal","qualname":"::math::decimal::Decimal","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0","sig":null,"attributes":[{"value":"/ A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":114987,"byte_end":115092,"line_start":16,"line_end":16,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":115093,"byte_end":115096,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":115097,"byte_end":115227,"line_start":18,"line_end":18,"column_start":1,"column_end":131}}]},{"kind":"Struct","id":{"krate":0,"index":5274},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":115451,"byte_end":115471,"line_start":24,"line_end":24,"column_start":12,"column_end":32},"name":"DecimalRangeExceeded","qualname":"::math::decimal::DecimalRangeExceeded","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Decimal range exceeded\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":115405,"byte_end":115439,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":627},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":115828,"byte_end":115831,"line_start":32,"line_end":32,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::decimal::Decimal::MAX","value":"Self","parent":{"krate":0,"index":623},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":115907,"byte_end":115910,"line_start":35,"line_end":35,"column_start":18,"column_end":21},"name":"one","qualname":"<Decimal>::one","value":"pub const fn one() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 1.0 Decimal\n","sig":null,"attributes":[{"value":"/ Create a 1.0 Decimal","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":115865,"byte_end":115889,"line_start":34,"line_end":34,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":116018,"byte_end":116022,"line_start":40,"line_end":40,"column_start":18,"column_end":22},"name":"zero","qualname":"<Decimal>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 0.0 Decimal\n","sig":null,"attributes":[{"value":"/ Create a 0.0 Decimal","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":115976,"byte_end":116000,"line_start":39,"line_end":39,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":116118,"byte_end":116125,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"percent","qualname":"<Decimal>::percent","value":"pub fn percent(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert x% into Decimal\n","sig":null,"attributes":[{"value":"/ Convert x% into Decimal","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":116079,"byte_end":116106,"line_start":44,"line_end":44,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":116272,"byte_end":116280,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"permille","qualname":"<Decimal>::permille","value":"pub fn permille(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert permille (x/1000) into Decimal\n","sig":null,"attributes":[{"value":"/ Convert permille (x/1000) into Decimal","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":116218,"byte_end":116260,"line_start":49,"line_end":49,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":117221,"byte_end":117233,"line_start":75,"line_end":75,"column_start":12,"column_end":24},"name":"from_atomics","qualname":"<Decimal>::from_atomics","value":"pub fn from_atomics<impl Into<Uint128>: Into<Uint128>>(impl Into<Uint128>,\n                                                       u32)\n-> Result<Self, DecimalRangeExceeded>","parent":null,"children":[],"decl_id":null,"docs":" Creates a decimal from a number of atomic units and the number\n of decimal places. The inputs will be converted internally to form\n a decimal with 18 decimal places. So the input 123 and 2 will create\n the decimal 1.23.","sig":null,"attributes":[{"value":"/ Creates a decimal from a number of atomic units and the number","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":116372,"byte_end":116438,"line_start":54,"line_end":54,"column_start":5,"column_end":71}},{"value":"/ of decimal places. The inputs will be converted internally to form","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":116443,"byte_end":116513,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ a decimal with 18 decimal places. So the input 123 and 2 will create","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":116518,"byte_end":116590,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ the decimal 1.23.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":116595,"byte_end":116616,"line_start":57,"line_end":57,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":116621,"byte_end":116624,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Using 18 decimal places is slightly more efficient than other values","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":116629,"byte_end":116701,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ as no internal conversion is necessary.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":116706,"byte_end":116749,"line_start":60,"line_end":60,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":116754,"byte_end":116757,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":116762,"byte_end":116777,"line_start":62,"line_end":62,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":116782,"byte_end":116785,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":116790,"byte_end":116797,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Decimal, Uint128};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":116802,"byte_end":116845,"line_start":65,"line_end":65,"column_start":5,"column_end":48}},{"value":"/ let a = Decimal::from_atomics(Uint128::new(1234), 3).unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":116850,"byte_end":116916,"line_start":66,"line_end":66,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(a.to_string(), \"1.234\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":116921,"byte_end":116960,"line_start":67,"line_end":67,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":116965,"byte_end":116968,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let a = Decimal::from_atomics(1234u128, 0).unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":116973,"byte_end":117029,"line_start":69,"line_end":69,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(a.to_string(), \"1234\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":117034,"byte_end":117072,"line_start":70,"line_end":70,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":117077,"byte_end":117080,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let a = Decimal::from_atomics(1u64, 18).unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":117085,"byte_end":117138,"line_start":72,"line_end":72,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(a.to_string(), \"0.000000000000000001\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":117143,"byte_end":117197,"line_start":73,"line_end":73,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":117202,"byte_end":117209,"line_start":74,"line_end":74,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":118745,"byte_end":118755,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"from_ratio","qualname":"<Decimal>::from_ratio","value":"pub fn from_ratio<impl Into<Uint128>: Into<Uint128>,\n                  impl Into<Uint128>: Into<Uint128>>(impl Into<Uint128>,\n                                                     impl Into<Uint128>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the ratio (numerator / denominator) as a Decimal\n","sig":null,"attributes":[{"value":"/ Returns the ratio (numerator / denominator) as a Decimal","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":118673,"byte_end":118733,"line_start":106,"line_end":106,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":119216,"byte_end":119223,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Decimal>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":120009,"byte_end":120016,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"atomics","qualname":"<Decimal>::atomics","value":"pub fn atomics(&Self) -> Uint128","parent":null,"children":[],"decl_id":null,"docs":" A decimal is an integer of atomic units plus a number that specifies the\n position of the decimal dot. So any decimal can be expressed as two numbers.","sig":null,"attributes":[{"value":"/ A decimal is an integer of atomic units plus a number that specifies the","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":119277,"byte_end":119353,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ position of the decimal dot. So any decimal can be expressed as two numbers.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":119358,"byte_end":119438,"line_start":125,"line_end":125,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":119443,"byte_end":119446,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":119451,"byte_end":119466,"line_start":127,"line_end":127,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":119471,"byte_end":119474,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":119479,"byte_end":119486,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Decimal, Uint128};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":119491,"byte_end":119534,"line_start":130,"line_end":130,"column_start":5,"column_end":48}},{"value":"/ # use std::str::FromStr;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":119539,"byte_end":119567,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/ // Value with whole and fractional part","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":119572,"byte_end":119615,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/ let a = Decimal::from_str(\"1.234\").unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":119620,"byte_end":119668,"line_start":133,"line_end":133,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a.decimal_places(), 18);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":119673,"byte_end":119712,"line_start":134,"line_end":134,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(a.atomics(), Uint128::new(1234000000000000000));","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":119717,"byte_end":119780,"line_start":135,"line_end":135,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":119785,"byte_end":119788,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ // Smallest possible value","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":119793,"byte_end":119823,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"/ let b = Decimal::from_str(\"0.000000000000000001\").unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":119828,"byte_end":119891,"line_start":138,"line_end":138,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(b.decimal_places(), 18);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":119896,"byte_end":119935,"line_start":139,"line_end":139,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(b.atomics(), Uint128::new(1));","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":119940,"byte_end":119985,"line_start":140,"line_end":140,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":119990,"byte_end":119997,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":120253,"byte_end":120267,"line_start":150,"line_end":150,"column_start":12,"column_end":26},"name":"decimal_places","qualname":"<Decimal>::decimal_places","value":"pub fn decimal_places(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of decimal places. This is a constant value for now\n but this could potentially change as the type evolves.","sig":null,"attributes":[{"value":"/ The number of decimal places. This is a constant value for now","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":120063,"byte_end":120129,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/ but this could potentially change as the type evolves.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":120134,"byte_end":120192,"line_start":147,"line_end":147,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":120197,"byte_end":120200,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ See also [`Decimal::atomics()`].","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":120205,"byte_end":120241,"line_start":149,"line_end":149,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":120447,"byte_end":120451,"line_start":157,"line_end":157,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<Decimal>::sqrt","value":"pub fn sqrt(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the approximate square root as a Decimal.","sig":null,"attributes":[{"value":"/ Returns the approximate square root as a Decimal.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":120331,"byte_end":120384,"line_start":154,"line_end":154,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":120389,"byte_end":120392,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ This should not overflow or panic.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":120397,"byte_end":120435,"line_start":156,"line_end":156,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":5276},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":156970,"byte_end":156980,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"name":"Decimal256","qualname":"::math::decimal256::Decimal256","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed-point decimal value with 18 fractional digits, i.e. Decimal256(1_000_000_000_000_000_000) == 1.0","sig":null,"attributes":[{"value":"/ A fixed-point decimal value with 18 fractional digits, i.e. Decimal256(1_000_000_000_000_000_000) == 1.0","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":156585,"byte_end":156693,"line_start":17,"line_end":17,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":156694,"byte_end":156697,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The greatest possible value that can be represented is","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":156698,"byte_end":156756,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/ 115792089237316195423570985008687907853269984665640564039457.584007913129639935","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":156757,"byte_end":156840,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/ (which is (2^256 - 1) / 10^18)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":156841,"byte_end":156875,"line_start":21,"line_end":21,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5309},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":157105,"byte_end":157128,"line_start":27,"line_end":27,"column_start":12,"column_end":35},"name":"Decimal256RangeExceeded","qualname":"::math::decimal256::Decimal256RangeExceeded","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Decimal256 range exceeded\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":157056,"byte_end":157093,"line_start":26,"line_end":26,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":756},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":157672,"byte_end":157675,"line_start":42,"line_end":42,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::decimal256::Decimal256::MAX","value":"Self","parent":{"krate":0,"index":752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":157754,"byte_end":157757,"line_start":45,"line_end":45,"column_start":18,"column_end":21},"name":"one","qualname":"<Decimal256>::one","value":"pub const fn one() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 1.0 Decimal256\n","sig":null,"attributes":[{"value":"/ Create a 1.0 Decimal256","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":157709,"byte_end":157736,"line_start":44,"line_end":44,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":157865,"byte_end":157869,"line_start":50,"line_end":50,"column_start":18,"column_end":22},"name":"zero","qualname":"<Decimal256>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 0.0 Decimal256\n","sig":null,"attributes":[{"value":"/ Create a 0.0 Decimal256","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":157820,"byte_end":157847,"line_start":49,"line_end":49,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":157965,"byte_end":157972,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"percent","qualname":"<Decimal256>::percent","value":"pub fn percent(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert x% into Decimal256\n","sig":null,"attributes":[{"value":"/ Convert x% into Decimal256","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":157923,"byte_end":157953,"line_start":54,"line_end":54,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":158134,"byte_end":158142,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"permille","qualname":"<Decimal256>::permille","value":"pub fn permille(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert permille (x/1000) into Decimal256\n","sig":null,"attributes":[{"value":"/ Convert permille (x/1000) into Decimal256","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":158077,"byte_end":158122,"line_start":59,"line_end":59,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":159213,"byte_end":159225,"line_start":88,"line_end":88,"column_start":12,"column_end":24},"name":"from_atomics","qualname":"<Decimal256>::from_atomics","value":"pub fn from_atomics<impl Into<Uint256>: Into<Uint256>>(impl Into<Uint256>,\n                                                       u32)\n-> Result<Self, Decimal256RangeExceeded>","parent":null,"children":[],"decl_id":null,"docs":" Creates a decimal from a number of atomic units and the number\n of decimal places. The inputs will be converted internally to form\n a decimal with 18 decimal places. So the input 123 and 2 will create\n the decimal 1.23.","sig":null,"attributes":[{"value":"/ Creates a decimal from a number of atomic units and the number","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":158246,"byte_end":158312,"line_start":64,"line_end":64,"column_start":5,"column_end":71}},{"value":"/ of decimal places. The inputs will be converted internally to form","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":158317,"byte_end":158387,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ a decimal with 18 decimal places. So the input 123 and 2 will create","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":158392,"byte_end":158464,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ the decimal 1.23.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":158469,"byte_end":158490,"line_start":67,"line_end":67,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":158495,"byte_end":158498,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Using 18 decimal places is slightly more efficient than other values","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":158503,"byte_end":158575,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ as no internal conversion is necessary.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":158580,"byte_end":158623,"line_start":70,"line_end":70,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":158628,"byte_end":158631,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":158636,"byte_end":158651,"line_start":72,"line_end":72,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":158656,"byte_end":158659,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":158664,"byte_end":158671,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Decimal256, Uint256};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":158676,"byte_end":158722,"line_start":75,"line_end":75,"column_start":5,"column_end":51}},{"value":"/ let a = Decimal256::from_atomics(1234u64, 3).unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":158727,"byte_end":158785,"line_start":76,"line_end":76,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(a.to_string(), \"1.234\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":158790,"byte_end":158829,"line_start":77,"line_end":77,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":158834,"byte_end":158837,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let a = Decimal256::from_atomics(1234u128, 0).unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":158842,"byte_end":158901,"line_start":79,"line_end":79,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(a.to_string(), \"1234\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":158906,"byte_end":158944,"line_start":80,"line_end":80,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":158949,"byte_end":158952,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let a = Decimal256::from_atomics(1u64, 18).unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":158957,"byte_end":159013,"line_start":82,"line_end":82,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(a.to_string(), \"0.000000000000000001\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":159018,"byte_end":159072,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":159077,"byte_end":159080,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let a = Decimal256::from_atomics(Uint256::MAX, 18).unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":159085,"byte_end":159149,"line_start":85,"line_end":85,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(a, Decimal256::MAX);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":159154,"byte_end":159189,"line_start":86,"line_end":86,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":159194,"byte_end":159201,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":160759,"byte_end":160769,"line_start":120,"line_end":120,"column_start":12,"column_end":22},"name":"from_ratio","qualname":"<Decimal256>::from_ratio","value":"pub fn from_ratio<impl Into<Uint256>: Into<Uint256>,\n                  impl Into<Uint256>: Into<Uint256>>(impl Into<Uint256>,\n                                                     impl Into<Uint256>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the ratio (numerator / denominator) as a Decimal256\n","sig":null,"attributes":[{"value":"/ Returns the ratio (numerator / denominator) as a Decimal256","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":160684,"byte_end":160747,"line_start":119,"line_end":119,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":161227,"byte_end":161234,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Decimal256>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":162039,"byte_end":162046,"line_start":155,"line_end":155,"column_start":12,"column_end":19},"name":"atomics","qualname":"<Decimal256>::atomics","value":"pub fn atomics(&Self) -> Uint256","parent":null,"children":[],"decl_id":null,"docs":" A decimal is an integer of atomic units plus a number that specifies the\n position of the decimal dot. So any decimal can be expressed as two numbers.","sig":null,"attributes":[{"value":"/ A decimal is an integer of atomic units plus a number that specifies the","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":161288,"byte_end":161364,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/ position of the decimal dot. So any decimal can be expressed as two numbers.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":161369,"byte_end":161449,"line_start":138,"line_end":138,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":161454,"byte_end":161457,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":161462,"byte_end":161477,"line_start":140,"line_end":140,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":161482,"byte_end":161485,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":161490,"byte_end":161497,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Decimal256, Uint256};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":161502,"byte_end":161548,"line_start":143,"line_end":143,"column_start":5,"column_end":51}},{"value":"/ # use std::str::FromStr;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":161553,"byte_end":161581,"line_start":144,"line_end":144,"column_start":5,"column_end":33}},{"value":"/ // Value with whole and fractional part","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":161586,"byte_end":161629,"line_start":145,"line_end":145,"column_start":5,"column_end":48}},{"value":"/ let a = Decimal256::from_str(\"1.234\").unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":161634,"byte_end":161685,"line_start":146,"line_end":146,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(a.decimal_places(), 18);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":161690,"byte_end":161729,"line_start":147,"line_end":147,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(a.atomics(), Uint256::from(1234000000000000000u128));","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":161734,"byte_end":161802,"line_start":148,"line_end":148,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":161807,"byte_end":161810,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ // Smallest possible value","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":161815,"byte_end":161845,"line_start":150,"line_end":150,"column_start":5,"column_end":35}},{"value":"/ let b = Decimal256::from_str(\"0.000000000000000001\").unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":161850,"byte_end":161916,"line_start":151,"line_end":151,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(b.decimal_places(), 18);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":161921,"byte_end":161960,"line_start":152,"line_end":152,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(b.atomics(), Uint256::from(1u128));","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":161965,"byte_end":162015,"line_start":153,"line_end":153,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":162020,"byte_end":162027,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":162286,"byte_end":162300,"line_start":163,"line_end":163,"column_start":12,"column_end":26},"name":"decimal_places","qualname":"<Decimal256>::decimal_places","value":"pub fn decimal_places(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of decimal places. This is a constant value for now\n but this could potentially change as the type evolves.","sig":null,"attributes":[{"value":"/ The number of decimal places. This is a constant value for now","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":162093,"byte_end":162159,"line_start":159,"line_end":159,"column_start":5,"column_end":71}},{"value":"/ but this could potentially change as the type evolves.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":162164,"byte_end":162222,"line_start":160,"line_end":160,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":162227,"byte_end":162230,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ See also [`Decimal256::atomics()`].","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":162235,"byte_end":162274,"line_start":162,"line_end":162,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":162483,"byte_end":162487,"line_start":170,"line_end":170,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<Decimal256>::sqrt","value":"pub fn sqrt(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the approximate square root as a Decimal256.","sig":null,"attributes":[{"value":"/ Returns the approximate square root as a Decimal256.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":162364,"byte_end":162420,"line_start":167,"line_end":167,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":162425,"byte_end":162428,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ This should not overflow or panic.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":162433,"byte_end":162471,"line_start":169,"line_end":169,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":824},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/fraction.rs","byte_start":201259,"byte_end":201267,"line_start":4,"line_end":4,"column_start":11,"column_end":19},"name":"Fraction","qualname":"::math::fraction::Fraction","value":"Fraction<T>: Sized","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828}],"decl_id":null,"docs":" A fraction `p`/`q` with integers `p` and `q`.","sig":null,"attributes":[{"value":"/ A fraction `p`/`q` with integers `p` and `q`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/fraction.rs","byte_start":201128,"byte_end":201177,"line_start":1,"line_end":1,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/fraction.rs","byte_start":201178,"byte_end":201181,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `p` is called the numerator and `q` is called the denominator.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/fraction.rs","byte_start":201182,"byte_end":201248,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/fraction.rs","byte_start":201321,"byte_end":201330,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"numerator","qualname":"::math::fraction::Fraction::numerator","value":"pub fn numerator(&Self) -> T","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Returns the numerator `p`\n","sig":null,"attributes":[{"value":"/ Returns the numerator `p`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/fraction.rs","byte_start":201284,"byte_end":201313,"line_start":5,"line_end":5,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/fraction.rs","byte_start":201387,"byte_end":201398,"line_start":8,"line_end":8,"column_start":8,"column_end":19},"name":"denominator","qualname":"::math::fraction::Fraction::denominator","value":"pub fn denominator(&Self) -> T","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Returns the denominator `q`\n","sig":null,"attributes":[{"value":"/ Returns the denominator `q`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/fraction.rs","byte_start":201348,"byte_end":201379,"line_start":7,"line_end":7,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/fraction.rs","byte_start":201539,"byte_end":201542,"line_start":13,"line_end":13,"column_start":8,"column_end":11},"name":"inv","qualname":"::math::fraction::Fraction::inv","value":"pub fn inv(&Self) -> Option<Self>","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Returns the multiplicative inverse `q/p` for fraction `p/q`.","sig":null,"attributes":[{"value":"/ Returns the multiplicative inverse `q/p` for fraction `p/q`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/fraction.rs","byte_start":201417,"byte_end":201481,"line_start":10,"line_end":10,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/fraction.rs","byte_start":201486,"byte_end":201489,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ If `p` is zero, None is returned.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/fraction.rs","byte_start":201494,"byte_end":201531,"line_start":12,"line_end":12,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5311},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205401,"byte_end":205408,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"Uint128","qualname":"::math::uint128::Uint128","value":"","parent":null,"children":[],"decl_id":null,"docs":" A thin wrapper around u128 that is using strings for JSON encoding/decoding,\n such that the full u128 range can be used for clients that convert JSON numbers to floats,\n like JavaScript and jq.","sig":null,"attributes":[{"value":"/ A thin wrapper around u128 that is using strings for JSON encoding/decoding,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":204748,"byte_end":204828,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ such that the full u128 range can be used for clients that convert JSON numbers to floats,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":204829,"byte_end":204923,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ like JavaScript and jq.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":204924,"byte_end":204951,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":204952,"byte_end":204955,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":204956,"byte_end":204970,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":204971,"byte_end":204974,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Use `from` to create instances of this and `u128` to get the value out:","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":204975,"byte_end":205050,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205051,"byte_end":205054,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205055,"byte_end":205062,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::Uint128;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205063,"byte_end":205095,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/ let a = Uint128::from(123u128);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205096,"byte_end":205131,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(a.u128(), 123);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205132,"byte_end":205162,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205163,"byte_end":205166,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let b = Uint128::from(42u64);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205167,"byte_end":205200,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(b.u128(), 42);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205201,"byte_end":205230,"line_start":26,"line_end":26,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205231,"byte_end":205234,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let c = Uint128::from(70u32);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205235,"byte_end":205268,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(c.u128(), 70);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205269,"byte_end":205298,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205299,"byte_end":205306,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":930},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205475,"byte_end":205478,"line_start":35,"line_end":35,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::uint128::Uint128::MAX","value":"Self","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205651,"byte_end":205654,"line_start":40,"line_end":40,"column_start":18,"column_end":21},"name":"new","qualname":"<Uint128>::new","value":"pub const fn new(u128) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint128(value).","sig":null,"attributes":[{"value":"/ Creates a Uint128(value).","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205509,"byte_end":205538,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205543,"byte_end":205546,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This method is less flexible than `from` but can be called in a const context.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205551,"byte_end":205633,"line_start":39,"line_end":39,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205754,"byte_end":205758,"line_start":45,"line_end":45,"column_start":18,"column_end":22},"name":"zero","qualname":"<Uint128>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint128(0)\n","sig":null,"attributes":[{"value":"/ Creates a Uint128(0)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205712,"byte_end":205736,"line_start":44,"line_end":44,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205858,"byte_end":205862,"line_start":50,"line_end":50,"column_start":18,"column_end":22},"name":"u128","qualname":"<Uint128>::u128","value":"pub const fn u128(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the internal data\n","sig":null,"attributes":[{"value":"/ Returns a copy of the internal data","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205801,"byte_end":205840,"line_start":49,"line_end":49,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205977,"byte_end":205988,"line_start":55,"line_end":55,"column_start":18,"column_end":29},"name":"to_be_bytes","qualname":"<Uint128>::to_be_bytes","value":"pub const fn to_be_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as big endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as big endian bytes.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205906,"byte_end":205959,"line_start":54,"line_end":54,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":206123,"byte_end":206134,"line_start":60,"line_end":60,"column_start":18,"column_end":29},"name":"to_le_bytes","qualname":"<Uint128>::to_le_bytes","value":"pub const fn to_le_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as little endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as little endian bytes.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":206049,"byte_end":206105,"line_start":59,"line_end":59,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":206202,"byte_end":206209,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Uint128>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":206265,"byte_end":206276,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Uint128>::checked_add","value":"pub fn checked_add(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":206503,"byte_end":206514,"line_start":75,"line_end":75,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Uint128>::checked_sub","value":"pub fn checked_sub(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":206741,"byte_end":206752,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Uint128>::checked_mul","value":"pub fn checked_mul(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":206979,"byte_end":206990,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"checked_pow","qualname":"<Uint128>::checked_pow","value":"pub fn checked_pow(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":207208,"byte_end":207219,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"checked_div","qualname":"<Uint128>::checked_div","value":"pub fn checked_div(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":207423,"byte_end":207441,"line_start":103,"line_end":103,"column_start":12,"column_end":30},"name":"checked_div_euclid","qualname":"<Uint128>::checked_div_euclid","value":"pub fn checked_div_euclid(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":207652,"byte_end":207663,"line_start":110,"line_end":110,"column_start":12,"column_end":23},"name":"checked_rem","qualname":"<Uint128>::checked_rem","value":"pub fn checked_rem(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":207867,"byte_end":207879,"line_start":117,"line_end":117,"column_start":12,"column_end":24},"name":"wrapping_add","qualname":"<Uint128>::wrapping_add","value":"pub fn wrapping_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":207970,"byte_end":207982,"line_start":121,"line_end":121,"column_start":12,"column_end":24},"name":"wrapping_sub","qualname":"<Uint128>::wrapping_sub","value":"pub fn wrapping_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":208073,"byte_end":208085,"line_start":125,"line_end":125,"column_start":12,"column_end":24},"name":"wrapping_mul","qualname":"<Uint128>::wrapping_mul","value":"pub fn wrapping_mul(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":208176,"byte_end":208188,"line_start":129,"line_end":129,"column_start":12,"column_end":24},"name":"wrapping_pow","qualname":"<Uint128>::wrapping_pow","value":"pub fn wrapping_pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":208276,"byte_end":208290,"line_start":133,"line_end":133,"column_start":12,"column_end":26},"name":"saturating_add","qualname":"<Uint128>::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":208383,"byte_end":208397,"line_start":137,"line_end":137,"column_start":12,"column_end":26},"name":"saturating_sub","qualname":"<Uint128>::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":208490,"byte_end":208504,"line_start":141,"line_end":141,"column_start":12,"column_end":26},"name":"saturating_mul","qualname":"<Uint128>::saturating_mul","value":"pub fn saturating_mul(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":208597,"byte_end":208611,"line_start":145,"line_end":145,"column_start":12,"column_end":26},"name":"saturating_pow","qualname":"<Uint128>::saturating_pow","value":"pub fn saturating_pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":214072,"byte_end":214086,"line_start":400,"line_end":400,"column_start":12,"column_end":26},"name":"multiply_ratio","qualname":"<Uint128>::multiply_ratio","value":"pub fn multiply_ratio<A: Into<u128>, B: Into<u128>>(&Self, A, B) -> Uint128","parent":null,"children":[],"decl_id":null,"docs":" Returns `self * numerator / denominator`\n","sig":null,"attributes":[{"value":"/ Returns `self * numerator / denominator`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":214016,"byte_end":214060,"line_start":399,"line_end":399,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":214884,"byte_end":214892,"line_start":427,"line_end":427,"column_start":12,"column_end":20},"name":"full_mul","qualname":"<Uint128>::full_mul","value":"pub fn full_mul<impl Into<u128>: Into<u128>>(Self, impl Into<u128>) -> Uint256","parent":null,"children":[],"decl_id":null,"docs":" Multiplies two u128 values without overflow, producing an\n [`Uint256`].","sig":null,"attributes":[{"value":"/ Multiplies two u128 values without overflow, producing an","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":214536,"byte_end":214597,"line_start":415,"line_end":415,"column_start":5,"column_end":66}},{"value":"/ [`Uint256`].","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":214602,"byte_end":214618,"line_start":416,"line_end":416,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":214623,"byte_end":214626,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":214631,"byte_end":214645,"line_start":418,"line_end":418,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":214650,"byte_end":214653,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":214658,"byte_end":214665,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::Uint128;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":214670,"byte_end":214700,"line_start":421,"line_end":421,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":214705,"byte_end":214708,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ let a = Uint128::MAX;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":214713,"byte_end":214738,"line_start":423,"line_end":423,"column_start":5,"column_end":30}},{"value":"/ let result = a.full_mul(2u32);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":214743,"byte_end":214777,"line_start":424,"line_end":424,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(result.to_string(), \"680564733841876926926749214863536422910\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":214782,"byte_end":214860,"line_start":425,"line_end":425,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":214865,"byte_end":214872,"line_start":426,"line_end":426,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5596},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":226030,"byte_end":226034,"line_start":19,"line_end":19,"column_start":20,"column_end":24},"name":"U256","qualname":"::math::uint256::uints::U256","value":"","parent":null,"children":[],"decl_id":null,"docs":" Little-endian large integer type\n","sig":null,"attributes":[{"value":"/ Little-endian large integer type","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/uint-0.9.1/src/uint.rs","byte_start":14167663,"byte_end":14167699,"line_start":567,"line_end":567,"column_start":3,"column_end":39}},{"value":"repr(C)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/uint-0.9.1/src/uint.rs","byte_start":14167702,"byte_end":14167712,"line_start":568,"line_end":568,"column_start":3,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":5882},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":226943,"byte_end":226950,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"Uint256","qualname":"::math::uint256::Uint256","value":"","parent":null,"children":[],"decl_id":null,"docs":" An implementation of u256 that is using strings for JSON encoding/decoding,\n such that the full u256 range can be used for clients that convert JSON numbers to floats,\n like JavaScript and jq.","sig":null,"attributes":[{"value":"/ An implementation of u256 that is using strings for JSON encoding/decoding,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":226180,"byte_end":226259,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ such that the full u256 range can be used for clients that convert JSON numbers to floats,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":226260,"byte_end":226354,"line_start":28,"line_end":28,"column_start":1,"column_end":95}},{"value":"/ like JavaScript and jq.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":226355,"byte_end":226382,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":226383,"byte_end":226386,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":226387,"byte_end":226401,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":226402,"byte_end":226405,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Use `from` to create instances out of primitive uint types or `new` to provide big","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":226406,"byte_end":226492,"line_start":33,"line_end":33,"column_start":1,"column_end":87}},{"value":"/ endian bytes:","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":226493,"byte_end":226510,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":226511,"byte_end":226514,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":226515,"byte_end":226522,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::Uint256;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":226523,"byte_end":226555,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ let a = Uint256::from(258u128);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":226556,"byte_end":226591,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ let b = Uint256::new([","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":226592,"byte_end":226618,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":226619,"byte_end":226666,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":226667,"byte_end":226714,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":226715,"byte_end":226762,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 2u8,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":226763,"byte_end":226810,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"/ ]);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":226811,"byte_end":226818,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":226819,"byte_end":226840,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":226841,"byte_end":226848,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":1154},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":227017,"byte_end":227020,"line_start":51,"line_end":51,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::uint256::Uint256::MAX","value":"Uint256","parent":{"krate":0,"index":1153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":227291,"byte_end":227294,"line_start":57,"line_end":57,"column_start":18,"column_end":21},"name":"new","qualname":"<Uint256>::new","value":"pub const fn new([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint256(value) from a big endian representation. It's just an alias for\n [`Uint256::from_be_bytes`].","sig":null,"attributes":[{"value":"/ Creates a Uint256(value) from a big endian representation. It's just an alias for","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":227057,"byte_end":227142,"line_start":53,"line_end":53,"column_start":5,"column_end":90}},{"value":"/ [`Uint256::from_be_bytes`].","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":227147,"byte_end":227178,"line_start":54,"line_end":54,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":227183,"byte_end":227186,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This method is less flexible than `from` but can be called in a const context.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":227191,"byte_end":227273,"line_start":56,"line_end":56,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":227410,"byte_end":227414,"line_start":62,"line_end":62,"column_start":18,"column_end":22},"name":"zero","qualname":"<Uint256>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint256(0)\n","sig":null,"attributes":[{"value":"/ Creates a Uint256(0)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":227368,"byte_end":227392,"line_start":61,"line_end":61,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":227481,"byte_end":227494,"line_start":66,"line_end":66,"column_start":18,"column_end":31},"name":"from_be_bytes","qualname":"<Uint256>::from_be_bytes","value":"pub const fn from_be_bytes([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":228184,"byte_end":228197,"line_start":84,"line_end":84,"column_start":18,"column_end":31},"name":"from_le_bytes","qualname":"<Uint256>::from_le_bytes","value":"pub const fn from_le_bytes([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":229019,"byte_end":229031,"line_start":104,"line_end":104,"column_start":18,"column_end":30},"name":"from_uint128","qualname":"<Uint256>::from_uint128","value":"pub const fn from_uint128(Uint128) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A conversion from `Uint128` that, unlike the one provided by the `From` trait,\n can be used in a `const` context.\n","sig":null,"attributes":[{"value":"/ A conversion from `Uint128` that, unlike the one provided by the `From` trait,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":228877,"byte_end":228959,"line_start":102,"line_end":102,"column_start":5,"column_end":87}},{"value":"/ can be used in a `const` context.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":228964,"byte_end":229001,"line_start":103,"line_end":103,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":229469,"byte_end":229480,"line_start":115,"line_end":115,"column_start":18,"column_end":29},"name":"to_be_bytes","qualname":"<Uint256>::to_be_bytes","value":"pub const fn to_be_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as big endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as big endian bytes.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":229398,"byte_end":229451,"line_start":114,"line_end":114,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":230715,"byte_end":230726,"line_start":161,"line_end":161,"column_start":18,"column_end":29},"name":"to_le_bytes","qualname":"<Uint256>::to_le_bytes","value":"pub const fn to_le_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as little endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as little endian bytes.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":230641,"byte_end":230697,"line_start":160,"line_end":160,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":231894,"byte_end":231901,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Uint256>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":231962,"byte_end":231973,"line_start":210,"line_end":210,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Uint256>::checked_add","value":"pub fn checked_add(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":232200,"byte_end":232211,"line_start":217,"line_end":217,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Uint256>::checked_sub","value":"pub fn checked_sub(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":232438,"byte_end":232449,"line_start":224,"line_end":224,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Uint256>::checked_mul","value":"pub fn checked_mul(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":232676,"byte_end":232687,"line_start":231,"line_end":231,"column_start":12,"column_end":23},"name":"checked_div","qualname":"<Uint256>::checked_div","value":"pub fn checked_div(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":232891,"byte_end":232902,"line_start":238,"line_end":238,"column_start":12,"column_end":23},"name":"checked_rem","qualname":"<Uint256>::checked_rem","value":"pub fn checked_rem(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1180},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":233106,"byte_end":233117,"line_start":245,"line_end":245,"column_start":12,"column_end":23},"name":"checked_pow","qualname":"<Uint256>::checked_pow","value":"pub fn checked_pow(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":233342,"byte_end":233345,"line_start":252,"line_end":252,"column_start":12,"column_end":15},"name":"pow","qualname":"<Uint256>::pow","value":"pub fn pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":233485,"byte_end":233496,"line_start":257,"line_end":257,"column_start":12,"column_end":23},"name":"checked_shr","qualname":"<Uint256>::checked_shr","value":"pub fn checked_shr(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":233720,"byte_end":233731,"line_start":265,"line_end":265,"column_start":12,"column_end":23},"name":"checked_shl","qualname":"<Uint256>::checked_shl","value":"pub fn checked_shl(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":233955,"byte_end":233969,"line_start":273,"line_end":273,"column_start":12,"column_end":26},"name":"saturating_add","qualname":"<Uint256>::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":234062,"byte_end":234076,"line_start":277,"line_end":277,"column_start":12,"column_end":26},"name":"saturating_sub","qualname":"<Uint256>::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":234169,"byte_end":234183,"line_start":281,"line_end":281,"column_start":12,"column_end":26},"name":"saturating_mul","qualname":"<Uint256>::saturating_mul","value":"pub fn saturating_mul(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":240172,"byte_end":240186,"line_start":561,"line_end":561,"column_start":12,"column_end":26},"name":"multiply_ratio","qualname":"<Uint256>::multiply_ratio","value":"pub fn multiply_ratio<A: Into<Uint256>, B: Into<Uint256>>(&Self, A, B)\n-> Uint256","parent":null,"children":[],"decl_id":null,"docs":" Returns `self * numerator / denominator`\n","sig":null,"attributes":[{"value":"/ Returns `self * numerator / denominator`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":240116,"byte_end":240160,"line_start":560,"line_end":560,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":241075,"byte_end":241083,"line_start":591,"line_end":591,"column_start":12,"column_end":20},"name":"full_mul","qualname":"<Uint256>::full_mul","value":"pub fn full_mul<impl Into<Uint256>: Into<Uint256>>(Self, impl Into<Uint256>)\n-> Uint512","parent":null,"children":[],"decl_id":null,"docs":" Multiplies two u256 values without overflow, producing an\n [`Uint512`].","sig":null,"attributes":[{"value":"/ Multiplies two u256 values without overflow, producing an","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":240653,"byte_end":240714,"line_start":576,"line_end":576,"column_start":5,"column_end":66}},{"value":"/ [`Uint512`].","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":240719,"byte_end":240735,"line_start":577,"line_end":577,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":240740,"byte_end":240743,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":240748,"byte_end":240762,"line_start":579,"line_end":579,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":240767,"byte_end":240770,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":240775,"byte_end":240782,"line_start":581,"line_end":581,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::Uint256;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":240787,"byte_end":240817,"line_start":582,"line_end":582,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":240822,"byte_end":240825,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ let a = Uint256::MAX;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":240830,"byte_end":240855,"line_start":584,"line_end":584,"column_start":5,"column_end":30}},{"value":"/ let result = a.full_mul(2u32);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":240860,"byte_end":240894,"line_start":585,"line_end":585,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":240899,"byte_end":240914,"line_start":586,"line_end":586,"column_start":5,"column_end":20}},{"value":"/     result.to_string(),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":240919,"byte_end":240946,"line_start":587,"line_end":587,"column_start":5,"column_end":32}},{"value":"/     \"231584178474632390847141970017375815706539969331281128078915168015826259279870\",","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":240951,"byte_end":241040,"line_start":588,"line_end":588,"column_start":5,"column_end":94}},{"value":"/ );","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":241045,"byte_end":241051,"line_start":589,"line_end":589,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":241056,"byte_end":241063,"line_start":590,"line_end":590,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6167},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":269567,"byte_end":269571,"line_start":19,"line_end":19,"column_start":20,"column_end":24},"name":"U512","qualname":"::math::uint512::uints::U512","value":"","parent":null,"children":[],"decl_id":null,"docs":" Little-endian large integer type\n","sig":null,"attributes":[{"value":"/ Little-endian large integer type","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/uint-0.9.1/src/uint.rs","byte_start":14167663,"byte_end":14167699,"line_start":567,"line_end":567,"column_start":3,"column_end":39}},{"value":"repr(C)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/uint-0.9.1/src/uint.rs","byte_start":14167702,"byte_end":14167712,"line_start":568,"line_end":568,"column_start":3,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":6453},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270672,"byte_end":270679,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"Uint512","qualname":"::math::uint512::Uint512","value":"","parent":null,"children":[],"decl_id":null,"docs":" An implementation of u512 that is using strings for JSON encoding/decoding,\n such that the full u512 range can be used for clients that convert JSON numbers to floats,\n like JavaScript and jq.","sig":null,"attributes":[{"value":"/ An implementation of u512 that is using strings for JSON encoding/decoding,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":269717,"byte_end":269796,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ such that the full u512 range can be used for clients that convert JSON numbers to floats,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":269797,"byte_end":269891,"line_start":28,"line_end":28,"column_start":1,"column_end":95}},{"value":"/ like JavaScript and jq.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":269892,"byte_end":269919,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":269920,"byte_end":269923,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":269924,"byte_end":269938,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":269939,"byte_end":269942,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Use `from` to create instances out of primitive uint types or `new` to provide big","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":269943,"byte_end":270029,"line_start":33,"line_end":33,"column_start":1,"column_end":87}},{"value":"/ endian bytes:","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270030,"byte_end":270047,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270048,"byte_end":270051,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270052,"byte_end":270059,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::Uint512;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270060,"byte_end":270092,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ let a = Uint512::from(258u128);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270093,"byte_end":270128,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ let b = Uint512::new([","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270129,"byte_end":270155,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270156,"byte_end":270203,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270204,"byte_end":270251,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270252,"byte_end":270299,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270300,"byte_end":270347,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270348,"byte_end":270395,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270396,"byte_end":270443,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270444,"byte_end":270491,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 2u8,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270492,"byte_end":270539,"line_start":47,"line_end":47,"column_start":1,"column_end":48}},{"value":"/ ]);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270540,"byte_end":270547,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270548,"byte_end":270569,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270570,"byte_end":270577,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":1388},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270746,"byte_end":270749,"line_start":55,"line_end":55,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::uint512::Uint512::MAX","value":"Uint512","parent":{"krate":0,"index":1387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1389},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270910,"byte_end":270913,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<Uint512>::new","value":"pub fn new([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint512(value) from a big endian representation. It's just an alias for\n `from_big_endian`.\n","sig":null,"attributes":[{"value":"/ Creates a Uint512(value) from a big endian representation. It's just an alias for","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270786,"byte_end":270871,"line_start":57,"line_end":57,"column_start":5,"column_end":90}},{"value":"/ `from_big_endian`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270876,"byte_end":270898,"line_start":58,"line_end":58,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":271029,"byte_end":271033,"line_start":64,"line_end":64,"column_start":18,"column_end":22},"name":"zero","qualname":"<Uint512>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint512(0)\n","sig":null,"attributes":[{"value":"/ Creates a Uint512(0)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270987,"byte_end":271011,"line_start":63,"line_end":63,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":271100,"byte_end":271113,"line_start":68,"line_end":68,"column_start":18,"column_end":31},"name":"from_be_bytes","qualname":"<Uint512>::from_be_bytes","value":"pub const fn from_be_bytes([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1395},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":272383,"byte_end":272396,"line_start":98,"line_end":98,"column_start":18,"column_end":31},"name":"from_le_bytes","qualname":"<Uint512>::from_le_bytes","value":"pub const fn from_le_bytes([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":273795,"byte_end":273807,"line_start":130,"line_end":130,"column_start":18,"column_end":30},"name":"from_uint256","qualname":"<Uint512>::from_uint256","value":"pub const fn from_uint256(Uint256) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A conversion from `Uint256` that, unlike the one provided by the `From` trait,\n can be used in a `const` context.\n","sig":null,"attributes":[{"value":"/ A conversion from `Uint256` that, unlike the one provided by the `From` trait,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":273653,"byte_end":273735,"line_start":128,"line_end":128,"column_start":5,"column_end":87}},{"value":"/ can be used in a `const` context.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":273740,"byte_end":273777,"line_start":129,"line_end":129,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":274504,"byte_end":274515,"line_start":143,"line_end":143,"column_start":18,"column_end":29},"name":"to_be_bytes","qualname":"<Uint512>::to_be_bytes","value":"pub const fn to_be_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as big endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as big endian bytes.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":274433,"byte_end":274486,"line_start":142,"line_end":142,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":276714,"byte_end":276725,"line_start":225,"line_end":225,"column_start":18,"column_end":29},"name":"to_le_bytes","qualname":"<Uint512>::to_le_bytes","value":"pub const fn to_le_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as little endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as little endian bytes.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":276640,"byte_end":276696,"line_start":224,"line_end":224,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1403},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":278857,"byte_end":278864,"line_start":306,"line_end":306,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Uint512>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":278925,"byte_end":278936,"line_start":310,"line_end":310,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Uint512>::checked_add","value":"pub fn checked_add(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":279163,"byte_end":279174,"line_start":317,"line_end":317,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Uint512>::checked_sub","value":"pub fn checked_sub(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":279401,"byte_end":279412,"line_start":324,"line_end":324,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Uint512>::checked_mul","value":"pub fn checked_mul(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":279639,"byte_end":279650,"line_start":331,"line_end":331,"column_start":12,"column_end":23},"name":"checked_div","qualname":"<Uint512>::checked_div","value":"pub fn checked_div(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":279854,"byte_end":279865,"line_start":338,"line_end":338,"column_start":12,"column_end":23},"name":"checked_rem","qualname":"<Uint512>::checked_rem","value":"pub fn checked_rem(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1414},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":280069,"byte_end":280080,"line_start":345,"line_end":345,"column_start":12,"column_end":23},"name":"checked_shr","qualname":"<Uint512>::checked_shr","value":"pub fn checked_shr(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1415},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":280304,"byte_end":280318,"line_start":353,"line_end":353,"column_start":12,"column_end":26},"name":"saturating_add","qualname":"<Uint512>::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1416},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":280411,"byte_end":280425,"line_start":357,"line_end":357,"column_start":12,"column_end":26},"name":"saturating_sub","qualname":"<Uint512>::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1417},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":280518,"byte_end":280532,"line_start":361,"line_end":361,"column_start":12,"column_end":26},"name":"saturating_mul","qualname":"<Uint512>::saturating_mul","value":"pub fn saturating_mul(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6478},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303474,"byte_end":303480,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"Uint64","qualname":"::math::uint64::Uint64","value":"","parent":null,"children":[],"decl_id":null,"docs":" A thin wrapper around u64 that is using strings for JSON encoding/decoding,\n such that the full u64 range can be used for clients that convert JSON numbers to floats,\n like JavaScript and jq.","sig":null,"attributes":[{"value":"/ A thin wrapper around u64 that is using strings for JSON encoding/decoding,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":302900,"byte_end":302979,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ such that the full u64 range can be used for clients that convert JSON numbers to floats,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":302980,"byte_end":303073,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"/ like JavaScript and jq.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303074,"byte_end":303101,"line_start":13,"line_end":13,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303102,"byte_end":303105,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303106,"byte_end":303120,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303121,"byte_end":303124,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Use `from` to create instances of this and `u64` to get the value out:","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303125,"byte_end":303199,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303200,"byte_end":303203,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303204,"byte_end":303211,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::Uint64;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303212,"byte_end":303243,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/ let a = Uint64::from(42u64);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303244,"byte_end":303276,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.u64(), 42);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303277,"byte_end":303305,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303306,"byte_end":303309,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let b = Uint64::from(70u32);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303310,"byte_end":303342,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(b.u64(), 70);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303343,"byte_end":303371,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303372,"byte_end":303379,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":1591},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303545,"byte_end":303548,"line_start":31,"line_end":31,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::uint64::Uint64::MAX","value":"Self","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303719,"byte_end":303722,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"name":"new","qualname":"<Uint64>::new","value":"pub const fn new(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint64(value).","sig":null,"attributes":[{"value":"/ Creates a Uint64(value).","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303578,"byte_end":303606,"line_start":33,"line_end":33,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303611,"byte_end":303614,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This method is less flexible than `from` but can be called in a const context.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303619,"byte_end":303701,"line_start":35,"line_end":35,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1593},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303819,"byte_end":303823,"line_start":41,"line_end":41,"column_start":18,"column_end":22},"name":"zero","qualname":"<Uint64>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint64(0)\n","sig":null,"attributes":[{"value":"/ Creates a Uint64(0)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303778,"byte_end":303801,"line_start":40,"line_end":40,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303922,"byte_end":303925,"line_start":46,"line_end":46,"column_start":18,"column_end":21},"name":"u64","qualname":"<Uint64>::u64","value":"pub const fn u64(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the internal data\n","sig":null,"attributes":[{"value":"/ Returns a copy of the internal data","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303865,"byte_end":303904,"line_start":45,"line_end":45,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303975,"byte_end":303982,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Uint64>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":304038,"byte_end":304049,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Uint64>::checked_add","value":"pub fn checked_add(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":304276,"byte_end":304287,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Uint64>::checked_sub","value":"pub fn checked_sub(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":304514,"byte_end":304525,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Uint64>::checked_mul","value":"pub fn checked_mul(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":304752,"byte_end":304763,"line_start":75,"line_end":75,"column_start":12,"column_end":23},"name":"checked_div","qualname":"<Uint64>::checked_div","value":"pub fn checked_div(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1604},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":304967,"byte_end":304985,"line_start":82,"line_end":82,"column_start":12,"column_end":30},"name":"checked_div_euclid","qualname":"<Uint64>::checked_div_euclid","value":"pub fn checked_div_euclid(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":305196,"byte_end":305207,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"checked_rem","qualname":"<Uint64>::checked_rem","value":"pub fn checked_rem(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1608},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":305411,"byte_end":305423,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"name":"wrapping_add","qualname":"<Uint64>::wrapping_add","value":"pub fn wrapping_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":305514,"byte_end":305526,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"name":"wrapping_sub","qualname":"<Uint64>::wrapping_sub","value":"pub fn wrapping_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1610},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":305617,"byte_end":305629,"line_start":104,"line_end":104,"column_start":12,"column_end":24},"name":"wrapping_mul","qualname":"<Uint64>::wrapping_mul","value":"pub fn wrapping_mul(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1611},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":305720,"byte_end":305732,"line_start":108,"line_end":108,"column_start":12,"column_end":24},"name":"wrapping_pow","qualname":"<Uint64>::wrapping_pow","value":"pub fn wrapping_pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1612},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":305820,"byte_end":305834,"line_start":112,"line_end":112,"column_start":12,"column_end":26},"name":"saturating_add","qualname":"<Uint64>::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":305927,"byte_end":305941,"line_start":116,"line_end":116,"column_start":12,"column_end":26},"name":"saturating_sub","qualname":"<Uint64>::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1614},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":306034,"byte_end":306048,"line_start":120,"line_end":120,"column_start":12,"column_end":26},"name":"saturating_mul","qualname":"<Uint64>::saturating_mul","value":"pub fn saturating_mul(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1615},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":306141,"byte_end":306155,"line_start":124,"line_end":124,"column_start":12,"column_end":26},"name":"saturating_pow","qualname":"<Uint64>::saturating_pow","value":"pub fn saturating_pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1670},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":309561,"byte_end":309575,"line_start":273,"line_end":273,"column_start":12,"column_end":26},"name":"multiply_ratio","qualname":"<Uint64>::multiply_ratio","value":"pub fn multiply_ratio<A: Into<u64>, B: Into<u64>>(&Self, A, B) -> Uint64","parent":null,"children":[],"decl_id":null,"docs":" Returns `self * numerator / denominator`\n","sig":null,"attributes":[{"value":"/ Returns `self * numerator / denominator`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":309505,"byte_end":309549,"line_start":272,"line_end":272,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":310348,"byte_end":310356,"line_start":301,"line_end":301,"column_start":12,"column_end":20},"name":"full_mul","qualname":"<Uint64>::full_mul","value":"pub fn full_mul<impl Into<u64>: Into<u64>>(Self, impl Into<u64>) -> Uint128","parent":null,"children":[],"decl_id":null,"docs":" Multiplies two `Uint64`/`u64` values without overflow, producing an\n [`Uint128`].","sig":null,"attributes":[{"value":"/ Multiplies two `Uint64`/`u64` values without overflow, producing an","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":310011,"byte_end":310082,"line_start":289,"line_end":289,"column_start":5,"column_end":76}},{"value":"/ [`Uint128`].","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":310087,"byte_end":310103,"line_start":290,"line_end":290,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":310108,"byte_end":310111,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":310116,"byte_end":310130,"line_start":292,"line_end":292,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":310135,"byte_end":310138,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":310143,"byte_end":310150,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::Uint64;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":310155,"byte_end":310184,"line_start":295,"line_end":295,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":310189,"byte_end":310192,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ let a = Uint64::MAX;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":310197,"byte_end":310221,"line_start":297,"line_end":297,"column_start":5,"column_end":29}},{"value":"/ let result = a.full_mul(2u32);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":310226,"byte_end":310260,"line_start":298,"line_end":298,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(result.to_string(), \"36893488147419103230\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":310265,"byte_end":310324,"line_start":299,"line_end":299,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":310329,"byte_end":310336,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":6631},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/bank.rs","byte_start":322099,"byte_end":322106,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"Balance","qualname":"::query::bank::BankQuery::Balance","value":"BankQuery::Balance { address, denom }","parent":{"krate":0,"index":6630},"children":[],"decl_id":null,"docs":" This calls into the native bank module for one denomination\n Return value is BalanceResponse\n","sig":null,"attributes":[{"value":"/ This calls into the native bank module for one denomination","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/bank.rs","byte_start":321991,"byte_end":322054,"line_start":10,"line_end":10,"column_start":5,"column_end":68}},{"value":"/ Return value is BalanceResponse","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/bank.rs","byte_start":322059,"byte_end":322094,"line_start":11,"line_end":11,"column_start":5,"column_end":40}}]},{"kind":"StructVariant","id":{"krate":0,"index":6634},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/bank.rs","byte_start":322359,"byte_end":322370,"line_start":16,"line_end":16,"column_start":5,"column_end":16},"name":"AllBalances","qualname":"::query::bank::BankQuery::AllBalances","value":"BankQuery::AllBalances { address }","parent":{"krate":0,"index":6630},"children":[],"decl_id":null,"docs":" This calls into the native bank module for all denominations.\n Note that this may be much more expensive than Balance and should be avoided if possible.\n Return value is AllBalanceResponse.\n","sig":null,"attributes":[{"value":"/ This calls into the native bank module for all denominations.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/bank.rs","byte_start":322147,"byte_end":322212,"line_start":13,"line_end":13,"column_start":5,"column_end":70}},{"value":"/ Note that this may be much more expensive than Balance and should be avoided if possible.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/bank.rs","byte_start":322217,"byte_end":322310,"line_start":14,"line_end":14,"column_start":5,"column_end":98}},{"value":"/ Return value is AllBalanceResponse.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/bank.rs","byte_start":322315,"byte_end":322354,"line_start":15,"line_end":15,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":6630},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/bank.rs","byte_start":321975,"byte_end":321984,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"BankQuery","qualname":"::query::bank::BankQuery","value":"pub enum BankQuery {\n    Balance {\n        address: String,\n        denom: String,\n    },\n    AllBalances {\n        address: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":6631},{"krate":0,"index":6634}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/bank.rs","byte_start":321841,"byte_end":321858,"line_start":6,"line_end":6,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/bank.rs","byte_start":321930,"byte_end":321965,"line_start":8,"line_end":8,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6695},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/bank.rs","byte_start":322513,"byte_end":322528,"line_start":21,"line_end":21,"column_start":12,"column_end":27},"name":"BalanceResponse","qualname":"::query::bank::BalanceResponse","value":"BalanceResponse { amount }","parent":null,"children":[{"krate":0,"index":6696}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/bank.rs","byte_start":322466,"byte_end":322501,"line_start":20,"line_end":20,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":6696},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/bank.rs","byte_start":322645,"byte_end":322651,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"name":"amount","qualname":"::query::bank::BalanceResponse::amount","value":"coins::Coin","parent":{"krate":0,"index":6695},"children":[],"decl_id":null,"docs":" Always returns a Coin with the requested denom.\n This may be of 0 amount if no such funds.\n","sig":null,"attributes":[{"value":"/ Always returns a Coin with the requested denom.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/bank.rs","byte_start":322535,"byte_end":322586,"line_start":22,"line_end":22,"column_start":5,"column_end":56}},{"value":"/ This may be of 0 amount if no such funds.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/bank.rs","byte_start":322591,"byte_end":322636,"line_start":23,"line_end":23,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":6756},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/bank.rs","byte_start":322780,"byte_end":322798,"line_start":29,"line_end":29,"column_start":12,"column_end":30},"name":"AllBalanceResponse","qualname":"::query::bank::AllBalanceResponse","value":"AllBalanceResponse { amount }","parent":null,"children":[{"krate":0,"index":6757}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/bank.rs","byte_start":322733,"byte_end":322768,"line_start":28,"line_end":28,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":6757},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/bank.rs","byte_start":322866,"byte_end":322872,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"name":"amount","qualname":"::query::bank::AllBalanceResponse::amount","value":"std::vec::Vec<coins::Coin>","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":" Returns all non-zero coins held by this account.\n","sig":null,"attributes":[{"value":"/ Returns all non-zero coins held by this account.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/bank.rs","byte_start":322805,"byte_end":322857,"line_start":30,"line_end":30,"column_start":5,"column_end":57}}]},{"kind":"StructVariant","id":{"krate":0,"index":6920},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":323430,"byte_end":323436,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"PortId","qualname":"::query::ibc::IbcQuery::PortId","value":"IbcQuery::PortId {  }","parent":{"krate":0,"index":6919},"children":[],"decl_id":null,"docs":" Gets the Port ID the current contract is bound to.","sig":null,"attributes":[{"value":"/ Gets the Port ID the current contract is bound to.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":323327,"byte_end":323381,"line_start":14,"line_end":14,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":323386,"byte_end":323389,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ Returns a `PortIdResponse`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":323394,"byte_end":323425,"line_start":16,"line_end":16,"column_start":5,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":6921},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":323640,"byte_end":323652,"line_start":22,"line_end":22,"column_start":5,"column_end":17},"name":"ListChannels","qualname":"::query::ibc::IbcQuery::ListChannels","value":"IbcQuery::ListChannels { port_id }","parent":{"krate":0,"index":6919},"children":[],"decl_id":null,"docs":" Lists all channels that are bound to a given port.\n If `port_id` is omitted, this list all channels bound to the contract's port.","sig":null,"attributes":[{"value":"/ Lists all channels that are bound to a given port.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":323445,"byte_end":323499,"line_start":18,"line_end":18,"column_start":5,"column_end":59}},{"value":"/ If `port_id` is omitted, this list all channels bound to the contract's port.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":323504,"byte_end":323585,"line_start":19,"line_end":19,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":323590,"byte_end":323593,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ Returns a `ListChannelsResponse`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":323598,"byte_end":323635,"line_start":21,"line_end":21,"column_start":5,"column_end":42}}]},{"kind":"StructVariant","id":{"krate":0,"index":6923},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":323905,"byte_end":323912,"line_start":28,"line_end":28,"column_start":5,"column_end":12},"name":"Channel","qualname":"::query::ibc::IbcQuery::Channel","value":"IbcQuery::Channel { channel_id, port_id }","parent":{"krate":0,"index":6919},"children":[],"decl_id":null,"docs":" Lists all information for a (portID, channelID) pair.\n If port_id is omitted, it will default to the contract's own channel.\n (To save a PortId{} call)","sig":null,"attributes":[{"value":"/ Lists all information for a (portID, channelID) pair.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":323686,"byte_end":323743,"line_start":23,"line_end":23,"column_start":5,"column_end":62}},{"value":"/ If port_id is omitted, it will default to the contract's own channel.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":323748,"byte_end":323821,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ (To save a PortId{} call)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":323826,"byte_end":323855,"line_start":25,"line_end":25,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":323860,"byte_end":323863,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Returns a `ChannelResponse`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":323868,"byte_end":323900,"line_start":27,"line_end":27,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":6919},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":323312,"byte_end":323320,"line_start":13,"line_end":13,"column_start":10,"column_end":18},"name":"IbcQuery","qualname":"::query::ibc::IbcQuery","value":"pub enum IbcQuery {\n    PortId {\n    },\n    ListChannels {\n        port_id: Option<String>,\n    },\n    Channel {\n        channel_id: String,\n        port_id: Option<String>,\n    },\n}","parent":null,"children":[{"krate":0,"index":6920},{"krate":0,"index":6921},{"krate":0,"index":6923}],"decl_id":null,"docs":" These are queries to the various IBC modules to see the state of the contract's\n IBC connection. These will return errors if the contract is not \"ibc enabled\"\n","sig":null,"attributes":[{"value":"/ These are queries to the various IBC modules to see the state of the contract's","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":323012,"byte_end":323095,"line_start":8,"line_end":8,"column_start":1,"column_end":84}},{"value":"/ IBC connection. These will return errors if the contract is not \"ibc enabled\"","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":323096,"byte_end":323177,"line_start":9,"line_end":9,"column_start":1,"column_end":82}},{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":323178,"byte_end":323195,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":323267,"byte_end":323302,"line_start":12,"line_end":12,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6926},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":324090,"byte_end":324104,"line_start":36,"line_end":36,"column_start":12,"column_end":26},"name":"PortIdResponse","qualname":"::query::ibc::PortIdResponse","value":"PortIdResponse { port_id }","parent":null,"children":[{"krate":0,"index":6927}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6927},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":324115,"byte_end":324122,"line_start":37,"line_end":37,"column_start":9,"column_end":16},"name":"port_id","qualname":"::query::ibc::PortIdResponse::port_id","value":"std::string::String","parent":{"krate":0,"index":6926},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6987},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":324217,"byte_end":324237,"line_start":41,"line_end":41,"column_start":12,"column_end":32},"name":"ListChannelsResponse","qualname":"::query::ibc::ListChannelsResponse","value":"ListChannelsResponse { channels }","parent":null,"children":[{"krate":0,"index":6988}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6988},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":324248,"byte_end":324256,"line_start":42,"line_end":42,"column_start":9,"column_end":17},"name":"channels","qualname":"::query::ibc::ListChannelsResponse::channels","value":"std::vec::Vec<ibc::IbcChannel>","parent":{"krate":0,"index":6987},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7048},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":324360,"byte_end":324375,"line_start":46,"line_end":46,"column_start":12,"column_end":27},"name":"ChannelResponse","qualname":"::query::ibc::ChannelResponse","value":"ChannelResponse { channel }","parent":null,"children":[{"krate":0,"index":7049}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7049},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/ibc.rs","byte_start":324386,"byte_end":324393,"line_start":47,"line_end":47,"column_start":9,"column_end":16},"name":"channel","qualname":"::query::ibc::ChannelResponse::channel","value":"std::option::Option<ibc::IbcChannel>","parent":{"krate":0,"index":7048},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7341},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":324803,"byte_end":324814,"line_start":13,"line_end":13,"column_start":5,"column_end":16},"name":"BondedDenom","qualname":"::query::staking::StakingQuery::BondedDenom","value":"StakingQuery::BondedDenom {  }","parent":{"krate":0,"index":7340},"children":[],"decl_id":null,"docs":" Returns the denomination that can be bonded (if there are multiple native tokens on the chain)\n","sig":null,"attributes":[{"value":"/ Returns the denomination that can be bonded (if there are multiple native tokens on the chain)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":324700,"byte_end":324798,"line_start":12,"line_end":12,"column_start":5,"column_end":103}}]},{"kind":"StructVariant","id":{"krate":0,"index":7342},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":324891,"byte_end":324905,"line_start":15,"line_end":15,"column_start":5,"column_end":19},"name":"AllDelegations","qualname":"::query::staking::StakingQuery::AllDelegations","value":"StakingQuery::AllDelegations { delegator }","parent":{"krate":0,"index":7340},"children":[],"decl_id":null,"docs":" AllDelegations will return all delegations by the delegator\n","sig":null,"attributes":[{"value":"/ AllDelegations will return all delegations by the delegator","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":324823,"byte_end":324886,"line_start":14,"line_end":14,"column_start":5,"column_end":68}}]},{"kind":"StructVariant","id":{"krate":0,"index":7344},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":325055,"byte_end":325065,"line_start":18,"line_end":18,"column_start":5,"column_end":15},"name":"Delegation","qualname":"::query::staking::StakingQuery::Delegation","value":"StakingQuery::Delegation { delegator, validator }","parent":{"krate":0,"index":7340},"children":[],"decl_id":null,"docs":" Delegation will return more detailed info on a particular\n delegation, defined by delegator/validator pair\n","sig":null,"attributes":[{"value":"/ Delegation will return more detailed info on a particular","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":324933,"byte_end":324994,"line_start":16,"line_end":16,"column_start":5,"column_end":66}},{"value":"/ delegation, defined by delegator/validator pair","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":324999,"byte_end":325050,"line_start":17,"line_end":17,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":7347},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":325271,"byte_end":325284,"line_start":25,"line_end":25,"column_start":5,"column_end":18},"name":"AllValidators","qualname":"::query::staking::StakingQuery::AllValidators","value":"StakingQuery::AllValidators {  }","parent":{"krate":0,"index":7340},"children":[],"decl_id":null,"docs":" Returns all validators in the currently active validator set.","sig":null,"attributes":[{"value":"/ Returns all validators in the currently active validator set.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":325133,"byte_end":325198,"line_start":22,"line_end":22,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":325203,"byte_end":325206,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ The query response type is `AllValidatorsResponse`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":325211,"byte_end":325266,"line_start":24,"line_end":24,"column_start":5,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":7348},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":325498,"byte_end":325507,"line_start":30,"line_end":30,"column_start":5,"column_end":14},"name":"Validator","qualname":"::query::staking::StakingQuery::Validator","value":"StakingQuery::Validator { address }","parent":{"krate":0,"index":7340},"children":[],"decl_id":null,"docs":" Returns the validator at the given address. Returns None if the validator is\n not part of the currently active validator set.","sig":null,"attributes":[{"value":"/ Returns the validator at the given address. Returns None if the validator is","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":325293,"byte_end":325373,"line_start":26,"line_end":26,"column_start":5,"column_end":85}},{"value":"/ not part of the currently active validator set.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":325378,"byte_end":325429,"line_start":27,"line_end":27,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":325434,"byte_end":325437,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ The query response type is `ValidatorResponse`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":325442,"byte_end":325493,"line_start":29,"line_end":29,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":7340},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":324681,"byte_end":324693,"line_start":11,"line_end":11,"column_start":10,"column_end":22},"name":"StakingQuery","qualname":"::query::staking::StakingQuery","value":"pub enum StakingQuery {\n    BondedDenom {\n    },\n    AllDelegations {\n        delegator: String,\n    },\n    Delegation {\n        delegator: String,\n        validator: String,\n    },\n    AllValidators {\n    },\n    Validator {\n        address: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":7341},{"krate":0,"index":7342},{"krate":0,"index":7344},{"krate":0,"index":7347},{"krate":0,"index":7348}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":324547,"byte_end":324564,"line_start":8,"line_end":8,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":324636,"byte_end":324671,"line_start":10,"line_end":10,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7409},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":325818,"byte_end":325837,"line_start":39,"line_end":39,"column_start":12,"column_end":31},"name":"BondedDenomResponse","qualname":"::query::staking::BondedDenomResponse","value":"BondedDenomResponse { denom }","parent":null,"children":[{"krate":0,"index":7410}],"decl_id":null,"docs":" BondedDenomResponse is data format returned from StakingRequest::BondedDenom query\n","sig":null,"attributes":[{"value":"/ BondedDenomResponse is data format returned from StakingRequest::BondedDenom query","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":325613,"byte_end":325699,"line_start":36,"line_end":36,"column_start":1,"column_end":87}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":325771,"byte_end":325806,"line_start":38,"line_end":38,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":7410},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":325848,"byte_end":325853,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"name":"denom","qualname":"::query::staking::BondedDenomResponse::denom","value":"std::string::String","parent":{"krate":0,"index":7409},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7470},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":326074,"byte_end":326096,"line_start":46,"line_end":46,"column_start":12,"column_end":34},"name":"AllDelegationsResponse","qualname":"::query::staking::AllDelegationsResponse","value":"AllDelegationsResponse { delegations }","parent":null,"children":[{"krate":0,"index":7471}],"decl_id":null,"docs":" DelegationsResponse is data format returned from StakingRequest::AllDelegations query\n","sig":null,"attributes":[{"value":"/ DelegationsResponse is data format returned from StakingRequest::AllDelegations query","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":325866,"byte_end":325955,"line_start":43,"line_end":43,"column_start":1,"column_end":90}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":326027,"byte_end":326062,"line_start":45,"line_end":45,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":7471},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":326107,"byte_end":326118,"line_start":47,"line_end":47,"column_start":9,"column_end":20},"name":"delegations","qualname":"::query::staking::AllDelegationsResponse::delegations","value":"std::vec::Vec<query::staking::Delegation>","parent":{"krate":0,"index":7470},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7472},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":326334,"byte_end":326344,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"Delegation","qualname":"::query::staking::Delegation","value":"Delegation { delegator, validator, amount }","parent":null,"children":[{"krate":0,"index":7473},{"krate":0,"index":7474},{"krate":0,"index":7475}],"decl_id":null,"docs":" Delegation is basic (cheap to query) data about a delegation.","sig":null,"attributes":[{"value":"/ Delegation is basic (cheap to query) data about a delegation.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":326140,"byte_end":326205,"line_start":50,"line_end":50,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":326206,"byte_end":326209,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Instances are created in the querier.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":326210,"byte_end":326251,"line_start":52,"line_end":52,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":7473},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":326355,"byte_end":326364,"line_start":55,"line_end":55,"column_start":9,"column_end":18},"name":"delegator","qualname":"::query::staking::Delegation::delegator","value":"addresses::Addr","parent":{"krate":0,"index":7472},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7474},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":326433,"byte_end":326442,"line_start":57,"line_end":57,"column_start":9,"column_end":18},"name":"validator","qualname":"::query::staking::Delegation::validator","value":"std::string::String","parent":{"krate":0,"index":7472},"children":[],"decl_id":null,"docs":" A validator address (e.g. cosmosvaloper1...)\n","sig":null,"attributes":[{"value":"/ A validator address (e.g. cosmosvaloper1...)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":326376,"byte_end":326424,"line_start":56,"line_end":56,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":7475},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":326510,"byte_end":326516,"line_start":59,"line_end":59,"column_start":9,"column_end":15},"name":"amount","qualname":"::query::staking::Delegation::amount","value":"coins::Coin","parent":{"krate":0,"index":7472},"children":[],"decl_id":null,"docs":" How much we have locked in the delegation\n","sig":null,"attributes":[{"value":"/ How much we have locked in the delegation","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":326456,"byte_end":326501,"line_start":58,"line_end":58,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":7600},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":327295,"byte_end":327309,"line_start":84,"line_end":84,"column_start":12,"column_end":26},"name":"FullDelegation","qualname":"::query::staking::FullDelegation","value":"FullDelegation { delegator, validator, amount, can_redelegate, accumulated_rewards }","parent":null,"children":[{"krate":0,"index":7601},{"krate":0,"index":7602},{"krate":0,"index":7603},{"krate":0,"index":7604},{"krate":0,"index":7605}],"decl_id":null,"docs":" FullDelegation is all the info on the delegation, some (like accumulated_reward and can_redelegate)\n is expensive to query.","sig":null,"attributes":[{"value":"/ FullDelegation is all the info on the delegation, some (like accumulated_reward and can_redelegate)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":327036,"byte_end":327139,"line_start":79,"line_end":79,"column_start":1,"column_end":104}},{"value":"/ is expensive to query.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":327140,"byte_end":327166,"line_start":80,"line_end":80,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":327167,"byte_end":327170,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Instances are created in the querier.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":327171,"byte_end":327212,"line_start":82,"line_end":82,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":7601},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":327320,"byte_end":327329,"line_start":85,"line_end":85,"column_start":9,"column_end":18},"name":"delegator","qualname":"::query::staking::FullDelegation::delegator","value":"addresses::Addr","parent":{"krate":0,"index":7600},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7602},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":327398,"byte_end":327407,"line_start":87,"line_end":87,"column_start":9,"column_end":18},"name":"validator","qualname":"::query::staking::FullDelegation::validator","value":"std::string::String","parent":{"krate":0,"index":7600},"children":[],"decl_id":null,"docs":" A validator address (e.g. cosmosvaloper1...)\n","sig":null,"attributes":[{"value":"/ A validator address (e.g. cosmosvaloper1...)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":327341,"byte_end":327389,"line_start":86,"line_end":86,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":7603},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":327475,"byte_end":327481,"line_start":89,"line_end":89,"column_start":9,"column_end":15},"name":"amount","qualname":"::query::staking::FullDelegation::amount","value":"coins::Coin","parent":{"krate":0,"index":7600},"children":[],"decl_id":null,"docs":" How much we have locked in the delegation\n","sig":null,"attributes":[{"value":"/ How much we have locked in the delegation","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":327421,"byte_end":327466,"line_start":88,"line_end":88,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":7604},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":327696,"byte_end":327710,"line_start":93,"line_end":93,"column_start":9,"column_end":23},"name":"can_redelegate","qualname":"::query::staking::FullDelegation::can_redelegate","value":"coins::Coin","parent":{"krate":0,"index":7600},"children":[],"decl_id":null,"docs":" can_redelegate captures how much can be immediately redelegated.\n 0 is no redelegation and can_redelegate == amount is redelegate all\n but there are many places between the two\n","sig":null,"attributes":[{"value":"/ can_redelegate captures how much can be immediately redelegated.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":327493,"byte_end":327561,"line_start":90,"line_end":90,"column_start":5,"column_end":73}},{"value":"/ 0 is no redelegation and can_redelegate == amount is redelegate all","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":327566,"byte_end":327637,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ but there are many places between the two","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":327642,"byte_end":327687,"line_start":92,"line_end":92,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":7605},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":327769,"byte_end":327788,"line_start":95,"line_end":95,"column_start":9,"column_end":28},"name":"accumulated_rewards","qualname":"::query::staking::FullDelegation::accumulated_rewards","value":"std::vec::Vec<coins::Coin>","parent":{"krate":0,"index":7600},"children":[],"decl_id":null,"docs":" How much we can currently withdraw\n","sig":null,"attributes":[{"value":"/ How much we can currently withdraw","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":327722,"byte_end":327760,"line_start":94,"line_end":94,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":7673},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":327956,"byte_end":327977,"line_start":100,"line_end":100,"column_start":12,"column_end":33},"name":"AllValidatorsResponse","qualname":"::query::staking::AllValidatorsResponse","value":"AllValidatorsResponse { validators }","parent":null,"children":[{"krate":0,"index":7674}],"decl_id":null,"docs":" The data format returned from StakingRequest::AllValidators query\n","sig":null,"attributes":[{"value":"/ The data format returned from StakingRequest::AllValidators query","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":327804,"byte_end":327873,"line_start":98,"line_end":98,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":7674},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":327988,"byte_end":327998,"line_start":101,"line_end":101,"column_start":9,"column_end":19},"name":"validators","qualname":"::query::staking::AllValidatorsResponse::validators","value":"std::vec::Vec<query::staking::Validator>","parent":{"krate":0,"index":7673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7734},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":328167,"byte_end":328184,"line_start":106,"line_end":106,"column_start":12,"column_end":29},"name":"ValidatorResponse","qualname":"::query::staking::ValidatorResponse","value":"ValidatorResponse { validator }","parent":null,"children":[{"krate":0,"index":7735}],"decl_id":null,"docs":" The data format returned from StakingRequest::Validator query\n","sig":null,"attributes":[{"value":"/ The data format returned from StakingRequest::Validator query","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":328019,"byte_end":328084,"line_start":104,"line_end":104,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":7735},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":328195,"byte_end":328204,"line_start":107,"line_end":107,"column_start":9,"column_end":18},"name":"validator","qualname":"::query::staking::ValidatorResponse::validator","value":"std::option::Option<query::staking::Validator>","parent":{"krate":0,"index":7734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7795},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":328352,"byte_end":328361,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"Validator","qualname":"::query::staking::Validator","value":"Validator { address, commission, max_commission, max_change_rate }","parent":null,"children":[{"krate":0,"index":7796},{"krate":0,"index":7797},{"krate":0,"index":7798},{"krate":0,"index":7799}],"decl_id":null,"docs":" Instances are created in the querier.\n","sig":null,"attributes":[{"value":"/ Instances are created in the querier.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":328228,"byte_end":328269,"line_start":110,"line_end":110,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":7796},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":328425,"byte_end":328432,"line_start":114,"line_end":114,"column_start":9,"column_end":16},"name":"address","qualname":"::query::staking::Validator::address","value":"std::string::String","parent":{"krate":0,"index":7795},"children":[],"decl_id":null,"docs":" A validator address (e.g. cosmosvaloper1...)\n","sig":null,"attributes":[{"value":"/ A validator address (e.g. cosmosvaloper1...)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":328368,"byte_end":328416,"line_start":113,"line_end":113,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":7797},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":328450,"byte_end":328460,"line_start":115,"line_end":115,"column_start":9,"column_end":19},"name":"commission","qualname":"::query::staking::Validator::commission","value":"math::decimal::Decimal","parent":{"krate":0,"index":7795},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7798},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":328479,"byte_end":328493,"line_start":116,"line_end":116,"column_start":9,"column_end":23},"name":"max_commission","qualname":"::query::staking::Validator::max_commission","value":"math::decimal::Decimal","parent":{"krate":0,"index":7795},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7799},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":328567,"byte_end":328582,"line_start":118,"line_end":118,"column_start":9,"column_end":24},"name":"max_change_rate","qualname":"::query::staking::Validator::max_change_rate","value":"math::decimal::Decimal","parent":{"krate":0,"index":7795},"children":[],"decl_id":null,"docs":" TODO: what units are these (in terms of time)?\n","sig":null,"attributes":[{"value":"/ TODO: what units are these (in terms of time)?","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":328508,"byte_end":328558,"line_start":117,"line_end":117,"column_start":5,"column_end":55}}]},{"kind":"StructVariant","id":{"krate":0,"index":8092},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/wasm.rs","byte_start":329357,"byte_end":329362,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"Smart","qualname":"::query::wasm::WasmQuery::Smart","value":"WasmQuery::Smart { contract_addr, msg }","parent":{"krate":0,"index":8091},"children":[],"decl_id":null,"docs":" this queries the public API of another contract at a known address (with known ABI)\n return value is whatever the contract returns (caller should know)\n","sig":null,"attributes":[{"value":"/ this queries the public API of another contract at a known address (with known ABI)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/wasm.rs","byte_start":329190,"byte_end":329277,"line_start":10,"line_end":10,"column_start":5,"column_end":92}},{"value":"/ return value is whatever the contract returns (caller should know)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/wasm.rs","byte_start":329282,"byte_end":329352,"line_start":11,"line_end":11,"column_start":5,"column_end":75}}]},{"kind":"StructVariant","id":{"krate":0,"index":8095},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/wasm.rs","byte_start":329638,"byte_end":329641,"line_start":19,"line_end":19,"column_start":5,"column_end":8},"name":"Raw","qualname":"::query::wasm::WasmQuery::Raw","value":"WasmQuery::Raw { contract_addr, key }","parent":{"krate":0,"index":8091},"children":[],"decl_id":null,"docs":" this queries the raw kv-store of the contract.\n returns the raw, unparsed data stored at that key, which may be an empty vector if not present\n","sig":null,"attributes":[{"value":"/ this queries the raw kv-store of the contract.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/wasm.rs","byte_start":329480,"byte_end":329530,"line_start":17,"line_end":17,"column_start":5,"column_end":55}},{"value":"/ returns the raw, unparsed data stored at that key, which may be an empty vector if not present","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/wasm.rs","byte_start":329535,"byte_end":329633,"line_start":18,"line_end":18,"column_start":5,"column_end":103}}]},{"kind":"StructVariant","id":{"krate":0,"index":8098},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/wasm.rs","byte_start":329854,"byte_end":329866,"line_start":25,"line_end":25,"column_start":5,"column_end":17},"name":"ContractInfo","qualname":"::query::wasm::WasmQuery::ContractInfo","value":"WasmQuery::ContractInfo { contract_addr }","parent":{"krate":0,"index":8091},"children":[],"decl_id":null,"docs":" returns a ContractInfoResponse with metadata on the contract from the runtime\n","sig":null,"attributes":[{"value":"/ returns a ContractInfoResponse with metadata on the contract from the runtime","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/wasm.rs","byte_start":329768,"byte_end":329849,"line_start":24,"line_end":24,"column_start":5,"column_end":86}}]},{"kind":"Enum","id":{"krate":0,"index":8091},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/wasm.rs","byte_start":329174,"byte_end":329183,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"WasmQuery","qualname":"::query::wasm::WasmQuery","value":"pub enum WasmQuery {\n    Smart {\n        contract_addr: String,\n        msg: Binary,\n    },\n    Raw {\n        contract_addr: String,\n        key: Binary,\n    },\n    ContractInfo {\n        contract_addr: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":8092},{"krate":0,"index":8095},{"krate":0,"index":8098}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/wasm.rs","byte_start":329040,"byte_end":329057,"line_start":6,"line_end":6,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/wasm.rs","byte_start":329129,"byte_end":329164,"line_start":8,"line_end":8,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8100},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/wasm.rs","byte_start":329997,"byte_end":330017,"line_start":30,"line_end":30,"column_start":12,"column_end":32},"name":"ContractInfoResponse","qualname":"::query::wasm::ContractInfoResponse","value":"ContractInfoResponse { code_id, creator, admin, pinned, ibc_port }","parent":null,"children":[{"krate":0,"index":8101},{"krate":0,"index":8102},{"krate":0,"index":8103},{"krate":0,"index":8104},{"krate":0,"index":8105}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/wasm.rs","byte_start":329897,"byte_end":329914,"line_start":28,"line_end":28,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":8101},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/wasm.rs","byte_start":330028,"byte_end":330035,"line_start":31,"line_end":31,"column_start":9,"column_end":16},"name":"code_id","qualname":"::query::wasm::ContractInfoResponse::code_id","value":"u64","parent":{"krate":0,"index":8100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8102},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/wasm.rs","byte_start":330098,"byte_end":330105,"line_start":33,"line_end":33,"column_start":9,"column_end":16},"name":"creator","qualname":"::query::wasm::ContractInfoResponse::creator","value":"std::string::String","parent":{"krate":0,"index":8100},"children":[],"decl_id":null,"docs":" address that instantiated this contract\n","sig":null,"attributes":[{"value":"/ address that instantiated this contract","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/wasm.rs","byte_start":330046,"byte_end":330089,"line_start":32,"line_end":32,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":8103},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/wasm.rs","byte_start":330169,"byte_end":330174,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"admin","qualname":"::query::wasm::ContractInfoResponse::admin","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":8100},"children":[],"decl_id":null,"docs":" admin who can run migrations (if any)\n","sig":null,"attributes":[{"value":"/ admin who can run migrations (if any)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/wasm.rs","byte_start":330119,"byte_end":330160,"line_start":34,"line_end":34,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":8104},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/wasm.rs","byte_start":330288,"byte_end":330294,"line_start":37,"line_end":37,"column_start":9,"column_end":15},"name":"pinned","qualname":"::query::wasm::ContractInfoResponse::pinned","value":"bool","parent":{"krate":0,"index":8100},"children":[],"decl_id":null,"docs":" if set, the contract is pinned to the cache, and thus uses less gas when called\n","sig":null,"attributes":[{"value":"/ if set, the contract is pinned to the cache, and thus uses less gas when called","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/wasm.rs","byte_start":330196,"byte_end":330279,"line_start":36,"line_end":36,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":8105},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/wasm.rs","byte_start":330361,"byte_end":330369,"line_start":39,"line_end":39,"column_start":9,"column_end":17},"name":"ibc_port","qualname":"::query::wasm::ContractInfoResponse::ibc_port","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":8100},"children":[],"decl_id":null,"docs":" set if this contract has bound an IBC port\n","sig":null,"attributes":[{"value":"/ set if this contract has bound an IBC port","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/wasm.rs","byte_start":330306,"byte_end":330352,"line_start":38,"line_end":38,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8287},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":319359,"byte_end":319363,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Bank","qualname":"::query::QueryRequest::Bank","value":"QueryRequest::Bank(BankQuery)","parent":{"krate":0,"index":8285},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8290},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":319380,"byte_end":319386,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Custom","qualname":"::query::QueryRequest::Custom","value":"QueryRequest::Custom(C)","parent":{"krate":0,"index":8285},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8293},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":319427,"byte_end":319434,"line_start":33,"line_end":33,"column_start":5,"column_end":12},"name":"Staking","qualname":"::query::QueryRequest::Staking","value":"QueryRequest::Staking(StakingQuery)","parent":{"krate":0,"index":8285},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":319395,"byte_end":319422,"line_start":32,"line_end":32,"column_start":5,"column_end":32}}]},{"kind":"StructVariant","id":{"krate":0,"index":8296},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":319849,"byte_end":319857,"line_start":38,"line_end":38,"column_start":5,"column_end":13},"name":"Stargate","qualname":"::query::QueryRequest::Stargate","value":"QueryRequest::Stargate { path, data }","parent":{"krate":0,"index":8285},"children":[],"decl_id":null,"docs":" A Stargate query encoded the same way as abci_query, with path and protobuf encoded Data.\n The format is defined in [ADR-21](https://github.com/cosmos/cosmos-sdk/blob/master/docs/architecture/adr-021-protobuf-query-encoding.md)\n The response is also protobuf encoded. The caller is responsible for compiling the proper protobuf definitions\n","sig":null,"attributes":[{"value":"/ A Stargate query encoded the same way as abci_query, with path and protobuf encoded Data.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":319454,"byte_end":319547,"line_start":34,"line_end":34,"column_start":5,"column_end":98}},{"value":"/ The format is defined in [ADR-21](https://github.com/cosmos/cosmos-sdk/blob/master/docs/architecture/adr-021-protobuf-query-encoding.md)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":319552,"byte_end":319692,"line_start":35,"line_end":35,"column_start":5,"column_end":145}},{"value":"/ The response is also protobuf encoded. The caller is responsible for compiling the proper protobuf definitions","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":319697,"byte_end":319811,"line_start":36,"line_end":36,"column_start":5,"column_end":119}},{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":319816,"byte_end":319844,"line_start":37,"line_end":37,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8299},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320163,"byte_end":320166,"line_start":46,"line_end":46,"column_start":5,"column_end":8},"name":"Ibc","qualname":"::query::QueryRequest::Ibc","value":"QueryRequest::Ibc(IbcQuery)","parent":{"krate":0,"index":8285},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320130,"byte_end":320158,"line_start":45,"line_end":45,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8302},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320182,"byte_end":320186,"line_start":47,"line_end":47,"column_start":5,"column_end":9},"name":"Wasm","qualname":"::query::QueryRequest::Wasm","value":"QueryRequest::Wasm(WasmQuery)","parent":{"krate":0,"index":8285},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8285},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":319337,"byte_end":319349,"line_start":29,"line_end":29,"column_start":10,"column_end":22},"name":"QueryRequest","qualname":"::query::QueryRequest","value":"pub enum QueryRequest<C> {\n    Bank(BankQuery),\n    Custom(C),\n    Staking(StakingQuery),\n    Stargate {\n        path: String,\n        data: Binary,\n    },\n    Ibc(IbcQuery),\n    Wasm(WasmQuery),\n}","parent":null,"children":[{"krate":0,"index":8287},{"krate":0,"index":8290},{"krate":0,"index":8293},{"krate":0,"index":8296},{"krate":0,"index":8299},{"krate":0,"index":8302}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":319203,"byte_end":319220,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":319292,"byte_end":319327,"line_start":28,"line_end":28,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":1886},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320802,"byte_end":320813,"line_start":69,"line_end":69,"column_start":11,"column_end":22},"name":"CustomQuery","qualname":"::query::CustomQuery","value":"CustomQuery: Serialize + Clone","parent":null,"children":[],"decl_id":null,"docs":" A trait that is required to avoid conflicts with other query types like BankQuery and WasmQuery\n in generic implementations.\n You need to implement it in your custom query type.","sig":null,"attributes":[{"value":"/ A trait that is required to avoid conflicts with other query types like BankQuery and WasmQuery","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320202,"byte_end":320301,"line_start":50,"line_end":50,"column_start":1,"column_end":100}},{"value":"/ in generic implementations.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320302,"byte_end":320333,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/ You need to implement it in your custom query type.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320334,"byte_end":320389,"line_start":52,"line_end":52,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320390,"byte_end":320393,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320394,"byte_end":320408,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320409,"byte_end":320412,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320413,"byte_end":320420,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::CustomQuery;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320421,"byte_end":320457,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ # use schemars::JsonSchema;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320458,"byte_end":320489,"line_start":58,"line_end":58,"column_start":1,"column_end":32}},{"value":"/ # use serde::{Deserialize, Serialize};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320490,"byte_end":320532,"line_start":59,"line_end":59,"column_start":1,"column_end":43}},{"value":"/ #[derive(Serialize, Deserialize, Clone, Debug, PartialEq, JsonSchema)]","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320533,"byte_end":320607,"line_start":60,"line_end":60,"column_start":1,"column_end":75}},{"value":"/ #[serde(rename_all = \"snake_case\")]","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320608,"byte_end":320647,"line_start":61,"line_end":61,"column_start":1,"column_end":40}},{"value":"/ pub enum MyCustomQuery {","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320648,"byte_end":320676,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/     Ping {},","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320677,"byte_end":320693,"line_start":63,"line_end":63,"column_start":1,"column_end":17}},{"value":"/     Capitalized { text: String },","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320694,"byte_end":320731,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320732,"byte_end":320737,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320738,"byte_end":320741,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ impl CustomQuery for MyCustomQuery {}","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320742,"byte_end":320783,"line_start":67,"line_end":67,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320784,"byte_end":320791,"line_start":68,"line_end":68,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8373},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":332511,"byte_end":332513,"line_start":35,"line_end":35,"column_start":5,"column_end":7},"name":"Ok","qualname":"::results::contract_result::ContractResult::Ok","value":"ContractResult::Ok(S)","parent":{"krate":0,"index":8371},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8376},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":332731,"byte_end":332734,"line_start":39,"line_end":39,"column_start":5,"column_end":8},"name":"Err","qualname":"::results::contract_result::ContractResult::Err","value":"ContractResult::Err(String)","parent":{"krate":0,"index":8371},"children":[],"decl_id":null,"docs":" An error type that every custom error created by contract developers can be converted to.\n This could potientially have more structure, but String is the easiest.\n","sig":null,"attributes":[{"value":"/ An error type that every custom error created by contract developers can be converted to.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":332522,"byte_end":332615,"line_start":36,"line_end":36,"column_start":5,"column_end":98}},{"value":"/ This could potientially have more structure, but String is the easiest.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":332620,"byte_end":332695,"line_start":37,"line_end":37,"column_start":5,"column_end":80}},{"value":"serde(rename = \"error\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":332700,"byte_end":332726,"line_start":38,"line_end":38,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":8371},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":332487,"byte_end":332501,"line_start":34,"line_end":34,"column_start":10,"column_end":24},"name":"ContractResult","qualname":"::results::contract_result::ContractResult","value":"pub enum ContractResult<S> { Ok(S), Err(String), }","parent":null,"children":[{"krate":0,"index":8373},{"krate":0,"index":8376}],"decl_id":null,"docs":" This is the final result type that is created and serialized in a contract for\n every init/execute/migrate call. The VM then deserializes this type to distinguish\n between successful and failed executions.","sig":null,"attributes":[{"value":"/ This is the final result type that is created and serialized in a contract for","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":331211,"byte_end":331293,"line_start":5,"line_end":5,"column_start":1,"column_end":83}},{"value":"/ every init/execute/migrate call. The VM then deserializes this type to distinguish","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":331294,"byte_end":331380,"line_start":6,"line_end":6,"column_start":1,"column_end":87}},{"value":"/ between successful and failed executions.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":331381,"byte_end":331426,"line_start":7,"line_end":7,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":331427,"byte_end":331430,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ We use a custom type here instead of Rust's Result because we want to be able to","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":331431,"byte_end":331515,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/ define the serialization, which is a public interface. Every language that compiles","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":331516,"byte_end":331603,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"/ to Wasm and runs in the ComsWasm VM needs to create the same JSON representation.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":331604,"byte_end":331689,"line_start":11,"line_end":11,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":331690,"byte_end":331693,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":331694,"byte_end":331708,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":331709,"byte_end":331712,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Success:","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":331713,"byte_end":331725,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":331726,"byte_end":331729,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":331730,"byte_end":331737,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, ContractResult, Response};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":331738,"byte_end":331797,"line_start":18,"line_end":18,"column_start":1,"column_end":60}},{"value":"/ let response: Response = Response::default();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":331798,"byte_end":331847,"line_start":19,"line_end":19,"column_start":1,"column_end":50}},{"value":"/ let result: ContractResult<Response> = ContractResult::Ok(response);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":331848,"byte_end":331920,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"ok\":{\"messages\":[],\"attributes\":[],\"events\":[],\"data\":null}}\"#.to_vec());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":331921,"byte_end":332041,"line_start":21,"line_end":21,"column_start":1,"column_end":121}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":332042,"byte_end":332049,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":332050,"byte_end":332053,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Failure:","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":332054,"byte_end":332066,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":332067,"byte_end":332070,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":332071,"byte_end":332078,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, ContractResult, Response};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":332079,"byte_end":332138,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/ let error_msg = String::from(\"Something went wrong\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":332139,"byte_end":332196,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/ let result: ContractResult<Response> = ContractResult::Err(error_msg);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":332197,"byte_end":332271,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"error\":\"Something went wrong\"}\"#.to_vec());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":332272,"byte_end":332362,"line_start":30,"line_end":30,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":332363,"byte_end":332370,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":332442,"byte_end":332477,"line_start":33,"line_end":33,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1920},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":333036,"byte_end":333047,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"into_result","qualname":"<ContractResult<S>>::into_result","value":"pub fn into_result(Self) -> Result<S, String>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `ContractResult<S>` to a `Result<S, String>` as a convenient way\n to access the full Result API.\n","sig":null,"attributes":[{"value":"/ Converts a `ContractResult<S>` to a `Result<S, String>` as a convenient way","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":332906,"byte_end":332985,"line_start":45,"line_end":45,"column_start":5,"column_end":84}},{"value":"/ to access the full Result API.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":332990,"byte_end":333024,"line_start":46,"line_end":46,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1921},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":333135,"byte_end":333141,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<ContractResult<S>>::unwrap","value":"pub fn unwrap(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":333209,"byte_end":333214,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"is_ok","qualname":"<ContractResult<S>>::is_ok","value":"pub fn is_ok(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1923},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":333296,"byte_end":333302,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"is_err","qualname":"<ContractResult<S>>::is_err","value":"pub fn is_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1926},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":333427,"byte_end":333437,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"unwrap_err","qualname":"<ContractResult<S>>::unwrap_err","value":"pub fn unwrap_err(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1966},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":337974,"byte_end":337983,"line_start":16,"line_end":16,"column_start":11,"column_end":20},"name":"CustomMsg","qualname":"::results::cosmos_msg::CustomMsg","value":"CustomMsg: Serialize + Clone + fmt::Debug + PartialEq + JsonSchema","parent":null,"children":[],"decl_id":null,"docs":" Like CustomQuery for better type clarity.\n Also makes it shorter to use as a trait bound.\n","sig":null,"attributes":[{"value":"/ Like CustomQuery for better type clarity.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":337867,"byte_end":337912,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/ Also makes it shorter to use as a trait bound.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":337913,"byte_end":337963,"line_start":15,"line_end":15,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8497},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":338337,"byte_end":338341,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"Bank","qualname":"::results::cosmos_msg::CosmosMsg::Bank","value":"CosmosMsg::Bank(BankMsg)","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8500},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":338488,"byte_end":338494,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"Custom","qualname":"::results::cosmos_msg::CosmosMsg::Custom","value":"CosmosMsg::Custom(T)","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8503},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":338535,"byte_end":338542,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"Staking","qualname":"::results::cosmos_msg::CosmosMsg::Staking","value":"CosmosMsg::Staking(StakingMsg)","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":338503,"byte_end":338530,"line_start":29,"line_end":29,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8506},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":338592,"byte_end":338604,"line_start":32,"line_end":32,"column_start":5,"column_end":17},"name":"Distribution","qualname":"::results::cosmos_msg::CosmosMsg::Distribution","value":"CosmosMsg::Distribution(DistributionMsg)","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":338560,"byte_end":338587,"line_start":31,"line_end":31,"column_start":5,"column_end":32}}]},{"kind":"StructVariant","id":{"krate":0,"index":8509},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":338999,"byte_end":339007,"line_start":36,"line_end":36,"column_start":5,"column_end":13},"name":"Stargate","qualname":"::results::cosmos_msg::CosmosMsg::Stargate","value":"CosmosMsg::Stargate { type_url, value }","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":" A Stargate message encoded the same way as a protobuf [Any](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/any.proto).\n This is the same structure as messages in `TxBody` from [ADR-020](https://github.com/cosmos/cosmos-sdk/blob/master/docs/architecture/adr-020-protobuf-transaction-encoding.md)\n","sig":null,"attributes":[{"value":"/ A Stargate message encoded the same way as a protobuf [Any](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/any.proto).","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":338627,"byte_end":338778,"line_start":33,"line_end":33,"column_start":5,"column_end":156}},{"value":"/ This is the same structure as messages in `TxBody` from [ADR-020](https://github.com/cosmos/cosmos-sdk/blob/master/docs/architecture/adr-020-protobuf-transaction-encoding.md)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":338783,"byte_end":338961,"line_start":34,"line_end":34,"column_start":5,"column_end":183}},{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":338966,"byte_end":338994,"line_start":35,"line_end":35,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8512},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":339103,"byte_end":339106,"line_start":41,"line_end":41,"column_start":5,"column_end":8},"name":"Ibc","qualname":"::results::cosmos_msg::CosmosMsg::Ibc","value":"CosmosMsg::Ibc(IbcMsg)","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":339070,"byte_end":339098,"line_start":40,"line_end":40,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8515},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":339120,"byte_end":339124,"line_start":42,"line_end":42,"column_start":5,"column_end":9},"name":"Wasm","qualname":"::results::cosmos_msg::CosmosMsg::Wasm","value":"CosmosMsg::Wasm(WasmMsg)","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8518},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":339172,"byte_end":339175,"line_start":44,"line_end":44,"column_start":5,"column_end":8},"name":"Gov","qualname":"::results::cosmos_msg::CosmosMsg::Gov","value":"CosmosMsg::Gov(GovMsg)","parent":{"krate":0,"index":8495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":339139,"byte_end":339167,"line_start":43,"line_end":43,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":8495},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":338310,"byte_end":338319,"line_start":24,"line_end":24,"column_start":10,"column_end":19},"name":"CosmosMsg","qualname":"::results::cosmos_msg::CosmosMsg","value":"pub enum CosmosMsg<T = Empty> {\n    Bank(BankMsg),\n    Custom(T),\n    Staking(StakingMsg),\n    Distribution(DistributionMsg),\n    Stargate {\n        type_url: String,\n        value: Binary,\n    },\n    Ibc(IbcMsg),\n    Wasm(WasmMsg),\n    Gov(GovMsg),\n}","parent":null,"children":[{"krate":0,"index":8497},{"krate":0,"index":8500},{"krate":0,"index":8503},{"krate":0,"index":8506},{"krate":0,"index":8509},{"krate":0,"index":8512},{"krate":0,"index":8515},{"krate":0,"index":8518}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":338074,"byte_end":338091,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":338163,"byte_end":338198,"line_start":22,"line_end":22,"column_start":1,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":8649},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":339772,"byte_end":339776,"line_start":58,"line_end":58,"column_start":5,"column_end":9},"name":"Send","qualname":"::results::cosmos_msg::BankMsg::Send","value":"BankMsg::Send { to_address, amount }","parent":{"krate":0,"index":8648},"children":[],"decl_id":null,"docs":" Sends native tokens from the contract to the given address.","sig":null,"attributes":[{"value":"/ Sends native tokens from the contract to the given address.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":339475,"byte_end":339538,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":339543,"byte_end":339546,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This is translated to a [MsgSend](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/bank/v1beta1/tx.proto#L19-L28).","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":339551,"byte_end":339683,"line_start":56,"line_end":56,"column_start":5,"column_end":137}},{"value":"/ `from_address` is automatically filled with the current contract's address.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":339688,"byte_end":339767,"line_start":57,"line_end":57,"column_start":5,"column_end":84}}]},{"kind":"StructVariant","id":{"krate":0,"index":8652},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":340107,"byte_end":340111,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Burn","qualname":"::results::cosmos_msg::BankMsg::Burn","value":"BankMsg::Burn { amount }","parent":{"krate":0,"index":8648},"children":[],"decl_id":null,"docs":" This will burn the given coins from the contract's account.\n There is no Cosmos SDK message that performs this, but it can be done by calling the bank keeper.\n Important if a contract controls significant token supply that must be retired.\n","sig":null,"attributes":[{"value":"/ This will burn the given coins from the contract's account.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":339845,"byte_end":339908,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ There is no Cosmos SDK message that performs this, but it can be done by calling the bank keeper.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":339913,"byte_end":340014,"line_start":63,"line_end":63,"column_start":5,"column_end":106}},{"value":"/ Important if a contract controls significant token supply that must be retired.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":340019,"byte_end":340102,"line_start":64,"line_end":64,"column_start":5,"column_end":88}}]},{"kind":"Enum","id":{"krate":0,"index":8648},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":339461,"byte_end":339468,"line_start":53,"line_end":53,"column_start":10,"column_end":17},"name":"BankMsg","qualname":"::results::cosmos_msg::BankMsg","value":"pub enum BankMsg {\n    Send {\n        to_address: String,\n        amount: Vec<Coin>,\n    },\n    Burn {\n        amount: Vec<Coin>,\n    },\n}","parent":null,"children":[{"krate":0,"index":8649},{"krate":0,"index":8652}],"decl_id":null,"docs":" The message types of the bank module.","sig":null,"attributes":[{"value":"/ The message types of the bank module.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":339188,"byte_end":339229,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":339230,"byte_end":339233,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ See https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/bank/v1beta1/tx.proto","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":339234,"byte_end":339326,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":339327,"byte_end":339344,"line_start":50,"line_end":50,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":339416,"byte_end":339451,"line_start":52,"line_end":52,"column_start":1,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":8824},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":340695,"byte_end":340703,"line_start":78,"line_end":78,"column_start":5,"column_end":13},"name":"Delegate","qualname":"::results::cosmos_msg::StakingMsg::Delegate","value":"StakingMsg::Delegate { validator, amount }","parent":{"krate":0,"index":8823},"children":[],"decl_id":null,"docs":" This is translated to a [MsgDelegate](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto#L81-L90).\n `delegator_address` is automatically filled with the current contract's address.\n","sig":null,"attributes":[{"value":"/ This is translated to a [MsgDelegate](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto#L81-L90).","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":340462,"byte_end":340601,"line_start":76,"line_end":76,"column_start":5,"column_end":144}},{"value":"/ `delegator_address` is automatically filled with the current contract's address.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":340606,"byte_end":340690,"line_start":77,"line_end":77,"column_start":5,"column_end":89}}]},{"kind":"StructVariant","id":{"krate":0,"index":8827},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":340982,"byte_end":340992,"line_start":81,"line_end":81,"column_start":5,"column_end":15},"name":"Undelegate","qualname":"::results::cosmos_msg::StakingMsg::Undelegate","value":"StakingMsg::Undelegate { validator, amount }","parent":{"krate":0,"index":8823},"children":[],"decl_id":null,"docs":" This is translated to a [MsgUndelegate](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto#L112-L121).\n `delegator_address` is automatically filled with the current contract's address.\n","sig":null,"attributes":[{"value":"/ This is translated to a [MsgUndelegate](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto#L112-L121).","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":340745,"byte_end":340888,"line_start":79,"line_end":79,"column_start":5,"column_end":148}},{"value":"/ `delegator_address` is automatically filled with the current contract's address.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":340893,"byte_end":340977,"line_start":80,"line_end":80,"column_start":5,"column_end":89}}]},{"kind":"StructVariant","id":{"krate":0,"index":8830},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":341275,"byte_end":341285,"line_start":84,"line_end":84,"column_start":5,"column_end":15},"name":"Redelegate","qualname":"::results::cosmos_msg::StakingMsg::Redelegate","value":"StakingMsg::Redelegate { src_validator, dst_validator, amount }","parent":{"krate":0,"index":8823},"children":[],"decl_id":null,"docs":" This is translated to a [MsgBeginRedelegate](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto#L95-L105).\n `delegator_address` is automatically filled with the current contract's address.\n","sig":null,"attributes":[{"value":"/ This is translated to a [MsgBeginRedelegate](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto#L95-L105).","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":341034,"byte_end":341181,"line_start":82,"line_end":82,"column_start":5,"column_end":152}},{"value":"/ `delegator_address` is automatically filled with the current contract's address.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":341186,"byte_end":341270,"line_start":83,"line_end":83,"column_start":5,"column_end":89}}]},{"kind":"Enum","id":{"krate":0,"index":8823},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":340445,"byte_end":340455,"line_start":75,"line_end":75,"column_start":10,"column_end":20},"name":"StakingMsg","qualname":"::results::cosmos_msg::StakingMsg","value":"pub enum StakingMsg {\n    Delegate {\n        validator: String,\n        amount: Coin,\n    },\n    Undelegate {\n        validator: String,\n        amount: Coin,\n    },\n    Redelegate {\n        src_validator: String,\n        dst_validator: String,\n        amount: Coin,\n    },\n}","parent":null,"children":[{"krate":0,"index":8824},{"krate":0,"index":8827},{"krate":0,"index":8830}],"decl_id":null,"docs":" The message types of the staking module.","sig":null,"attributes":[{"value":"/ The message types of the staking module.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":340138,"byte_end":340182,"line_start":68,"line_end":68,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":340183,"byte_end":340186,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ See https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":340187,"byte_end":340282,"line_start":70,"line_end":70,"column_start":1,"column_end":96}},{"value":"cfg(feature = \"staking\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":340283,"byte_end":340310,"line_start":71,"line_end":71,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":340311,"byte_end":340328,"line_start":72,"line_end":72,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":340400,"byte_end":340435,"line_start":74,"line_end":74,"column_start":1,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":8960},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":341969,"byte_end":341987,"line_start":101,"line_end":101,"column_start":5,"column_end":23},"name":"SetWithdrawAddress","qualname":"::results::cosmos_msg::DistributionMsg::SetWithdrawAddress","value":"DistributionMsg::SetWithdrawAddress { address }","parent":{"krate":0,"index":8959},"children":[],"decl_id":null,"docs":" This is translated to a [MsgSetWithdrawAddress](https://github.com/cosmos/cosmos-sdk/blob/v0.42.4/proto/cosmos/distribution/v1beta1/tx.proto#L29-L37).\n `delegator_address` is automatically filled with the current contract's address.\n","sig":null,"attributes":[{"value":"/ This is translated to a [MsgSetWithdrawAddress](https://github.com/cosmos/cosmos-sdk/blob/v0.42.4/proto/cosmos/distribution/v1beta1/tx.proto#L29-L37).","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":341721,"byte_end":341875,"line_start":99,"line_end":99,"column_start":5,"column_end":159}},{"value":"/ `delegator_address` is automatically filled with the current contract's address.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":341880,"byte_end":341964,"line_start":100,"line_end":100,"column_start":5,"column_end":89}}]},{"kind":"StructVariant","id":{"krate":0,"index":8962},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":342315,"byte_end":342338,"line_start":107,"line_end":107,"column_start":5,"column_end":28},"name":"WithdrawDelegatorReward","qualname":"::results::cosmos_msg::DistributionMsg::WithdrawDelegatorReward","value":"DistributionMsg::WithdrawDelegatorReward { validator }","parent":{"krate":0,"index":8959},"children":[],"decl_id":null,"docs":" This is translated to a [[MsgWithdrawDelegatorReward](https://github.com/cosmos/cosmos-sdk/blob/v0.42.4/proto/cosmos/distribution/v1beta1/tx.proto#L42-L50).\n `delegator_address` is automatically filled with the current contract's address.\n","sig":null,"attributes":[{"value":"/ This is translated to a [[MsgWithdrawDelegatorReward](https://github.com/cosmos/cosmos-sdk/blob/v0.42.4/proto/cosmos/distribution/v1beta1/tx.proto#L42-L50).","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":342061,"byte_end":342221,"line_start":105,"line_end":105,"column_start":5,"column_end":165}},{"value":"/ `delegator_address` is automatically filled with the current contract's address.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":342226,"byte_end":342310,"line_start":106,"line_end":106,"column_start":5,"column_end":89}}]},{"kind":"Enum","id":{"krate":0,"index":8959},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":341699,"byte_end":341714,"line_start":98,"line_end":98,"column_start":10,"column_end":25},"name":"DistributionMsg","qualname":"::results::cosmos_msg::DistributionMsg","value":"pub enum DistributionMsg {\n    SetWithdrawAddress {\n        address: String,\n    },\n    WithdrawDelegatorReward {\n        validator: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":8960},{"krate":0,"index":8962}],"decl_id":null,"docs":" The message types of the distribution module.","sig":null,"attributes":[{"value":"/ The message types of the distribution module.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":341382,"byte_end":341431,"line_start":91,"line_end":91,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":341432,"byte_end":341435,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ See https://github.com/cosmos/cosmos-sdk/blob/v0.42.4/proto/cosmos/distribution/v1beta1/tx.proto","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":341436,"byte_end":341536,"line_start":93,"line_end":93,"column_start":1,"column_end":101}},{"value":"cfg(feature = \"staking\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":341537,"byte_end":341564,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":341565,"byte_end":341582,"line_start":95,"line_end":95,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":341654,"byte_end":341689,"line_start":97,"line_end":97,"column_start":1,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":9216},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":343004,"byte_end":343011,"line_start":124,"line_end":124,"column_start":5,"column_end":12},"name":"Execute","qualname":"::results::cosmos_msg::WasmMsg::Execute","value":"WasmMsg::Execute { contract_addr, msg, funds }","parent":{"krate":0,"index":9215},"children":[],"decl_id":null,"docs":" Dispatches a call to another contract at a known address (with known ABI).","sig":null,"attributes":[{"value":"/ Dispatches a call to another contract at a known address (with known ABI).","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":342694,"byte_end":342772,"line_start":120,"line_end":120,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":342777,"byte_end":342780,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This is translated to a [MsgExecuteContract](https://github.com/CosmWasm/wasmd/blob/v0.14.0/x/wasm/internal/types/tx.proto#L68-L78).","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":342785,"byte_end":342921,"line_start":122,"line_end":122,"column_start":5,"column_end":141}},{"value":"/ `sender` is automatically filled with the current contract's address.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":342926,"byte_end":342999,"line_start":123,"line_end":123,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":9220},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":343484,"byte_end":343495,"line_start":134,"line_end":134,"column_start":5,"column_end":16},"name":"Instantiate","qualname":"::results::cosmos_msg::WasmMsg::Instantiate","value":"WasmMsg::Instantiate { admin, code_id, msg, funds, label }","parent":{"krate":0,"index":9215},"children":[],"decl_id":null,"docs":" Instantiates a new contracts from previously uploaded Wasm code.","sig":null,"attributes":[{"value":"/ Instantiates a new contracts from previously uploaded Wasm code.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":343173,"byte_end":343241,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":343246,"byte_end":343249,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is translated to a [MsgInstantiateContract](https://github.com/CosmWasm/wasmd/blob/v0.16.0-alpha1/x/wasm/internal/types/tx.proto#L47-L61).","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":343254,"byte_end":343401,"line_start":132,"line_end":132,"column_start":5,"column_end":152}},{"value":"/ `sender` is automatically filled with the current contract's address.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":343406,"byte_end":343479,"line_start":133,"line_end":133,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":9226},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":344203,"byte_end":344210,"line_start":150,"line_end":150,"column_start":5,"column_end":12},"name":"Migrate","qualname":"::results::cosmos_msg::WasmMsg::Migrate","value":"WasmMsg::Migrate { contract_addr, new_code_id, msg }","parent":{"krate":0,"index":9215},"children":[],"decl_id":null,"docs":" Migrates a given contracts to use new wasm code. Passes a MigrateMsg to allow us to\n customize behavior.","sig":null,"attributes":[{"value":"/ Migrates a given contracts to use new wasm code. Passes a MigrateMsg to allow us to","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":343758,"byte_end":343845,"line_start":143,"line_end":143,"column_start":5,"column_end":92}},{"value":"/ customize behavior.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":343850,"byte_end":343873,"line_start":144,"line_end":144,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":343878,"byte_end":343881,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Only the contract admin (as defined in wasmd), if any, is able to make this call.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":343886,"byte_end":343971,"line_start":146,"line_end":146,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":343976,"byte_end":343979,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ This is translated to a [MsgMigrateContract](https://github.com/CosmWasm/wasmd/blob/v0.14.0/x/wasm/internal/types/tx.proto#L86-L96).","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":343984,"byte_end":344120,"line_start":148,"line_end":148,"column_start":5,"column_end":141}},{"value":"/ `sender` is automatically filled with the current contract's address.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":344125,"byte_end":344198,"line_start":149,"line_end":149,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":9230},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":344604,"byte_end":344615,"line_start":159,"line_end":159,"column_start":5,"column_end":16},"name":"UpdateAdmin","qualname":"::results::cosmos_msg::WasmMsg::UpdateAdmin","value":"WasmMsg::UpdateAdmin { contract_addr, admin }","parent":{"krate":0,"index":9215},"children":[],"decl_id":null,"docs":" Sets a new admin (for migrate) on the given contract.\n Fails if this contract is not currently admin of the target contract.\n","sig":null,"attributes":[{"value":"/ Sets a new admin (for migrate) on the given contract.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":344464,"byte_end":344521,"line_start":157,"line_end":157,"column_start":5,"column_end":62}},{"value":"/ Fails if this contract is not currently admin of the target contract.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":344526,"byte_end":344599,"line_start":158,"line_end":158,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":9233},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":344840,"byte_end":344850,"line_start":165,"line_end":165,"column_start":5,"column_end":15},"name":"ClearAdmin","qualname":"::results::cosmos_msg::WasmMsg::ClearAdmin","value":"WasmMsg::ClearAdmin { contract_addr }","parent":{"krate":0,"index":9215},"children":[],"decl_id":null,"docs":" Clears the admin on the given contract, so no more migration possible.\n Fails if this contract is not currently admin of the target contract.\n","sig":null,"attributes":[{"value":"/ Clears the admin on the given contract, so no more migration possible.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":344683,"byte_end":344757,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/ Fails if this contract is not currently admin of the target contract.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":344762,"byte_end":344835,"line_start":164,"line_end":164,"column_start":5,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":9215},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":342680,"byte_end":342687,"line_start":119,"line_end":119,"column_start":10,"column_end":17},"name":"WasmMsg","qualname":"::results::cosmos_msg::WasmMsg","value":"pub enum WasmMsg {\n    Execute {\n        contract_addr: String,\n        msg: Binary,\n        funds: Vec<Coin>,\n    },\n    Instantiate {\n        admin: Option<String>,\n        code_id: u64,\n        msg: Binary,\n        funds: Vec<Coin>,\n        label: String,\n    },\n    Migrate {\n        contract_addr: String,\n        new_code_id: u64,\n        msg: Binary,\n    },\n    UpdateAdmin {\n        contract_addr: String,\n        admin: String,\n    },\n    ClearAdmin {\n        contract_addr: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":9216},{"krate":0,"index":9220},{"krate":0,"index":9226},{"krate":0,"index":9230},{"krate":0,"index":9233}],"decl_id":null,"docs":" The message types of the wasm module.","sig":null,"attributes":[{"value":"/ The message types of the wasm module.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":342414,"byte_end":342455,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":342456,"byte_end":342459,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ See https://github.com/CosmWasm/wasmd/blob/v0.14.0/x/wasm/internal/types/tx.proto","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":342460,"byte_end":342545,"line_start":115,"line_end":115,"column_start":1,"column_end":86}},{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":342546,"byte_end":342563,"line_start":116,"line_end":116,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":342635,"byte_end":342670,"line_start":118,"line_end":118,"column_start":1,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":9327},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":345230,"byte_end":345234,"line_start":173,"line_end":173,"column_start":5,"column_end":9},"name":"Vote","qualname":"::results::cosmos_msg::GovMsg::Vote","value":"GovMsg::Vote { proposal_id, vote }","parent":{"krate":0,"index":9326},"children":[],"decl_id":null,"docs":" This maps directly to [MsgVote](https://github.com/cosmos/cosmos-sdk/blob/v0.42.5/proto/cosmos/gov/v1beta1/tx.proto#L46-L56) in the Cosmos SDK with voter set to the contract address.\n","sig":null,"attributes":[{"value":"/ This maps directly to [MsgVote](https://github.com/cosmos/cosmos-sdk/blob/v0.42.5/proto/cosmos/gov/v1beta1/tx.proto#L46-L56) in the Cosmos SDK with voter set to the contract address.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":345039,"byte_end":345225,"line_start":172,"line_end":172,"column_start":5,"column_end":191}}]},{"kind":"Enum","id":{"krate":0,"index":9326},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":345026,"byte_end":345032,"line_start":171,"line_end":171,"column_start":10,"column_end":16},"name":"GovMsg","qualname":"::results::cosmos_msg::GovMsg","value":"pub enum GovMsg {\n    Vote {\n        proposal_id: u64,\n        vote: VoteOption,\n    },\n}","parent":null,"children":[{"krate":0,"index":9327}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":344881,"byte_end":344909,"line_start":168,"line_end":168,"column_start":1,"column_end":29}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":344981,"byte_end":345016,"line_start":170,"line_end":170,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9391},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":345440,"byte_end":345443,"line_start":180,"line_end":180,"column_start":5,"column_end":8},"name":"Yes","qualname":"::results::cosmos_msg::VoteOption::Yes","value":"VoteOption::Yes","parent":{"krate":0,"index":9390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9393},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":345449,"byte_end":345451,"line_start":181,"line_end":181,"column_start":5,"column_end":7},"name":"No","qualname":"::results::cosmos_msg::VoteOption::No","value":"VoteOption::No","parent":{"krate":0,"index":9390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9395},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":345457,"byte_end":345464,"line_start":182,"line_end":182,"column_start":5,"column_end":12},"name":"Abstain","qualname":"::results::cosmos_msg::VoteOption::Abstain","value":"VoteOption::Abstain","parent":{"krate":0,"index":9390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9397},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":345470,"byte_end":345480,"line_start":183,"line_end":183,"column_start":5,"column_end":15},"name":"NoWithVeto","qualname":"::results::cosmos_msg::VoteOption::NoWithVeto","value":"VoteOption::NoWithVeto","parent":{"krate":0,"index":9390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9390},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":345423,"byte_end":345433,"line_start":179,"line_end":179,"column_start":10,"column_end":20},"name":"VoteOption","qualname":"::results::cosmos_msg::VoteOption","value":"pub enum VoteOption { Yes, No, Abstain, NoWithVeto, }","parent":null,"children":[{"krate":0,"index":9391},{"krate":0,"index":9393},{"krate":0,"index":9395},{"krate":0,"index":9397}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":345278,"byte_end":345306,"line_start":176,"line_end":176,"column_start":1,"column_end":29}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":345378,"byte_end":345413,"line_start":178,"line_end":178,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":1968},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":345704,"byte_end":345720,"line_start":189,"line_end":189,"column_start":8,"column_end":24},"name":"wasm_instantiate","qualname":"::results::cosmos_msg::wasm_instantiate","value":"pub fn wasm_instantiate<impl Serialize: Serialize>(u64, &impl Serialize,\n                                                   Vec<Coin>, String)\n-> StdResult<WasmMsg>","parent":null,"children":[],"decl_id":null,"docs":" Shortcut helper as the construction of WasmMsg::Instantiate can be quite verbose in contract code.","sig":null,"attributes":[{"value":"/ Shortcut helper as the construction of WasmMsg::Instantiate can be quite verbose in contract code.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":345485,"byte_end":345587,"line_start":186,"line_end":186,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":345588,"byte_end":345591,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ When using this, `admin` is always unset. If you need more flexibility, create the message directly.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":345592,"byte_end":345696,"line_start":188,"line_end":188,"column_start":1,"column_end":105}}]},{"kind":"Function","id":{"krate":0,"index":1970},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":346107,"byte_end":346119,"line_start":206,"line_end":206,"column_start":8,"column_end":20},"name":"wasm_execute","qualname":"::results::cosmos_msg::wasm_execute","value":"pub fn wasm_execute<impl Into<String>: Into<String>,\n                    impl Serialize: Serialize>(impl Into<String>,\n                                               &impl Serialize, Vec<Coin>)\n-> StdResult<WasmMsg>","parent":null,"children":[],"decl_id":null,"docs":" Shortcut helper as the construction of WasmMsg::Instantiate can be quite verbose in contract code\n","sig":null,"attributes":[{"value":"/ Shortcut helper as the construction of WasmMsg::Instantiate can be quite verbose in contract code","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":345998,"byte_end":346099,"line_start":205,"line_end":205,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":9399},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/empty.rs","byte_start":348201,"byte_end":348206,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Empty","qualname":"::results::empty::Empty","value":"Empty {  }","parent":null,"children":[],"decl_id":null,"docs":" An empty struct that serves as a placeholder in different places,\n such as contracts that don't set a custom message.","sig":null,"attributes":[{"value":"/ An empty struct that serves as a placeholder in different places,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/empty.rs","byte_start":347740,"byte_end":347809,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/ such as contracts that don't set a custom message.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/empty.rs","byte_start":347810,"byte_end":347864,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/empty.rs","byte_start":347865,"byte_end":347868,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ It is designed to be expressable in correct JSON and JSON Schema but","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/empty.rs","byte_start":347869,"byte_end":347941,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ contains no meaningful data. Previously we used enums without cases,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/empty.rs","byte_start":347942,"byte_end":348014,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/ but those cannot represented as valid JSON Schema (https://github.com/CosmWasm/cosmwasm/issues/451)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/empty.rs","byte_start":348015,"byte_end":348118,"line_start":9,"line_end":9,"column_start":1,"column_end":104}}]},{"kind":"Struct","id":{"krate":0,"index":9456},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":349406,"byte_end":349411,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Event","qualname":"::results::events::Event","value":"Event { ty, attributes }","parent":null,"children":[{"krate":0,"index":9519},{"krate":0,"index":9457}],"decl_id":null,"docs":" A full [*Cosmos SDK* event].","sig":null,"attributes":[{"value":"/ A full [*Cosmos SDK* event].","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":348807,"byte_end":348839,"line_start":4,"line_end":4,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":348840,"byte_end":348843,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This version uses string attributes (similar to [*Cosmos SDK* StringEvent]),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":348844,"byte_end":348924,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ which then get magically converted to bytes for Tendermint somewhere between","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":348925,"byte_end":349005,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ the Rust-Go interface, JSON deserialization and the `NewEvent` call in Cosmos SDK.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":349006,"byte_end":349092,"line_start":8,"line_end":8,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":349093,"byte_end":349096,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [*Cosmos SDK* event]: https://docs.cosmos.network/v0.42/core/events.html","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":349097,"byte_end":349173,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ [*Cosmos SDK* StringEvent]: https://github.com/cosmos/cosmos-sdk/blob/v0.42.5/proto/cosmos/base/abci/v1beta1/abci.proto#L56-L70","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":349174,"byte_end":349305,"line_start":11,"line_end":11,"column_start":1,"column_end":132}},{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":349377,"byte_end":349394,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":9519},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":349557,"byte_end":349559,"line_start":17,"line_end":17,"column_start":9,"column_end":11},"name":"ty","qualname":"::results::events::Event::ty","value":"std::string::String","parent":{"krate":0,"index":9456},"children":[],"decl_id":null,"docs":" The event type. This is renamed to \"ty\" because \"type\" is reserved in Rust. This sucks, we know.\n","sig":null,"attributes":[{"value":"/ The event type. This is renamed to \"ty\" because \"type\" is reserved in Rust. This sucks, we know.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":349418,"byte_end":349518,"line_start":15,"line_end":15,"column_start":5,"column_end":105}},{"value":"serde(rename = \"type\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":349523,"byte_end":349548,"line_start":16,"line_end":16,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":9457},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":349790,"byte_end":349800,"line_start":23,"line_end":23,"column_start":9,"column_end":19},"name":"attributes","qualname":"::results::events::Event::attributes","value":"std::vec::Vec<results::events::Attribute>","parent":{"krate":0,"index":9456},"children":[],"decl_id":null,"docs":" The attributes to be included in the event.","sig":null,"attributes":[{"value":"/ The attributes to be included in the event.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":349573,"byte_end":349620,"line_start":18,"line_end":18,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":349625,"byte_end":349628,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ You can learn more about these from [*Cosmos SDK* docs].","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":349633,"byte_end":349693,"line_start":20,"line_end":20,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":349698,"byte_end":349701,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ [*Cosmos SDK* docs]: https://docs.cosmos.network/v0.42/core/events.html","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":349706,"byte_end":349781,"line_start":22,"line_end":22,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2014},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":349925,"byte_end":349928,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<Event>::new","value":"pub fn new<impl Into<String>: Into<String>>(impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new event with the given type and an empty list of attributes.\n","sig":null,"attributes":[{"value":"/ Create a new event with the given type and an empty list of attributes.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":349838,"byte_end":349913,"line_start":27,"line_end":27,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2016},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":350120,"byte_end":350133,"line_start":36,"line_end":36,"column_start":12,"column_end":25},"name":"add_attribute","qualname":"<Event>::add_attribute","value":"pub fn add_attribute<impl Into<String>: Into<String>,\n                     impl Into<String>: Into<String>>(Self, impl Into<String>,\n                                                      impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add an attribute to the event.\n","sig":null,"attributes":[{"value":"/ Add an attribute to the event.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":350074,"byte_end":350108,"line_start":35,"line_end":35,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2019},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":350537,"byte_end":350551,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"add_attributes","qualname":"<Event>::add_attributes","value":"pub fn add_attributes<A: Into<Attribute>,\n                      impl IntoIterator<Item = A>: IntoIterator<Item =\n                      A>>(Self, impl IntoIterator<Item = A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add attributes to the event.","sig":null,"attributes":[{"value":"/ Bulk add attributes to the event.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":350343,"byte_end":350380,"line_start":44,"line_end":44,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":350385,"byte_end":350388,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Anything that can be turned into an iterator and yields something","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":350393,"byte_end":350462,"line_start":46,"line_end":46,"column_start":5,"column_end":74}},{"value":"/ that can be converted into an `Attribute` is accepted.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":350467,"byte_end":350525,"line_start":47,"line_end":47,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":9520},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":350906,"byte_end":350915,"line_start":59,"line_end":59,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::results::events::Attribute","value":"Attribute { key, value }","parent":null,"children":[{"krate":0,"index":9521},{"krate":0,"index":9522}],"decl_id":null,"docs":" An key value pair that is used in the context of event attributes in logs\n","sig":null,"attributes":[{"value":"/ An key value pair that is used in the context of event attributes in logs","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":350737,"byte_end":350814,"line_start":57,"line_end":57,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":9521},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":350926,"byte_end":350929,"line_start":60,"line_end":60,"column_start":9,"column_end":12},"name":"key","qualname":"::results::events::Attribute::key","value":"std::string::String","parent":{"krate":0,"index":9520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9522},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":350947,"byte_end":350952,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"name":"value","qualname":"::results::events::Attribute::value","value":"std::string::String","parent":{"krate":0,"index":9520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2023},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":351060,"byte_end":351063,"line_start":66,"line_end":66,"column_start":12,"column_end":15},"name":"new","qualname":"<Attribute>::new","value":"pub fn new<impl Into<String>: Into<String>,\n           impl Into<String>: Into<String>>(impl Into<String>,\n                                            impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Attribute. `attr` is just an alias for this.\n","sig":null,"attributes":[{"value":"/ Creates a new Attribute. `attr` is just an alias for this.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":350986,"byte_end":351048,"line_start":65,"line_end":65,"column_start":5,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":2050},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":352622,"byte_end":352626,"line_start":128,"line_end":128,"column_start":8,"column_end":12},"name":"attr","qualname":"::results::events::attr","value":"pub fn attr<impl Into<String>: Into<String>,\n            impl Into<String>: Into<String>>(impl Into<String>,\n                                             impl Into<String>) -> Attribute","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Attribute. `Attribute::new` is an alias for this.\n","sig":null,"attributes":[{"value":"/ Creates a new Attribute. `Attribute::new` is an alias for this.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":352537,"byte_end":352604,"line_start":126,"line_end":126,"column_start":1,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":352605,"byte_end":352614,"line_start":127,"line_end":127,"column_start":1,"column_end":10}}]},{"kind":"Type","id":{"krate":0,"index":2057},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/query.rs","byte_start":353747,"byte_end":353760,"line_start":3,"line_end":3,"column_start":10,"column_end":23},"name":"QueryResponse","qualname":"::results::query::QueryResponse","value":"Binary","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9586},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":355499,"byte_end":355507,"line_start":64,"line_end":64,"column_start":12,"column_end":20},"name":"Response","qualname":"::results::response::Response","value":"Response { messages, attributes, events, data }","parent":null,"children":[{"krate":0,"index":9588},{"krate":0,"index":9589},{"krate":0,"index":9590},{"krate":0,"index":9591}],"decl_id":null,"docs":" A response of a contract entry point, such as `instantiate`, `execute` or `migrate`.","sig":null,"attributes":[{"value":"/ A response of a contract entry point, such as `instantiate`, `execute` or `migrate`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":353914,"byte_end":354002,"line_start":8,"line_end":8,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354003,"byte_end":354006,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type can be constructed directly at the end of the call. Alternatively a","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354007,"byte_end":354088,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/ mutable response instance can be created early in the contract's logic and","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354089,"byte_end":354167,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ incrementally be updated.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354168,"byte_end":354197,"line_start":12,"line_end":12,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354198,"byte_end":354201,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354202,"byte_end":354217,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354218,"byte_end":354221,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Direct:","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354222,"byte_end":354233,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354234,"byte_end":354237,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354238,"byte_end":354245,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{Binary, DepsMut, Env, MessageInfo};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354246,"byte_end":354306,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ # type InstantiateMsg = ();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354307,"byte_end":354338,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/ #","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354339,"byte_end":354344,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ use cosmwasm_std::{attr, Response, StdResult};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354345,"byte_end":354395,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354396,"byte_end":354399,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ pub fn instantiate(","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354400,"byte_end":354423,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/     deps: DepsMut,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354424,"byte_end":354446,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/     _env: Env,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354447,"byte_end":354465,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/     _info: MessageInfo,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354466,"byte_end":354493,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/     msg: InstantiateMsg,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354494,"byte_end":354522,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ ) -> StdResult<Response> {","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354523,"byte_end":354553,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     // ...","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354554,"byte_end":354568,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354569,"byte_end":354572,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     Ok(Response::new().add_attribute(\"action\", \"instantiate\"))","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354573,"byte_end":354639,"line_start":32,"line_end":32,"column_start":1,"column_end":67}},{"value":"/ }","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354640,"byte_end":354645,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354646,"byte_end":354653,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354654,"byte_end":354657,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Mutating:","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354658,"byte_end":354671,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354672,"byte_end":354675,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354676,"byte_end":354683,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{coins, BankMsg, Binary, DepsMut, Env, MessageInfo, SubMsg};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354684,"byte_end":354768,"line_start":39,"line_end":39,"column_start":1,"column_end":85}},{"value":"/ # type InstantiateMsg = ();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354769,"byte_end":354800,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/ # type MyError = ();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354801,"byte_end":354825,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/ #","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354826,"byte_end":354831,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ use cosmwasm_std::Response;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354832,"byte_end":354863,"line_start":43,"line_end":43,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354864,"byte_end":354867,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ pub fn instantiate(","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354868,"byte_end":354891,"line_start":45,"line_end":45,"column_start":1,"column_end":24}},{"value":"/     deps: DepsMut,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354892,"byte_end":354914,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/     _env: Env,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354915,"byte_end":354933,"line_start":47,"line_end":47,"column_start":1,"column_end":19}},{"value":"/     info: MessageInfo,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354934,"byte_end":354960,"line_start":48,"line_end":48,"column_start":1,"column_end":27}},{"value":"/     msg: InstantiateMsg,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354961,"byte_end":354989,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/ ) -> Result<Response, MyError> {","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":354990,"byte_end":355026,"line_start":50,"line_end":50,"column_start":1,"column_end":37}},{"value":"/     let mut response = Response::new()","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":355027,"byte_end":355069,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         .add_attribute(\"Let the\", \"hacking begin\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":355070,"byte_end":355124,"line_start":52,"line_end":52,"column_start":1,"column_end":55}},{"value":"/         .add_message(BankMsg::Send {","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":355125,"byte_end":355165,"line_start":53,"line_end":53,"column_start":1,"column_end":41}},{"value":"/             to_address: String::from(\"recipient\"),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":355166,"byte_end":355220,"line_start":54,"line_end":54,"column_start":1,"column_end":55}},{"value":"/             amount: coins(128, \"uint\"),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":355221,"byte_end":355264,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/         })","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":355265,"byte_end":355279,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/         .add_attribute(\"foo\", \"bar\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":355280,"byte_end":355320,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/         .set_data(b\"the result data\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":355321,"byte_end":355363,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/     Ok(response)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":355364,"byte_end":355384,"line_start":59,"line_end":59,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":355385,"byte_end":355390,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":355391,"byte_end":355398,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"non_exhaustive","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":355470,"byte_end":355487,"line_start":63,"line_end":63,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":9588},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":355920,"byte_end":355928,"line_start":70,"line_end":70,"column_start":9,"column_end":17},"name":"messages","qualname":"::results::response::Response::messages","value":"std::vec::Vec<results::submessages::SubMsg<T>>","parent":{"krate":0,"index":9586},"children":[],"decl_id":null,"docs":" Optional list of messages to pass. These will be executed in order.\n If the ReplyOn variant matches the result (Always, Success on Ok, Error on Err),\n the runtime will invoke this contract's `reply` entry point\n after execution. Otherwise, they act like \"fire and forget\".\n Use `SubMsg::new` to create messages with the older \"fire and forget\" semantics.\n","sig":null,"attributes":[{"value":"/ Optional list of messages to pass. These will be executed in order.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":355525,"byte_end":355596,"line_start":65,"line_end":65,"column_start":5,"column_end":76}},{"value":"/ If the ReplyOn variant matches the result (Always, Success on Ok, Error on Err),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":355601,"byte_end":355685,"line_start":66,"line_end":66,"column_start":5,"column_end":89}},{"value":"/ the runtime will invoke this contract's `reply` entry point","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":355690,"byte_end":355753,"line_start":67,"line_end":67,"column_start":5,"column_end":68}},{"value":"/ after execution. Otherwise, they act like \"fire and forget\".","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":355758,"byte_end":355822,"line_start":68,"line_end":68,"column_start":5,"column_end":69}},{"value":"/ Use `SubMsg::new` to create messages with the older \"fire and forget\" semantics.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":355827,"byte_end":355911,"line_start":69,"line_end":69,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":9589},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":356212,"byte_end":356222,"line_start":76,"line_end":76,"column_start":9,"column_end":19},"name":"attributes","qualname":"::results::response::Response::attributes","value":"std::vec::Vec<results::events::Attribute>","parent":{"krate":0,"index":9586},"children":[],"decl_id":null,"docs":" The attributes that will be emitted as part of a \"wasm\" event.","sig":null,"attributes":[{"value":"/ The attributes that will be emitted as part of a \"wasm\" event.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":355950,"byte_end":356016,"line_start":71,"line_end":71,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":356021,"byte_end":356024,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ More info about events (and their attributes) can be found in [*Cosmos SDK* docs].","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":356029,"byte_end":356115,"line_start":73,"line_end":73,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":356120,"byte_end":356123,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [*Cosmos SDK* docs]: https://docs.cosmos.network/v0.42/core/events.html","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":356128,"byte_end":356203,"line_start":75,"line_end":75,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":9590},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":356531,"byte_end":356537,"line_start":83,"line_end":83,"column_start":9,"column_end":15},"name":"events","qualname":"::results::response::Response::events","value":"std::vec::Vec<results::events::Event>","parent":{"krate":0,"index":9586},"children":[],"decl_id":null,"docs":" Extra, custom events separate from the main `wasm` one. These will have\n `wasm-` prepended to the type.","sig":null,"attributes":[{"value":"/ Extra, custom events separate from the main `wasm` one. These will have","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":356244,"byte_end":356319,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ `wasm-` prepended to the type.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":356324,"byte_end":356358,"line_start":78,"line_end":78,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":356363,"byte_end":356366,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ More info about events can be found in [*Cosmos SDK* docs].","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":356371,"byte_end":356434,"line_start":80,"line_end":80,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":356439,"byte_end":356442,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [*Cosmos SDK* docs]: https://docs.cosmos.network/v0.42/core/events.html","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":356447,"byte_end":356522,"line_start":82,"line_end":82,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":9591},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":356614,"byte_end":356618,"line_start":85,"line_end":85,"column_start":9,"column_end":13},"name":"data","qualname":"::results::response::Response::data","value":"std::option::Option<binary::Binary>","parent":{"krate":0,"index":9586},"children":[],"decl_id":null,"docs":" The binary payload to include in the response.\n","sig":null,"attributes":[{"value":"/ The binary payload to include in the response.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":356555,"byte_end":356605,"line_start":84,"line_end":84,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2093},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":356885,"byte_end":356888,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"name":"new","qualname":"<Response<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":357003,"byte_end":357016,"line_start":105,"line_end":105,"column_start":12,"column_end":25},"name":"add_attribute","qualname":"<Response<T>>::add_attribute","value":"pub fn add_attribute<impl Into<String>: Into<String>,\n                     impl Into<String>: Into<String>>(Self, impl Into<String>,\n                                                      impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add an attribute included in the main `wasm` event.\n","sig":null,"attributes":[{"value":"/ Add an attribute included in the main `wasm` event.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":356936,"byte_end":356991,"line_start":104,"line_end":104,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2097},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":357319,"byte_end":357330,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"add_message","qualname":"<Response<T>>::add_message","value":"pub fn add_message<impl Into<CosmosMsg<T>>: Into<CosmosMsg<T>>>(Self,\n                                                                impl Into<CosmosMsg<T>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" This creates a \"fire and forget\" message, by using `SubMsg::new()` to wrap it,\n and adds it to the list of messages to process.\n","sig":null,"attributes":[{"value":"/ This creates a \"fire and forget\" message, by using `SubMsg::new()` to wrap it,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":357169,"byte_end":357251,"line_start":110,"line_end":110,"column_start":5,"column_end":87}},{"value":"/ and adds it to the list of messages to process.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":357256,"byte_end":357307,"line_start":111,"line_end":111,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2099},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":357587,"byte_end":357601,"line_start":119,"line_end":119,"column_start":12,"column_end":26},"name":"add_submessage","qualname":"<Response<T>>::add_submessage","value":"pub fn add_submessage(Self, SubMsg<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This takes an explicit SubMsg (creates via eg. `reply_on_error`)\n and adds it to the list of messages to process.\n","sig":null,"attributes":[{"value":"/ This takes an explicit SubMsg (creates via eg. `reply_on_error`)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":357451,"byte_end":357519,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ and adds it to the list of messages to process.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":357524,"byte_end":357575,"line_start":118,"line_end":118,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2100},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":357921,"byte_end":357930,"line_start":129,"line_end":129,"column_start":12,"column_end":21},"name":"add_event","qualname":"<Response<T>>::add_event","value":"pub fn add_event(Self, Event) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds an extra event to the response, separate from the main `wasm` event\n that is always created.","sig":null,"attributes":[{"value":"/ Adds an extra event to the response, separate from the main `wasm` event","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":357695,"byte_end":357771,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ that is always created.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":357776,"byte_end":357803,"line_start":125,"line_end":125,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":357808,"byte_end":357811,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The `wasm-` prefix will be appended by the runtime to the provided type","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":357816,"byte_end":357891,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ of event.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":357896,"byte_end":357909,"line_start":128,"line_end":128,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2101},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358608,"byte_end":358622,"line_start":152,"line_end":152,"column_start":12,"column_end":26},"name":"add_attributes","qualname":"<Response<T>>::add_attributes","value":"pub fn add_attributes<A: Into<Attribute>,\n                      impl IntoIterator<Item = A>: IntoIterator<Item =\n                      A>>(Self, impl IntoIterator<Item = A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add attributes included in the main `wasm` event.","sig":null,"attributes":[{"value":"/ Bulk add attributes included in the main `wasm` event.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358022,"byte_end":358080,"line_start":134,"line_end":134,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358085,"byte_end":358088,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Anything that can be turned into an iterator and yields something","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358093,"byte_end":358162,"line_start":136,"line_end":136,"column_start":5,"column_end":74}},{"value":"/ that can be converted into an `Attribute` is accepted.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358167,"byte_end":358225,"line_start":137,"line_end":137,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358230,"byte_end":358233,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358238,"byte_end":358253,"line_start":139,"line_end":139,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358258,"byte_end":358261,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358266,"byte_end":358273,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::{attr, Response};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358278,"byte_end":358317,"line_start":142,"line_end":142,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358322,"byte_end":358325,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ let attrs = vec![","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358330,"byte_end":358351,"line_start":144,"line_end":144,"column_start":5,"column_end":26}},{"value":"/     (\"action\", \"reaction\"),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358356,"byte_end":358387,"line_start":145,"line_end":145,"column_start":5,"column_end":36}},{"value":"/     (\"answer\", \"42\"),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358392,"byte_end":358417,"line_start":146,"line_end":146,"column_start":5,"column_end":30}},{"value":"/     (\"another\", \"attribute\"),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358422,"byte_end":358455,"line_start":147,"line_end":147,"column_start":5,"column_end":38}},{"value":"/ ];","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358460,"byte_end":358466,"line_start":148,"line_end":148,"column_start":5,"column_end":11}},{"value":"/ let res: Response = Response::new().add_attributes(attrs.clone());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358471,"byte_end":358541,"line_start":149,"line_end":149,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(res.attributes, attrs);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358546,"byte_end":358584,"line_start":150,"line_end":150,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358589,"byte_end":358596,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":359142,"byte_end":359154,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"add_messages","qualname":"<Response<T>>::add_messages","value":"pub fn add_messages<M: Into<CosmosMsg<T>>,\n                    impl IntoIterator<Item = M>: IntoIterator<Item =\n                    M>>(Self, impl IntoIterator<Item = M>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add \"fire and forget\" messages to the list of messages to process.","sig":null,"attributes":[{"value":"/ Bulk add \"fire and forget\" messages to the list of messages to process.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358810,"byte_end":358885,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358890,"byte_end":358893,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358898,"byte_end":358913,"line_start":162,"line_end":162,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358918,"byte_end":358921,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358926,"byte_end":358933,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::{CosmosMsg, Response};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358938,"byte_end":358982,"line_start":165,"line_end":165,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358987,"byte_end":358990,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ fn make_response_with_msgs(msgs: Vec<CosmosMsg>) -> Response {","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":358995,"byte_end":359061,"line_start":167,"line_end":167,"column_start":5,"column_end":71}},{"value":"/     Response::new().add_messages(msgs)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":359066,"byte_end":359108,"line_start":168,"line_end":168,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":359113,"byte_end":359118,"line_start":169,"line_end":169,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":359123,"byte_end":359130,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":359633,"byte_end":359648,"line_start":186,"line_end":186,"column_start":12,"column_end":27},"name":"add_submessages","qualname":"<Response<T>>::add_submessages","value":"pub fn add_submessages<impl IntoIterator<Item = SubMsg<T>>: IntoIterator<Item\n                       =\n                       SubMsg<T>>>(Self, impl IntoIterator<Item = SubMsg<T>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add explicit SubMsg structs to the list of messages to process.","sig":null,"attributes":[{"value":"/ Bulk add explicit SubMsg structs to the list of messages to process.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":359304,"byte_end":359376,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":359381,"byte_end":359384,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":359389,"byte_end":359404,"line_start":177,"line_end":177,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":359409,"byte_end":359412,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":359417,"byte_end":359424,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::{SubMsg, Response};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":359429,"byte_end":359470,"line_start":180,"line_end":180,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":359475,"byte_end":359478,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ fn make_response_with_submsgs(msgs: Vec<SubMsg>) -> Response {","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":359483,"byte_end":359549,"line_start":182,"line_end":182,"column_start":5,"column_end":71}},{"value":"/     Response::new().add_submessages(msgs)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":359554,"byte_end":359599,"line_start":183,"line_end":183,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":359604,"byte_end":359609,"line_start":184,"line_end":184,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":359614,"byte_end":359621,"line_start":185,"line_end":185,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2109},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":360002,"byte_end":360012,"line_start":196,"line_end":196,"column_start":12,"column_end":22},"name":"add_events","qualname":"<Response<T>>::add_events","value":"pub fn add_events<impl IntoIterator<Item = Event>: IntoIterator<Item =\n                  Event>>(Self, impl IntoIterator<Item = Event>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add custom events to the response. These are separate from the main\n `wasm` event.","sig":null,"attributes":[{"value":"/ Bulk add custom events to the response. These are separate from the main","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":359784,"byte_end":359860,"line_start":191,"line_end":191,"column_start":5,"column_end":81}},{"value":"/ `wasm` event.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":359865,"byte_end":359882,"line_start":192,"line_end":192,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":359887,"byte_end":359890,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ The `wasm-` prefix will be appended by the runtime to the provided types","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":359895,"byte_end":359971,"line_start":194,"line_end":194,"column_start":5,"column_end":81}},{"value":"/ of events.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":359976,"byte_end":359990,"line_start":195,"line_end":195,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":360207,"byte_end":360215,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"set_data","qualname":"<Response<T>>::set_data","value":"pub fn set_data<impl Into<Binary>: Into<Binary>>(Self, impl Into<Binary>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the binary data included in the response.\n","sig":null,"attributes":[{"value":"/ Set the binary data included in the response.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":360146,"byte_end":360195,"line_start":201,"line_end":201,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9727},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":362346,"byte_end":362352,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Always","qualname":"::results::submessages::ReplyOn::Always","value":"ReplyOn::Always","parent":{"krate":0,"index":9726},"children":[],"decl_id":null,"docs":" Always perform a callback after SubMsg is processed\n","sig":null,"attributes":[{"value":"/ Always perform a callback after SubMsg is processed","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":362286,"byte_end":362341,"line_start":14,"line_end":14,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9729},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":362437,"byte_end":362442,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Error","qualname":"::results::submessages::ReplyOn::Error","value":"ReplyOn::Error","parent":{"krate":0,"index":9726},"children":[],"decl_id":null,"docs":" Only callback if SubMsg returned an error, no callback on success case\n","sig":null,"attributes":[{"value":"/ Only callback if SubMsg returned an error, no callback on success case","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":362358,"byte_end":362432,"line_start":16,"line_end":16,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9731},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":362522,"byte_end":362529,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Success","qualname":"::results::submessages::ReplyOn::Success","value":"ReplyOn::Success","parent":{"krate":0,"index":9726},"children":[],"decl_id":null,"docs":" Only callback if SubMsg was successful, no callback on error case\n","sig":null,"attributes":[{"value":"/ Only callback if SubMsg was successful, no callback on error case","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":362448,"byte_end":362517,"line_start":18,"line_end":18,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9733},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":362613,"byte_end":362618,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"Never","qualname":"::results::submessages::ReplyOn::Never","value":"ReplyOn::Never","parent":{"krate":0,"index":9726},"children":[],"decl_id":null,"docs":" Never make a callback - this is like the original CosmosMsg semantics\n","sig":null,"attributes":[{"value":"/ Never make a callback - this is like the original CosmosMsg semantics","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":362535,"byte_end":362608,"line_start":20,"line_end":20,"column_start":5,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":9726},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":362272,"byte_end":362279,"line_start":13,"line_end":13,"column_start":10,"column_end":17},"name":"ReplyOn","qualname":"::results::submessages::ReplyOn","value":"pub enum ReplyOn { Always, Error, Success, Never, }","parent":null,"children":[{"krate":0,"index":9727},{"krate":0,"index":9729},{"krate":0,"index":9731},{"krate":0,"index":9733}],"decl_id":null,"docs":" Use this to define when the contract gets a response callback.\n If you only need it for errors or success you can select just those in order\n to save gas.\n","sig":null,"attributes":[{"value":"/ Use this to define when the contract gets a response callback.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":361991,"byte_end":362057,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/ If you only need it for errors or success you can select just those in order","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":362058,"byte_end":362138,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ to save gas.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":362139,"byte_end":362155,"line_start":10,"line_end":10,"column_start":1,"column_end":17}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":362227,"byte_end":362262,"line_start":12,"line_end":12,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":9735},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":363138,"byte_end":363144,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"SubMsg","qualname":"::results::submessages::SubMsg","value":"SubMsg { id, msg, gas_limit, reply_on }","parent":null,"children":[{"krate":0,"index":9737},{"krate":0,"index":9738},{"krate":0,"index":9739},{"krate":0,"index":9740}],"decl_id":null,"docs":" A submessage that will guarantee a `reply` call on success or error, depending on\n the `reply_on` setting. If you do not need to process the result, use regular messages instead.","sig":null,"attributes":[{"value":"/ A submessage that will guarantee a `reply` call on success or error, depending on","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":362623,"byte_end":362708,"line_start":24,"line_end":24,"column_start":1,"column_end":86}},{"value":"/ the `reply_on` setting. If you do not need to process the result, use regular messages instead.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":362709,"byte_end":362808,"line_start":25,"line_end":25,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":362809,"byte_end":362812,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Note: On error the submessage execution will revert any partial state changes due to this message,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":362813,"byte_end":362915,"line_start":27,"line_end":27,"column_start":1,"column_end":103}},{"value":"/ but not revert any state changes in the calling contract. If this is required, it must be done","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":362916,"byte_end":363014,"line_start":28,"line_end":28,"column_start":1,"column_end":99}},{"value":"/ manually in the `reply` entry point.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":363015,"byte_end":363055,"line_start":29,"line_end":29,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":9737},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":363309,"byte_end":363311,"line_start":34,"line_end":34,"column_start":9,"column_end":11},"name":"id","qualname":"::results::submessages::SubMsg::id","value":"u64","parent":{"krate":0,"index":9735},"children":[],"decl_id":null,"docs":" An arbitrary ID chosen by the contract.\n This is typically used to match `Reply`s in the `reply` entry point to the submessage.\n","sig":null,"attributes":[{"value":"/ An arbitrary ID chosen by the contract.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":363162,"byte_end":363205,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"/ This is typically used to match `Reply`s in the `reply` entry point to the submessage.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":363210,"byte_end":363300,"line_start":33,"line_end":33,"column_start":5,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":9738},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":363326,"byte_end":363329,"line_start":35,"line_end":35,"column_start":9,"column_end":12},"name":"msg","qualname":"::results::submessages::SubMsg::msg","value":"results::cosmos_msg::CosmosMsg<T>","parent":{"krate":0,"index":9735},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9739},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":363353,"byte_end":363362,"line_start":36,"line_end":36,"column_start":9,"column_end":18},"name":"gas_limit","qualname":"::results::submessages::SubMsg::gas_limit","value":"std::option::Option<u64>","parent":{"krate":0,"index":9735},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9740},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":363385,"byte_end":363393,"line_start":37,"line_end":37,"column_start":9,"column_end":17},"name":"reply_on","qualname":"::results::submessages::SubMsg::reply_on","value":"results::submessages::ReplyOn","parent":{"krate":0,"index":9735},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2144},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":363629,"byte_end":363632,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<SubMsg<T>>::new","value":"pub fn new<impl Into<CosmosMsg<T>>: Into<CosmosMsg<T>>>(impl Into<CosmosMsg<T>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" new creates a \"fire and forget\" message with the pre-0.14 semantics\n","sig":null,"attributes":[{"value":"/ new creates a \"fire and forget\" message with the pre-0.14 semantics","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":363546,"byte_end":363617,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2146},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":363945,"byte_end":363961,"line_start":55,"line_end":55,"column_start":12,"column_end":28},"name":"reply_on_success","qualname":"<SubMsg<T>>::reply_on_success","value":"pub fn reply_on_success<impl Into<CosmosMsg<T>>: Into<CosmosMsg<T>>>(impl Into<CosmosMsg<T>>,\n                                                                     u64)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" create a `SubMsg` that will provide a `reply` with the given id if the message returns `Ok`\n","sig":null,"attributes":[{"value":"/ create a `SubMsg` that will provide a `reply` with the given id if the message returns `Ok`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":363838,"byte_end":363933,"line_start":54,"line_end":54,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":364187,"byte_end":364201,"line_start":60,"line_end":60,"column_start":12,"column_end":26},"name":"reply_on_error","qualname":"<SubMsg<T>>::reply_on_error","value":"pub fn reply_on_error<impl Into<CosmosMsg<T>>: Into<CosmosMsg<T>>>(impl Into<CosmosMsg<T>>,\n                                                                   u64)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" create a `SubMsg` that will provide a `reply` with the given id if the message returns `Err`\n","sig":null,"attributes":[{"value":"/ create a `SubMsg` that will provide a `reply` with the given id if the message returns `Err`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":364079,"byte_end":364175,"line_start":59,"line_end":59,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":2150},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":364403,"byte_end":364415,"line_start":65,"line_end":65,"column_start":12,"column_end":24},"name":"reply_always","qualname":"<SubMsg<T>>::reply_always","value":"pub fn reply_always<impl Into<CosmosMsg<T>>: Into<CosmosMsg<T>>>(impl Into<CosmosMsg<T>>,\n                                                                 u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" create a `SubMsg` that will always provide a `reply` with the given id\n","sig":null,"attributes":[{"value":"/ create a `SubMsg` that will always provide a `reply` with the given id","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":364317,"byte_end":364391,"line_start":64,"line_end":64,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2152},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":365035,"byte_end":365049,"line_start":81,"line_end":81,"column_start":12,"column_end":26},"name":"with_gas_limit","qualname":"<SubMsg<T>>::with_gas_limit","value":"pub fn with_gas_limit(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a gas limit to the message.","sig":null,"attributes":[{"value":"/ Add a gas limit to the message.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":364532,"byte_end":364567,"line_start":69,"line_end":69,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":364572,"byte_end":364575,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":364580,"byte_end":364595,"line_start":71,"line_end":71,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":364600,"byte_end":364603,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":364608,"byte_end":364615,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{coins, BankMsg, ReplyOn, SubMsg};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":364620,"byte_end":364678,"line_start":74,"line_end":74,"column_start":5,"column_end":63}},{"value":"/ # let msg = BankMsg::Send { to_address: String::from(\"you\"), amount: coins(1015, \"earth\") };","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":364683,"byte_end":364779,"line_start":75,"line_end":75,"column_start":5,"column_end":101}},{"value":"/ let sub_msg: SubMsg = SubMsg::reply_always(msg, 1234).with_gas_limit(60_000);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":364784,"byte_end":364865,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(sub_msg.id, 1234);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":364870,"byte_end":364903,"line_start":77,"line_end":77,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(sub_msg.gas_limit, Some(60_000));","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":364908,"byte_end":364956,"line_start":78,"line_end":78,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(sub_msg.reply_on, ReplyOn::Always);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":364961,"byte_end":365011,"line_start":79,"line_end":79,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":365016,"byte_end":365023,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9815},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":365564,"byte_end":365569,"line_start":99,"line_end":99,"column_start":12,"column_end":17},"name":"Reply","qualname":"::results::submessages::Reply","value":"Reply { id, result }","parent":null,"children":[{"krate":0,"index":9816},{"krate":0,"index":9817}],"decl_id":null,"docs":" The result object returned to `reply`. We always get the ID from the submessage\n back and then must handle success and error cases ourselves.\n","sig":null,"attributes":[{"value":"/ The result object returned to `reply`. We always get the ID from the submessage","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":365333,"byte_end":365416,"line_start":96,"line_end":96,"column_start":1,"column_end":84}},{"value":"/ back and then must handle success and error cases ourselves.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":365417,"byte_end":365481,"line_start":97,"line_end":97,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":9816},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":365714,"byte_end":365716,"line_start":102,"line_end":102,"column_start":9,"column_end":11},"name":"id","qualname":"::results::submessages::Reply::id","value":"u64","parent":{"krate":0,"index":9815},"children":[],"decl_id":null,"docs":" The ID that the contract set when emitting the `SubMsg`.\n Use this to identify which submessage triggered the `reply`.\n","sig":null,"attributes":[{"value":"/ The ID that the contract set when emitting the `SubMsg`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":365576,"byte_end":365636,"line_start":100,"line_end":100,"column_start":5,"column_end":65}},{"value":"/ Use this to identify which submessage triggered the `reply`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":365641,"byte_end":365705,"line_start":101,"line_end":101,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":9817},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":365731,"byte_end":365737,"line_start":103,"line_end":103,"column_start":9,"column_end":15},"name":"result","qualname":"::results::submessages::Reply::result","value":"results::contract_result::ContractResult<results::submessages::SubMsgExecutionResponse>","parent":{"krate":0,"index":9815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9879},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":365946,"byte_end":365969,"line_start":108,"line_end":108,"column_start":12,"column_end":35},"name":"SubMsgExecutionResponse","qualname":"::results::submessages::SubMsgExecutionResponse","value":"SubMsgExecutionResponse { events, data }","parent":null,"children":[{"krate":0,"index":9880},{"krate":0,"index":9881}],"decl_id":null,"docs":" The information we get back from a successful sub-call, with full sdk events\n","sig":null,"attributes":[{"value":"/ The information we get back from a successful sub-call, with full sdk events","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":365783,"byte_end":365863,"line_start":106,"line_end":106,"column_start":1,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":9880},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":365980,"byte_end":365986,"line_start":109,"line_end":109,"column_start":9,"column_end":15},"name":"events","qualname":"::results::submessages::SubMsgExecutionResponse::events","value":"std::vec::Vec<results::events::Event>","parent":{"krate":0,"index":9879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9881},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":366008,"byte_end":366012,"line_start":110,"line_end":110,"column_start":9,"column_end":13},"name":"data","qualname":"::results::submessages::SubMsgExecutionResponse::data","value":"std::option::Option<binary::Binary>","parent":{"krate":0,"index":9879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10011},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":367262,"byte_end":367264,"line_start":35,"line_end":35,"column_start":5,"column_end":7},"name":"Ok","qualname":"::results::system_result::SystemResult::Ok","value":"SystemResult::Ok(S)","parent":{"krate":0,"index":10009},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10014},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":367304,"byte_end":367307,"line_start":37,"line_end":37,"column_start":5,"column_end":8},"name":"Err","qualname":"::results::system_result::SystemResult::Err","value":"SystemResult::Err(SystemError)","parent":{"krate":0,"index":10009},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"error\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":367273,"byte_end":367299,"line_start":36,"line_end":36,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":10009},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":367240,"byte_end":367252,"line_start":34,"line_end":34,"column_start":10,"column_end":22},"name":"SystemResult","qualname":"::results::system_result::SystemResult","value":"pub enum SystemResult<S> { Ok(S), Err(SystemError), }","parent":null,"children":[{"krate":0,"index":10011},{"krate":0,"index":10014}],"decl_id":null,"docs":" This is the outer result type returned by a querier to the contract.","sig":null,"attributes":[{"value":"/ This is the outer result type returned by a querier to the contract.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":366151,"byte_end":366223,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":366224,"byte_end":366227,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ We use a custom type here instead of Rust's Result because we want to be able to","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":366228,"byte_end":366312,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/ define the serialization, which is a public interface. Every language that compiles","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":366313,"byte_end":366400,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"/ to Wasm and runs in the ComsWasm VM needs to create the same JSON representation.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":366401,"byte_end":366486,"line_start":11,"line_end":11,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":366487,"byte_end":366490,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":366491,"byte_end":366505,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":366506,"byte_end":366509,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Success:","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":366510,"byte_end":366522,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":366523,"byte_end":366526,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":366527,"byte_end":366534,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, Binary, ContractResult, SystemResult};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":366535,"byte_end":366606,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ let data = Binary::from(b\"hello, world\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":366607,"byte_end":366652,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"/ let result = SystemResult::Ok(ContractResult::Ok(data));","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":366653,"byte_end":366713,"line_start":20,"line_end":20,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"ok\":{\"ok\":\"aGVsbG8sIHdvcmxk\"}}\"#.to_vec());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":366714,"byte_end":366804,"line_start":21,"line_end":21,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":366805,"byte_end":366812,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":366813,"byte_end":366816,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Failure:","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":366817,"byte_end":366829,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":366830,"byte_end":366833,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":366834,"byte_end":366841,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, Binary, ContractResult, SystemResult, SystemError};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":366842,"byte_end":366926,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/ let error = SystemError::Unknown {};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":366927,"byte_end":366967,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"/ let result: SystemResult<Binary> = SystemResult::Err(error);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":366968,"byte_end":367032,"line_start":29,"line_end":29,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"error\":{\"unknown\":{}}}\"#.to_vec());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":367033,"byte_end":367115,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":367116,"byte_end":367123,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":367195,"byte_end":367230,"line_start":33,"line_end":33,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2173},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":367617,"byte_end":367628,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"into_result","qualname":"<SystemResult<S>>::into_result","value":"pub fn into_result(Self) -> Result<S, SystemError>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `ContractResult<S>` to a `Result<S, SystemError>` as a convenient way\n to access the full Result API.\n","sig":null,"attributes":[{"value":"/ Converts a `ContractResult<S>` to a `Result<S, SystemError>` as a convenient way","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":367482,"byte_end":367566,"line_start":43,"line_end":43,"column_start":5,"column_end":89}},{"value":"/ to access the full Result API.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":367571,"byte_end":367605,"line_start":44,"line_end":44,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2174},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":367726,"byte_end":367732,"line_start":49,"line_end":49,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<SystemResult<S>>::unwrap","value":"pub fn unwrap(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2177},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":367840,"byte_end":367850,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"unwrap_err","qualname":"<SystemResult<S>>::unwrap_err","value":"pub fn unwrap_err(Self) -> SystemError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2284},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/serde.rs","byte_start":376663,"byte_end":376673,"line_start":11,"line_end":11,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::serde::from_slice","value":"pub fn from_slice<T: DeserializeOwned>(&[u8]) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2287},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/serde.rs","byte_start":376830,"byte_end":376841,"line_start":15,"line_end":15,"column_start":8,"column_end":19},"name":"from_binary","qualname":"::serde::from_binary","value":"pub fn from_binary<T: DeserializeOwned>(&Binary) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2289},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/serde.rs","byte_start":376940,"byte_end":376946,"line_start":19,"line_end":19,"column_start":8,"column_end":14},"name":"to_vec","qualname":"::serde::to_vec","value":"pub fn to_vec<T>(&T) -> StdResult<Vec<u8>> where T: Serialize + ?Sized","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2292},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/serde.rs","byte_start":377119,"byte_end":377128,"line_start":26,"line_end":26,"column_start":8,"column_end":17},"name":"to_binary","qualname":"::serde::to_binary","value":"pub fn to_binary<T>(&T) -> StdResult<Binary> where T: Serialize + ?Sized","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10017},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/storage.rs","byte_start":380142,"byte_end":380155,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"MemoryStorage","qualname":"::storage::MemoryStorage","value":"MemoryStorage {  }","parent":null,"children":[{"krate":0,"index":10018}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2322},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/storage.rs","byte_start":380231,"byte_end":380234,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<MemoryStorage>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10021},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":391433,"byte_end":391442,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"name":"Timestamp","qualname":"::timestamp::Timestamp","value":"","parent":null,"children":[],"decl_id":null,"docs":" A point in time in nanosecond precision.","sig":null,"attributes":[{"value":"/ A point in time in nanosecond precision.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":390779,"byte_end":390823,"line_start":7,"line_end":7,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":390824,"byte_end":390827,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type can represent times from 1970-01-01T00:00:00Z to 2554-07-21T23:34:33Z.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":390828,"byte_end":390912,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":390913,"byte_end":390916,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":390917,"byte_end":390932,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":390933,"byte_end":390936,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":390937,"byte_end":390944,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::Timestamp;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":390945,"byte_end":390979,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/ let ts = Timestamp::from_nanos(1_000_000_202);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":390980,"byte_end":391030,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(ts.nanos(), 1_000_000_202);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":391031,"byte_end":391073,"line_start":16,"line_end":16,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(ts.seconds(), 1);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":391074,"byte_end":391106,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(ts.subsec_nanos(), 202);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":391107,"byte_end":391146,"line_start":18,"line_end":18,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":391147,"byte_end":391150,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let ts = ts.plus_seconds(2);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":391151,"byte_end":391183,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(ts.nanos(), 3_000_000_202);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":391184,"byte_end":391226,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(ts.seconds(), 3);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":391227,"byte_end":391259,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(ts.subsec_nanos(), 202);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":391260,"byte_end":391299,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":391300,"byte_end":391307,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2356},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":391544,"byte_end":391554,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"name":"from_nanos","qualname":"<Timestamp>::from_nanos","value":"pub const fn from_nanos(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a timestamp from nanoseconds since epoch\n","sig":null,"attributes":[{"value":"/ Creates a timestamp from nanoseconds since epoch","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":391474,"byte_end":391526,"line_start":31,"line_end":31,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2357},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":391716,"byte_end":391728,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"name":"from_seconds","qualname":"<Timestamp>::from_seconds","value":"pub const fn from_seconds(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a timestamp from seconds since epoch\n","sig":null,"attributes":[{"value":"/ Creates a timestamp from seconds since epoch","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":391650,"byte_end":391698,"line_start":36,"line_end":36,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2358},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":391857,"byte_end":391869,"line_start":41,"line_end":41,"column_start":18,"column_end":30},"name":"plus_seconds","qualname":"<Timestamp>::plus_seconds","value":"pub const fn plus_seconds(&Self, u64) -> Timestamp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2359},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":391981,"byte_end":391991,"line_start":45,"line_end":45,"column_start":18,"column_end":28},"name":"plus_nanos","qualname":"<Timestamp>::plus_nanos","value":"pub const fn plus_nanos(&Self, u64) -> Timestamp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2360},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":392136,"byte_end":392149,"line_start":50,"line_end":50,"column_start":18,"column_end":31},"name":"minus_seconds","qualname":"<Timestamp>::minus_seconds","value":"pub const fn minus_seconds(&Self, u64) -> Timestamp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2361},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":392266,"byte_end":392277,"line_start":54,"line_end":54,"column_start":18,"column_end":29},"name":"minus_nanos","qualname":"<Timestamp>::minus_nanos","value":"pub const fn minus_nanos(&Self, u64) -> Timestamp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2362},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":392474,"byte_end":392479,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"name":"nanos","qualname":"<Timestamp>::nanos","value":"pub fn nanos(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns nanoseconds since epoch\n","sig":null,"attributes":[{"value":"/ Returns nanoseconds since epoch","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":392413,"byte_end":392448,"line_start":59,"line_end":59,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":392453,"byte_end":392462,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2363},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":392608,"byte_end":392615,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"seconds","qualname":"<Timestamp>::seconds","value":"pub fn seconds(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns seconds since epoch (truncate nanoseconds)\n","sig":null,"attributes":[{"value":"/ Returns seconds since epoch (truncate nanoseconds)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":392528,"byte_end":392582,"line_start":65,"line_end":65,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":392587,"byte_end":392596,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2364},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":392806,"byte_end":392818,"line_start":74,"line_end":74,"column_start":12,"column_end":24},"name":"subsec_nanos","qualname":"<Timestamp>::subsec_nanos","value":"pub fn subsec_nanos(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns nanoseconds since the last whole second (the remainder truncated\n by `seconds()`)\n","sig":null,"attributes":[{"value":"/ Returns nanoseconds since the last whole second (the remainder truncated","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":392680,"byte_end":392756,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ by `seconds()`)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":392761,"byte_end":392780,"line_start":72,"line_end":72,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":392785,"byte_end":392794,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":2481},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":398957,"byte_end":398964,"line_start":24,"line_end":24,"column_start":11,"column_end":18},"name":"Storage","qualname":"::traits::Storage","value":"Storage","parent":null,"children":[{"krate":0,"index":2482},{"krate":0,"index":2483},{"krate":0,"index":2485},{"krate":0,"index":2486}],"decl_id":null,"docs":" Storage provides read and write access to a persistent storage.\n If you only want to provide read access, provide `&Storage`\n","sig":null,"attributes":[{"value":"/ Storage provides read and write access to a persistent storage.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":398815,"byte_end":398882,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/ If you only want to provide read access, provide `&Storage`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":398883,"byte_end":398946,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2482},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":399270,"byte_end":399273,"line_start":30,"line_end":30,"column_start":8,"column_end":11},"name":"get","qualname":"::traits::Storage::get","value":"pub fn get(&Self, &[u8]) -> Option<Vec<u8>>","parent":{"krate":0,"index":2481},"children":[],"decl_id":null,"docs":" Returns None when key does not exist.\n Returns Some(Vec<u8>) when key exists.","sig":null,"attributes":[{"value":"/ Returns None when key does not exist.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":398971,"byte_end":399012,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/ Returns Some(Vec<u8>) when key exists.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":399017,"byte_end":399059,"line_start":26,"line_end":26,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":399064,"byte_end":399067,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Note: Support for differentiating between a non-existent key and a key with empty value","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":399072,"byte_end":399163,"line_start":28,"line_end":28,"column_start":5,"column_end":96}},{"value":"/ is not great yet and might not be possible in all backends. But we're trying to get there.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":399168,"byte_end":399262,"line_start":29,"line_end":29,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":2483},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":399644,"byte_end":399649,"line_start":38,"line_end":38,"column_start":8,"column_end":13},"name":"range","qualname":"::traits::Storage::range","value":"pub fn range<'a>(&'a Self, Option<&[u8]>, Option<&[u8]>, Order)\n-> Box<dyn Iterator<Item = Record> + 'a>","parent":{"krate":0,"index":2481},"children":[],"decl_id":null,"docs":" Allows iteration over a set of key/value pairs, either forwards or backwards.","sig":null,"attributes":[{"value":"cfg(feature = \"iterator\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":399318,"byte_end":399346,"line_start":32,"line_end":32,"column_start":5,"column_end":33}},{"value":"/ Allows iteration over a set of key/value pairs, either forwards or backwards.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":399351,"byte_end":399432,"line_start":33,"line_end":33,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":399437,"byte_end":399440,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The bound `start` is inclusive and `end` is exclusive.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":399445,"byte_end":399503,"line_start":35,"line_end":35,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":399508,"byte_end":399511,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If `start` is lexicographically greater than or equal to `end`, an empty range is described, mo matter of the order.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":399516,"byte_end":399636,"line_start":37,"line_end":37,"column_start":5,"column_end":125}}]},{"kind":"Method","id":{"krate":0,"index":2485},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":399809,"byte_end":399812,"line_start":45,"line_end":45,"column_start":8,"column_end":11},"name":"set","qualname":"::traits::Storage::set","value":"pub fn set(&mut Self, &[u8], &[u8])","parent":{"krate":0,"index":2481},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2486},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":400092,"byte_end":400098,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"remove","qualname":"::traits::Storage::remove","value":"pub fn remove(&mut Self, &[u8])","parent":{"krate":0,"index":2481},"children":[],"decl_id":null,"docs":" Removes a database entry at `key`.","sig":null,"attributes":[{"value":"/ Removes a database entry at `key`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":399855,"byte_end":399893,"line_start":46,"line_end":46,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":399898,"byte_end":399901,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The current interface does not allow to differentiate between a key that existed","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":399906,"byte_end":399990,"line_start":48,"line_end":48,"column_start":5,"column_end":89}},{"value":"/ before and one that didn't exist. See https://github.com/CosmWasm/cosmwasm/issues/290","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":399995,"byte_end":400084,"line_start":49,"line_end":49,"column_start":5,"column_end":94}}]},{"kind":"Trait","id":{"krate":0,"index":2487},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":401073,"byte_end":401076,"line_start":67,"line_end":67,"column_start":11,"column_end":14},"name":"Api","qualname":"::traits::Api","value":"Api","parent":null,"children":[{"krate":0,"index":2488},{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2491},{"krate":0,"index":2492},{"krate":0,"index":2493},{"krate":0,"index":2494},{"krate":0,"index":2495}],"decl_id":null,"docs":" Api are callbacks to system functions implemented outside of the wasm modules.\n Currently it just supports address conversion but we could add eg. crypto functions here.","sig":null,"attributes":[{"value":"/ Api are callbacks to system functions implemented outside of the wasm modules.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":400126,"byte_end":400208,"line_start":53,"line_end":53,"column_start":1,"column_end":83}},{"value":"/ Currently it just supports address conversion but we could add eg. crypto functions here.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":400209,"byte_end":400302,"line_start":54,"line_end":54,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":400303,"byte_end":400306,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This is a trait to allow mocks in the test code. Its members have a read-only","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":400307,"byte_end":400388,"line_start":56,"line_end":56,"column_start":1,"column_end":82}},{"value":"/ reference to the Api instance to allow accessing configuration.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":400389,"byte_end":400456,"line_start":57,"line_end":57,"column_start":1,"column_end":68}},{"value":"/ Implementations must not have mutable state, such that an instance can freely","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":400457,"byte_end":400538,"line_start":58,"line_end":58,"column_start":1,"column_end":82}},{"value":"/ be copied and shared between threads without affecting the behaviour.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":400539,"byte_end":400612,"line_start":59,"line_end":59,"column_start":1,"column_end":74}},{"value":"/ Given an Api instance, all members should return the same value when called with the same","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":400613,"byte_end":400706,"line_start":60,"line_end":60,"column_start":1,"column_end":94}},{"value":"/ arguments. In particular this means the result must not depend in the state of the chain.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":400707,"byte_end":400800,"line_start":61,"line_end":61,"column_start":1,"column_end":94}},{"value":"/ If you need to access chaim state, you probably want to use the Querier.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":400801,"byte_end":400877,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/ Side effects (such as logging) are allowed.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":400878,"byte_end":400925,"line_start":63,"line_end":63,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":400926,"byte_end":400929,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ We can use feature flags to opt-in to non-essential methods","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":400930,"byte_end":400993,"line_start":65,"line_end":65,"column_start":1,"column_end":64}},{"value":"/ for backwards compatibility in systems that don't have them all.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":400994,"byte_end":401062,"line_start":66,"line_end":66,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2488},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":401544,"byte_end":401557,"line_start":81,"line_end":81,"column_start":8,"column_end":21},"name":"addr_validate","qualname":"::traits::Api::addr_validate","value":"pub fn addr_validate(&Self, &str) -> StdResult<Addr>","parent":{"krate":0,"index":2487},"children":[],"decl_id":null,"docs":" Takes a human readable address and validates if it's correctly formatted.\n If it succeeds, a Addr is returned.","sig":null,"attributes":[{"value":"/ Takes a human readable address and validates if it's correctly formatted.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":401083,"byte_end":401160,"line_start":68,"line_end":68,"column_start":5,"column_end":82}},{"value":"/ If it succeeds, a Addr is returned.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":401165,"byte_end":401204,"line_start":69,"line_end":69,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":401209,"byte_end":401212,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":401217,"byte_end":401232,"line_start":71,"line_end":71,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":401237,"byte_end":401240,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":401245,"byte_end":401252,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Api, Addr};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":401257,"byte_end":401293,"line_start":74,"line_end":74,"column_start":5,"column_end":41}},{"value":"/ # use cosmwasm_std::testing::MockApi;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":401298,"byte_end":401339,"line_start":75,"line_end":75,"column_start":5,"column_end":46}},{"value":"/ # let api = MockApi::default();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":401344,"byte_end":401379,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/ let input = \"what-users-provide\";","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":401384,"byte_end":401421,"line_start":77,"line_end":77,"column_start":5,"column_end":42}},{"value":"/ let validated: Addr = api.addr_validate(input).unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":401426,"byte_end":401486,"line_start":78,"line_end":78,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(validated, input);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":401491,"byte_end":401524,"line_start":79,"line_end":79,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":401529,"byte_end":401536,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2489},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":401777,"byte_end":401794,"line_start":85,"line_end":85,"column_start":8,"column_end":25},"name":"addr_canonicalize","qualname":"::traits::Api::addr_canonicalize","value":"pub fn addr_canonicalize(&Self, &str) -> StdResult<CanonicalAddr>","parent":{"krate":0,"index":2487},"children":[],"decl_id":null,"docs":" Takes a human readable address and returns a canonical binary representation of it.\n This can be used when a compact fixed length representation is needed.\n","sig":null,"attributes":[{"value":"/ Takes a human readable address and returns a canonical binary representation of it.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":401603,"byte_end":401690,"line_start":83,"line_end":83,"column_start":5,"column_end":92}},{"value":"/ This can be used when a compact fixed length representation is needed.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":401695,"byte_end":401769,"line_start":84,"line_end":84,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2490},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":402039,"byte_end":402052,"line_start":91,"line_end":91,"column_start":8,"column_end":21},"name":"addr_humanize","qualname":"::traits::Api::addr_humanize","value":"pub fn addr_humanize(&Self, &CanonicalAddr) -> StdResult<Addr>","parent":{"krate":0,"index":2487},"children":[],"decl_id":null,"docs":" Takes a canonical address and returns a human readble address.\n This is the inverse of [`addr_canonicalize`].","sig":null,"attributes":[{"value":"/ Takes a canonical address and returns a human readble address.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":401849,"byte_end":401915,"line_start":87,"line_end":87,"column_start":5,"column_end":71}},{"value":"/ This is the inverse of [`addr_canonicalize`].","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":401920,"byte_end":401969,"line_start":88,"line_end":88,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":401974,"byte_end":401977,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ [`addr_canonicalize`]: Api::addr_canonicalize","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":401982,"byte_end":402031,"line_start":90,"line_end":90,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2491},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":402115,"byte_end":402131,"line_start":93,"line_end":93,"column_start":8,"column_end":24},"name":"secp256k1_verify","qualname":"::traits::Api::secp256k1_verify","value":"pub fn secp256k1_verify(&Self, &[u8], &[u8], &[u8])\n-> Result<bool, VerificationError>","parent":{"krate":0,"index":2487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2492},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":402280,"byte_end":402304,"line_start":100,"line_end":100,"column_start":8,"column_end":32},"name":"secp256k1_recover_pubkey","qualname":"::traits::Api::secp256k1_recover_pubkey","value":"pub fn secp256k1_recover_pubkey(&Self, &[u8], &[u8], u8)\n-> Result<Vec<u8>, RecoverPubkeyError>","parent":{"krate":0,"index":2487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2493},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":402458,"byte_end":402472,"line_start":107,"line_end":107,"column_start":8,"column_end":22},"name":"ed25519_verify","qualname":"::traits::Api::ed25519_verify","value":"pub fn ed25519_verify(&Self, &[u8], &[u8], &[u8])\n-> Result<bool, VerificationError>","parent":{"krate":0,"index":2487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2494},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":402616,"byte_end":402636,"line_start":114,"line_end":114,"column_start":8,"column_end":28},"name":"ed25519_batch_verify","qualname":"::traits::Api::ed25519_batch_verify","value":"pub fn ed25519_batch_verify(&Self, &[&[u8]], &[&[u8]], &[&[u8]])\n-> Result<bool, VerificationError>","parent":{"krate":0,"index":2487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2495},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":402965,"byte_end":402970,"line_start":123,"line_end":123,"column_start":8,"column_end":13},"name":"debug","qualname":"::traits::Api::debug","value":"pub fn debug(&Self, &str)","parent":{"krate":0,"index":2487},"children":[],"decl_id":null,"docs":" Emits a debugging message that is handled depending on the environment (typically printed to console or ignored).\n Those messages are not persisted to chain.\n","sig":null,"attributes":[{"value":"/ Emits a debugging message that is handled depending on the environment (typically printed to console or ignored).","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":402789,"byte_end":402906,"line_start":121,"line_end":121,"column_start":5,"column_end":122}},{"value":"/ Those messages are not persisted to chain.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":402911,"byte_end":402957,"line_start":122,"line_end":122,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":2496},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":403124,"byte_end":403137,"line_start":127,"line_end":127,"column_start":10,"column_end":23},"name":"QuerierResult","qualname":"::traits::QuerierResult","value":"SystemResult<ContractResult<Binary>>","parent":null,"children":[],"decl_id":null,"docs":" A short-hand alias for the two-level query result (1. accessing the contract, 2. executing query in the contract)\n","sig":null,"attributes":[{"value":"/ A short-hand alias for the two-level query result (1. accessing the contract, 2. executing query in the contract)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":402997,"byte_end":403114,"line_start":126,"line_end":126,"column_start":1,"column_end":118}}]},{"kind":"Trait","id":{"krate":0,"index":2497},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":403189,"byte_end":403196,"line_start":129,"line_end":129,"column_start":11,"column_end":18},"name":"Querier","qualname":"::traits::Querier","value":"Querier","parent":null,"children":[{"krate":0,"index":2498}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2498},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":403562,"byte_end":403571,"line_start":135,"line_end":135,"column_start":8,"column_end":17},"name":"raw_query","qualname":"::traits::Querier::raw_query","value":"pub fn raw_query(&Self, &[u8]) -> QuerierResult","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" raw_query is all that must be implemented for the Querier.\n This allows us to pass through binary queries from one level to another without\n knowing the custom format, or we can decode it, with the knowledge of the allowed\n types. People using the querier probably want one of the simpler auto-generated\n helper methods\n","sig":null,"attributes":[{"value":"/ raw_query is all that must be implemented for the Querier.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":403203,"byte_end":403265,"line_start":130,"line_end":130,"column_start":5,"column_end":67}},{"value":"/ This allows us to pass through binary queries from one level to another without","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":403270,"byte_end":403353,"line_start":131,"line_end":131,"column_start":5,"column_end":88}},{"value":"/ knowing the custom format, or we can decode it, with the knowledge of the allowed","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":403358,"byte_end":403443,"line_start":132,"line_end":132,"column_start":5,"column_end":90}},{"value":"/ types. People using the querier probably want one of the simpler auto-generated","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":403448,"byte_end":403531,"line_start":133,"line_end":133,"column_start":5,"column_end":88}},{"value":"/ helper methods","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":403536,"byte_end":403554,"line_start":134,"line_end":134,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":10071},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":403648,"byte_end":403662,"line_start":139,"line_end":139,"column_start":12,"column_end":26},"name":"QuerierWrapper","qualname":"::traits::QuerierWrapper","value":"QuerierWrapper {  }","parent":null,"children":[{"krate":0,"index":10074},{"krate":0,"index":10075}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2510},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":404475,"byte_end":404478,"line_start":161,"line_end":161,"column_start":12,"column_end":15},"name":"new","qualname":"<QuerierWrapper>::new","value":"pub fn new(&'a dyn Querier) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2511},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":404952,"byte_end":404957,"line_start":173,"line_end":173,"column_start":12,"column_end":17},"name":"query","qualname":"<QuerierWrapper>::query","value":"pub fn query<U: DeserializeOwned>(&Self, &QueryRequest<C>) -> StdResult<U>","parent":null,"children":[],"decl_id":null,"docs":" Makes the query and parses the response.","sig":null,"attributes":[{"value":"/ Makes the query and parses the response.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":404626,"byte_end":404670,"line_start":168,"line_end":168,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":404675,"byte_end":404678,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Any error (System Error, Error or called contract, or Parse Error) are flattened into","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":404683,"byte_end":404772,"line_start":170,"line_end":170,"column_start":5,"column_end":94}},{"value":"/ one level. Only use this if you don't need to check the SystemError","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":404777,"byte_end":404848,"line_start":171,"line_end":171,"column_start":5,"column_end":76}},{"value":"/ eg. If you don't differentiate between contract missing and contract returned error","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":404853,"byte_end":404940,"line_start":172,"line_end":172,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":2514},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":405686,"byte_end":405699,"line_start":189,"line_end":189,"column_start":12,"column_end":25},"name":"query_balance","qualname":"<QuerierWrapper>::query_balance","value":"pub fn query_balance<impl Into<String>: Into<String>,\n                     impl Into<String>: Into<String>>(&Self,\n                                                      impl Into<String>,\n                                                      impl Into<String>)\n-> StdResult<Coin>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2517},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":406052,"byte_end":406070,"line_start":203,"line_end":203,"column_start":12,"column_end":30},"name":"query_all_balances","qualname":"<QuerierWrapper>::query_all_balances","value":"pub fn query_all_balances<impl Into<String>: Into<String>>(&Self,\n                                                           impl Into<String>)\n-> StdResult<Vec<Coin>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2519},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":406498,"byte_end":406514,"line_start":214,"line_end":214,"column_start":12,"column_end":28},"name":"query_wasm_smart","qualname":"<QuerierWrapper>::query_wasm_smart","value":"pub fn query_wasm_smart<T: DeserializeOwned, impl Into<String>: Into<String>,\n                        impl Serialize: Serialize>(&Self, impl Into<String>,\n                                                   &impl Serialize)\n-> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2523},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":407309,"byte_end":407323,"line_start":234,"line_end":234,"column_start":12,"column_end":26},"name":"query_wasm_raw","qualname":"<QuerierWrapper>::query_wasm_raw","value":"pub fn query_wasm_raw<impl Into<String>: Into<String>,\n                      impl Into<Binary>: Into<Binary>>(&Self,\n                                                       impl Into<String>,\n                                                       impl Into<Binary>)\n-> StdResult<Option<Vec<u8>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2527},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":408599,"byte_end":408619,"line_start":268,"line_end":268,"column_start":12,"column_end":32},"name":"query_all_validators","qualname":"<QuerierWrapper>::query_all_validators","value":"pub fn query_all_validators(&Self) -> StdResult<Vec<Validator>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":408560,"byte_end":408587,"line_start":267,"line_end":267,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2528},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":408860,"byte_end":408875,"line_start":275,"line_end":275,"column_start":12,"column_end":27},"name":"query_validator","qualname":"<QuerierWrapper>::query_validator","value":"pub fn query_validator<impl Into<String>: Into<String>>(&Self,\n                                                        impl Into<String>)\n-> StdResult<Option<Validator>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":408821,"byte_end":408848,"line_start":274,"line_end":274,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":409193,"byte_end":409211,"line_start":285,"line_end":285,"column_start":12,"column_end":30},"name":"query_bonded_denom","qualname":"<QuerierWrapper>::query_bonded_denom","value":"pub fn query_bonded_denom(&Self) -> StdResult<String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":409154,"byte_end":409181,"line_start":284,"line_end":284,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2531},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":409435,"byte_end":409456,"line_start":292,"line_end":292,"column_start":12,"column_end":33},"name":"query_all_delegations","qualname":"<QuerierWrapper>::query_all_delegations","value":"pub fn query_all_delegations<impl Into<String>: Into<String>>(&Self,\n                                                              impl Into<String>)\n-> StdResult<Vec<Delegation>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":409396,"byte_end":409423,"line_start":291,"line_end":291,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2533},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":409813,"byte_end":409829,"line_start":305,"line_end":305,"column_start":12,"column_end":28},"name":"query_delegation","qualname":"<QuerierWrapper>::query_delegation","value":"pub fn query_delegation<impl Into<String>: Into<String>,\n                        impl Into<String>: Into<String>>(&Self,\n                                                         impl Into<String>,\n                                                         impl Into<String>)\n-> StdResult<Option<FullDelegation>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":409774,"byte_end":409801,"line_start":304,"line_end":304,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":10080},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":411773,"byte_end":411776,"line_start":8,"line_end":8,"column_start":12,"column_end":15},"name":"Env","qualname":"::types::Env","value":"Env { block, transaction, contract }","parent":null,"children":[{"krate":0,"index":10081},{"krate":0,"index":10082},{"krate":0,"index":10083}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10081},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":411787,"byte_end":411792,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"block","qualname":"::types::Env::block","value":"types::BlockInfo","parent":{"krate":0,"index":10080},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10082},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":412035,"byte_end":412046,"line_start":13,"line_end":13,"column_start":9,"column_end":20},"name":"transaction","qualname":"::types::Env::transaction","value":"std::option::Option<types::TransactionInfo>","parent":{"krate":0,"index":10080},"children":[],"decl_id":null,"docs":" Information on the transaction this message was executed in.\n The field is unset when the `MsgExecuteContract`/`MsgInstantiateContract`/`MsgMigrateContract`\n is not executed as part of a transaction.\n","sig":null,"attributes":[{"value":"/ Information on the transaction this message was executed in.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":411809,"byte_end":411873,"line_start":10,"line_end":10,"column_start":5,"column_end":69}},{"value":"/ The field is unset when the `MsgExecuteContract`/`MsgInstantiateContract`/`MsgMigrateContract`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":411878,"byte_end":411976,"line_start":11,"line_end":11,"column_start":5,"column_end":103}},{"value":"/ is not executed as part of a transaction.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":411981,"byte_end":412026,"line_start":12,"line_end":12,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":10083},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":412081,"byte_end":412089,"line_start":14,"line_end":14,"column_start":9,"column_end":17},"name":"contract","qualname":"::types::Env::contract","value":"types::ContractInfo","parent":{"krate":0,"index":10080},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10143},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":412178,"byte_end":412193,"line_start":18,"line_end":18,"column_start":12,"column_end":27},"name":"TransactionInfo","qualname":"::types::TransactionInfo","value":"TransactionInfo { index }","parent":null,"children":[{"krate":0,"index":10144}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10144},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":412466,"byte_end":412471,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"name":"index","qualname":"::types::TransactionInfo::index","value":"u32","parent":{"krate":0,"index":10143},"children":[],"decl_id":null,"docs":" The position of this transaction in the block. The first\n transaction has index 0.","sig":null,"attributes":[{"value":"/ The position of this transaction in the block. The first","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":412200,"byte_end":412260,"line_start":19,"line_end":19,"column_start":5,"column_end":65}},{"value":"/ transaction has index 0.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":412265,"byte_end":412293,"line_start":20,"line_end":20,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":412298,"byte_end":412301,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ This allows you to get a unique transaction indentifier in this chain","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":412306,"byte_end":412379,"line_start":22,"line_end":22,"column_start":5,"column_end":78}},{"value":"/ using the pair (`env.block.height`, `env.transaction.index`).","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":412384,"byte_end":412449,"line_start":23,"line_end":23,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":412454,"byte_end":412457,"line_start":24,"line_end":24,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10200},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":412551,"byte_end":412560,"line_start":29,"line_end":29,"column_start":12,"column_end":21},"name":"BlockInfo","qualname":"::types::BlockInfo","value":"BlockInfo { height, time, chain_id }","parent":null,"children":[{"krate":0,"index":10201},{"krate":0,"index":10202},{"krate":0,"index":10203}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10201},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":412657,"byte_end":412663,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"name":"height","qualname":"::types::BlockInfo::height","value":"u64","parent":{"krate":0,"index":10200},"children":[],"decl_id":null,"docs":" The height of a block is the number of blocks preceding it in the blockchain.\n","sig":null,"attributes":[{"value":"/ The height of a block is the number of blocks preceding it in the blockchain.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":412567,"byte_end":412648,"line_start":30,"line_end":30,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":10202},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":414588,"byte_end":414592,"line_start":78,"line_end":78,"column_start":9,"column_end":13},"name":"time","qualname":"::types::BlockInfo::time","value":"timestamp::Timestamp","parent":{"krate":0,"index":10200},"children":[],"decl_id":null,"docs":" Absolute time of the block creation in seconds since the UNIX epoch (00:00:00 on 1970-01-01 UTC).","sig":null,"attributes":[{"value":"/ Absolute time of the block creation in seconds since the UNIX epoch (00:00:00 on 1970-01-01 UTC).","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":412674,"byte_end":412775,"line_start":32,"line_end":32,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":412780,"byte_end":412783,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The source of this is the [BFT Time in Tendermint](https://docs.tendermint.com/master/spec/consensus/bft-time.html),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":412788,"byte_end":412908,"line_start":34,"line_end":34,"column_start":5,"column_end":125}},{"value":"/ which has the same nanosecond precision as the `Timestamp` type.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":412913,"byte_end":412981,"line_start":35,"line_end":35,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":412986,"byte_end":412989,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":412994,"byte_end":413008,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413013,"byte_end":413016,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Using chrono:","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413021,"byte_end":413038,"line_start":39,"line_end":39,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413043,"byte_end":413046,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413051,"byte_end":413058,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Addr, BlockInfo, ContractInfo, Env, MessageInfo, Timestamp, TransactionInfo};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413063,"byte_end":413165,"line_start":42,"line_end":42,"column_start":5,"column_end":107}},{"value":"/ # let env = Env {","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413170,"byte_end":413191,"line_start":43,"line_end":43,"column_start":5,"column_end":26}},{"value":"/ #     block: BlockInfo {","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413196,"byte_end":413224,"line_start":44,"line_end":44,"column_start":5,"column_end":33}},{"value":"/ #         height: 12_345,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413229,"byte_end":413258,"line_start":45,"line_end":45,"column_start":5,"column_end":34}},{"value":"/ #         time: Timestamp::from_nanos(1_571_797_419_879_305_533),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413263,"byte_end":413332,"line_start":46,"line_end":46,"column_start":5,"column_end":74}},{"value":"/ #         chain_id: \"cosmos-testnet-14002\".to_string(),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413337,"byte_end":413396,"line_start":47,"line_end":47,"column_start":5,"column_end":64}},{"value":"/ #     },","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413401,"byte_end":413413,"line_start":48,"line_end":48,"column_start":5,"column_end":17}},{"value":"/ #     transaction: Some(TransactionInfo { index: 3 }),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413418,"byte_end":413476,"line_start":49,"line_end":49,"column_start":5,"column_end":63}},{"value":"/ #     contract: ContractInfo {","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413481,"byte_end":413515,"line_start":50,"line_end":50,"column_start":5,"column_end":39}},{"value":"/ #         address: Addr::unchecked(\"contract\"),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413520,"byte_end":413571,"line_start":51,"line_end":51,"column_start":5,"column_end":56}},{"value":"/ #     },","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413576,"byte_end":413588,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/ # };","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413593,"byte_end":413601,"line_start":53,"line_end":53,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413606,"byte_end":413632,"line_start":54,"line_end":54,"column_start":5,"column_end":31}},{"value":"/ use chrono::NaiveDateTime;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413637,"byte_end":413667,"line_start":55,"line_end":55,"column_start":5,"column_end":35}},{"value":"/ let seconds = env.block.time.seconds();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413672,"byte_end":413715,"line_start":56,"line_end":56,"column_start":5,"column_end":48}},{"value":"/ let nsecs = env.block.time.subsec_nanos();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413720,"byte_end":413766,"line_start":57,"line_end":57,"column_start":5,"column_end":51}},{"value":"/ let dt = NaiveDateTime::from_timestamp(seconds as i64, nsecs as u32);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413771,"byte_end":413844,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413849,"byte_end":413856,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413861,"byte_end":413864,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Creating a simple millisecond-precision timestamp (as used in JavaScript):","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413869,"byte_end":413947,"line_start":61,"line_end":61,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413952,"byte_end":413955,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413960,"byte_end":413967,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Addr, BlockInfo, ContractInfo, Env, MessageInfo, Timestamp, TransactionInfo};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":413972,"byte_end":414074,"line_start":64,"line_end":64,"column_start":5,"column_end":107}},{"value":"/ # let env = Env {","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":414079,"byte_end":414100,"line_start":65,"line_end":65,"column_start":5,"column_end":26}},{"value":"/ #     block: BlockInfo {","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":414105,"byte_end":414133,"line_start":66,"line_end":66,"column_start":5,"column_end":33}},{"value":"/ #         height: 12_345,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":414138,"byte_end":414167,"line_start":67,"line_end":67,"column_start":5,"column_end":34}},{"value":"/ #         time: Timestamp::from_nanos(1_571_797_419_879_305_533),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":414172,"byte_end":414241,"line_start":68,"line_end":68,"column_start":5,"column_end":74}},{"value":"/ #         chain_id: \"cosmos-testnet-14002\".to_string(),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":414246,"byte_end":414305,"line_start":69,"line_end":69,"column_start":5,"column_end":64}},{"value":"/ #     },","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":414310,"byte_end":414322,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/ #     transaction: Some(TransactionInfo { index: 3 }),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":414327,"byte_end":414385,"line_start":71,"line_end":71,"column_start":5,"column_end":63}},{"value":"/ #     contract: ContractInfo {","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":414390,"byte_end":414424,"line_start":72,"line_end":72,"column_start":5,"column_end":39}},{"value":"/ #         address: Addr::unchecked(\"contract\"),","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":414429,"byte_end":414480,"line_start":73,"line_end":73,"column_start":5,"column_end":56}},{"value":"/ #     },","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":414485,"byte_end":414497,"line_start":74,"line_end":74,"column_start":5,"column_end":17}},{"value":"/ # };","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":414502,"byte_end":414510,"line_start":75,"line_end":75,"column_start":5,"column_end":13}},{"value":"/ let millis = env.block.time.nanos() / 1_000_000;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":414515,"byte_end":414567,"line_start":76,"line_end":76,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":414572,"byte_end":414579,"line_start":77,"line_end":77,"column_start":5,"column_end":12}}]},{"kind":"Field","id":{"krate":0,"index":10203},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":414613,"byte_end":414621,"line_start":79,"line_end":79,"column_start":9,"column_end":17},"name":"chain_id","qualname":"::types::BlockInfo::chain_id","value":"std::string::String","parent":{"krate":0,"index":10200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10263},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":415226,"byte_end":415237,"line_start":90,"line_end":90,"column_start":12,"column_end":23},"name":"MessageInfo","qualname":"::types::MessageInfo","value":"MessageInfo { sender, funds }","parent":null,"children":[{"krate":0,"index":10264},{"krate":0,"index":10265}],"decl_id":null,"docs":" Additional information from [MsgInstantiateContract] and [MsgExecuteContract], which is passed\n along with the contract execution message into the `instantiate` and `execute` entry points.","sig":null,"attributes":[{"value":"/ Additional information from [MsgInstantiateContract] and [MsgExecuteContract], which is passed","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":414634,"byte_end":414732,"line_start":82,"line_end":82,"column_start":1,"column_end":99}},{"value":"/ along with the contract execution message into the `instantiate` and `execute` entry points.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":414733,"byte_end":414829,"line_start":83,"line_end":83,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":414830,"byte_end":414833,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ It contains the essential info for authorization - identity of the call, and payment.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":414834,"byte_end":414923,"line_start":85,"line_end":85,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":414924,"byte_end":414927,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ [MsgInstantiateContract]: https://github.com/CosmWasm/wasmd/blob/v0.15.0/x/wasm/internal/types/tx.proto#L47-L61","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":414928,"byte_end":415043,"line_start":87,"line_end":87,"column_start":1,"column_end":116}},{"value":"/ [MsgExecuteContract]: https://github.com/CosmWasm/wasmd/blob/v0.15.0/x/wasm/internal/types/tx.proto#L68-L78","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":415044,"byte_end":415155,"line_start":88,"line_end":88,"column_start":1,"column_end":112}}]},{"kind":"Field","id":{"krate":0,"index":10264},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":415811,"byte_end":415817,"line_start":100,"line_end":100,"column_start":9,"column_end":15},"name":"sender","qualname":"::types::MessageInfo::sender","value":"addresses::Addr","parent":{"krate":0,"index":10263},"children":[],"decl_id":null,"docs":" The `sender` field from `MsgInstantiateContract` and `MsgExecuteContract`.\n You can think of this as the address that initiated the action (i.e. the message). What that\n means exactly heavily depends on the application.","sig":null,"attributes":[{"value":"/ The `sender` field from `MsgInstantiateContract` and `MsgExecuteContract`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":415244,"byte_end":415322,"line_start":91,"line_end":91,"column_start":5,"column_end":83}},{"value":"/ You can think of this as the address that initiated the action (i.e. the message). What that","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":415327,"byte_end":415423,"line_start":92,"line_end":92,"column_start":5,"column_end":101}},{"value":"/ means exactly heavily depends on the application.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":415428,"byte_end":415481,"line_start":93,"line_end":93,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":415486,"byte_end":415489,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ The x/wasm module ensures that the sender address signed the transaction or","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":415494,"byte_end":415573,"line_start":95,"line_end":95,"column_start":5,"column_end":84}},{"value":"/ is otherwise authorized to send the message.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":415578,"byte_end":415626,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":415631,"byte_end":415634,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Additional signers of the transaction that are either needed for other messages or contain unnecessary","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":415639,"byte_end":415745,"line_start":98,"line_end":98,"column_start":5,"column_end":111}},{"value":"/ signatures are not propagated into the contract.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":415750,"byte_end":415802,"line_start":99,"line_end":99,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":10265},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":416088,"byte_end":416093,"line_start":104,"line_end":104,"column_start":9,"column_end":14},"name":"funds","qualname":"::types::MessageInfo::funds","value":"std::vec::Vec<coins::Coin>","parent":{"krate":0,"index":10263},"children":[],"decl_id":null,"docs":" The funds that are sent to the contract as part of `MsgInstantiateContract`\n or `MsgExecuteContract`. The transfer is processed in bank before the contract\n is executed such that the new balance is visible during contract execution.\n","sig":null,"attributes":[{"value":"/ The funds that are sent to the contract as part of `MsgInstantiateContract`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":415829,"byte_end":415908,"line_start":101,"line_end":101,"column_start":5,"column_end":84}},{"value":"/ or `MsgExecuteContract`. The transfer is processed in bank before the contract","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":415913,"byte_end":415995,"line_start":102,"line_end":102,"column_start":5,"column_end":87}},{"value":"/ is executed such that the new balance is visible during contract execution.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":416000,"byte_end":416079,"line_start":103,"line_end":103,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":10323},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":416179,"byte_end":416191,"line_start":108,"line_end":108,"column_start":12,"column_end":24},"name":"ContractInfo","qualname":"::types::ContractInfo","value":"ContractInfo { address }","parent":null,"children":[{"krate":0,"index":10324}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10324},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/types.rs","byte_start":416202,"byte_end":416209,"line_start":109,"line_end":109,"column_start":9,"column_end":16},"name":"address","qualname":"::types::ContractInfo::address","value":"addresses::Addr","parent":{"krate":0,"index":10323},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3056},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":417502,"byte_end":417520,"line_start":34,"line_end":34,"column_start":11,"column_end":29},"name":"MOCK_CONTRACT_ADDR","qualname":"::mock::MOCK_CONTRACT_ADDR","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3057},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":417691,"byte_end":417708,"line_start":38,"line_end":38,"column_start":8,"column_end":25},"name":"mock_dependencies","qualname":"::mock::mock_dependencies","value":"pub fn mock_dependencies(&[Coin])\n-> OwnedDeps<MockStorage, MockApi, MockQuerier, Empty>","parent":null,"children":[],"decl_id":null,"docs":" All external requirements that can be injected for unit tests.\n It sets the given balance for the contract itself, nothing else\n","sig":null,"attributes":[{"value":"/ All external requirements that can be injected for unit tests.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":417549,"byte_end":417615,"line_start":36,"line_end":36,"column_start":1,"column_end":67}},{"value":"/ It sets the given balance for the contract itself, nothing else","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":417616,"byte_end":417683,"line_start":37,"line_end":37,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":3058},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":418171,"byte_end":418202,"line_start":51,"line_end":51,"column_start":8,"column_end":39},"name":"mock_dependencies_with_balances","qualname":"::mock::mock_dependencies_with_balances","value":"pub fn mock_dependencies_with_balances(&[(&str, &[Coin])])\n-> OwnedDeps<MockStorage, MockApi, MockQuerier>","parent":null,"children":[],"decl_id":null,"docs":" Initializes the querier along with the mock_dependencies.\n Sets all balances provided (yoy must explicitly set contract balance if desired)\n","sig":null,"attributes":[{"value":"/ Initializes the querier along with the mock_dependencies.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":418017,"byte_end":418078,"line_start":49,"line_end":49,"column_start":1,"column_end":62}},{"value":"/ Sets all balances provided (yoy must explicitly set contract balance if desired)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":418079,"byte_end":418163,"line_start":50,"line_end":50,"column_start":1,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":3059},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":418604,"byte_end":418615,"line_start":64,"line_end":64,"column_start":10,"column_end":21},"name":"MockStorage","qualname":"::mock::MockStorage","value":"MemoryStorage","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10380},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":419231,"byte_end":419238,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"MockApi","qualname":"::mock::MockApi","value":"MockApi {  }","parent":null,"children":[{"krate":0,"index":10381}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3076},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":423244,"byte_end":423252,"line_start":205,"line_end":205,"column_start":8,"column_end":16},"name":"mock_env","qualname":"::mock::mock_env","value":"pub fn mock_env() -> Env","parent":null,"children":[],"decl_id":null,"docs":" Returns a default enviroment with height, time, chain_id, and contract address\n You can submit as is to most contracts, or modify height/time if you want to\n test for expiration.","sig":null,"attributes":[{"value":"/ Returns a default enviroment with height, time, chain_id, and contract address","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":422996,"byte_end":423078,"line_start":200,"line_end":200,"column_start":1,"column_end":83}},{"value":"/ You can submit as is to most contracts, or modify height/time if you want to","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":423079,"byte_end":423159,"line_start":201,"line_end":201,"column_start":1,"column_end":81}},{"value":"/ test for expiration.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":423160,"byte_end":423184,"line_start":202,"line_end":202,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":423185,"byte_end":423188,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ This is intended for use in test code only.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":423189,"byte_end":423236,"line_start":204,"line_end":204,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":3077},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":423736,"byte_end":423745,"line_start":221,"line_end":221,"column_start":8,"column_end":17},"name":"mock_info","qualname":"::mock::mock_info","value":"pub fn mock_info(&str, &[Coin]) -> MessageInfo","parent":null,"children":[],"decl_id":null,"docs":" Just set sender and funds for the message.\n This is intended for use in test code only.\n","sig":null,"attributes":[{"value":"/ Just set sender and funds for the message.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":423634,"byte_end":423680,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/ This is intended for use in test code only.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":423681,"byte_end":423728,"line_start":220,"line_end":220,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":3078},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":424088,"byte_end":424104,"line_start":231,"line_end":231,"column_start":8,"column_end":24},"name":"mock_ibc_channel","qualname":"::mock::mock_ibc_channel","value":"pub fn mock_ibc_channel(&str, IbcOrder, &str) -> IbcChannel","parent":null,"children":[],"decl_id":null,"docs":" Creates an IbcChannel for testing. You set a few key parameters for handshaking,\n If you want to set more, use this as a default and mutate other fields\n","sig":null,"attributes":[{"value":"/ Creates an IbcChannel for testing. You set a few key parameters for handshaking,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":423892,"byte_end":423976,"line_start":228,"line_end":228,"column_start":1,"column_end":85}},{"value":"/ If you want to set more, use this as a default and mutate other fields","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":423977,"byte_end":424051,"line_start":229,"line_end":229,"column_start":1,"column_end":75}},{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":424052,"byte_end":424080,"line_start":230,"line_end":230,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3079},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":424702,"byte_end":424728,"line_start":249,"line_end":249,"column_start":8,"column_end":34},"name":"mock_ibc_channel_open_init","qualname":"::mock::mock_ibc_channel_open_init","value":"pub fn mock_ibc_channel_open_init(&str, IbcOrder, &str) -> IbcChannelOpenMsg","parent":null,"children":[],"decl_id":null,"docs":" Creates a IbcChannelOpenMsg::OpenInit for testing ibc_channel_open.\n","sig":null,"attributes":[{"value":"/ Creates a IbcChannelOpenMsg::OpenInit for testing ibc_channel_open.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":424594,"byte_end":424665,"line_start":247,"line_end":247,"column_start":1,"column_end":72}},{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":424666,"byte_end":424694,"line_start":248,"line_end":248,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3080},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":425011,"byte_end":425036,"line_start":259,"line_end":259,"column_start":8,"column_end":33},"name":"mock_ibc_channel_open_try","qualname":"::mock::mock_ibc_channel_open_try","value":"pub fn mock_ibc_channel_open_try(&str, IbcOrder, &str) -> IbcChannelOpenMsg","parent":null,"children":[],"decl_id":null,"docs":" Creates a IbcChannelOpenMsg::OpenTry for testing ibc_channel_open.\n","sig":null,"attributes":[{"value":"/ Creates a IbcChannelOpenMsg::OpenTry for testing ibc_channel_open.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":424904,"byte_end":424974,"line_start":257,"line_end":257,"column_start":1,"column_end":71}},{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":424975,"byte_end":425003,"line_start":258,"line_end":258,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3081},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":425336,"byte_end":425364,"line_start":269,"line_end":269,"column_start":8,"column_end":36},"name":"mock_ibc_channel_connect_ack","qualname":"::mock::mock_ibc_channel_connect_ack","value":"pub fn mock_ibc_channel_connect_ack(&str, IbcOrder, &str)\n-> IbcChannelConnectMsg","parent":null,"children":[],"decl_id":null,"docs":" Creates a IbcChannelConnectMsg::ConnectAck for testing ibc_channel_connect.\n","sig":null,"attributes":[{"value":"/ Creates a IbcChannelConnectMsg::ConnectAck for testing ibc_channel_connect.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":425220,"byte_end":425299,"line_start":267,"line_end":267,"column_start":1,"column_end":80}},{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":425300,"byte_end":425328,"line_start":268,"line_end":268,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3082},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":425674,"byte_end":425706,"line_start":279,"line_end":279,"column_start":8,"column_end":40},"name":"mock_ibc_channel_connect_confirm","qualname":"::mock::mock_ibc_channel_connect_confirm","value":"pub fn mock_ibc_channel_connect_confirm(&str, IbcOrder, &str)\n-> IbcChannelConnectMsg","parent":null,"children":[],"decl_id":null,"docs":" Creates a IbcChannelConnectMsg::ConnectConfirm for testing ibc_channel_connect.\n","sig":null,"attributes":[{"value":"/ Creates a IbcChannelConnectMsg::ConnectConfirm for testing ibc_channel_connect.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":425554,"byte_end":425637,"line_start":277,"line_end":277,"column_start":1,"column_end":84}},{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":425638,"byte_end":425666,"line_start":278,"line_end":278,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3083},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":426002,"byte_end":426029,"line_start":289,"line_end":289,"column_start":8,"column_end":35},"name":"mock_ibc_channel_close_init","qualname":"::mock::mock_ibc_channel_close_init","value":"pub fn mock_ibc_channel_close_init(&str, IbcOrder, &str) -> IbcChannelCloseMsg","parent":null,"children":[],"decl_id":null,"docs":" Creates a IbcChannelCloseMsg::CloseInit for testing ibc_channel_close.\n","sig":null,"attributes":[{"value":"/ Creates a IbcChannelCloseMsg::CloseInit for testing ibc_channel_close.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":425891,"byte_end":425965,"line_start":287,"line_end":287,"column_start":1,"column_end":75}},{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":425966,"byte_end":425994,"line_start":288,"line_end":288,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3084},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":426321,"byte_end":426351,"line_start":299,"line_end":299,"column_start":8,"column_end":38},"name":"mock_ibc_channel_close_confirm","qualname":"::mock::mock_ibc_channel_close_confirm","value":"pub fn mock_ibc_channel_close_confirm(&str, IbcOrder, &str)\n-> IbcChannelCloseMsg","parent":null,"children":[],"decl_id":null,"docs":" Creates a IbcChannelCloseMsg::CloseConfirm for testing ibc_channel_close.\n","sig":null,"attributes":[{"value":"/ Creates a IbcChannelCloseMsg::CloseConfirm for testing ibc_channel_close.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":426207,"byte_end":426284,"line_start":297,"line_end":297,"column_start":1,"column_end":78}},{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":426285,"byte_end":426313,"line_start":298,"line_end":298,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3085},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":426761,"byte_end":426781,"line_start":310,"line_end":310,"column_start":8,"column_end":28},"name":"mock_ibc_packet_recv","qualname":"::mock::mock_ibc_packet_recv","value":"pub fn mock_ibc_packet_recv<impl Serialize: Serialize>(&str, &impl Serialize)\n-> StdResult<IbcPacketReceiveMsg>","parent":null,"children":[],"decl_id":null,"docs":" Creates a IbcPacketReceiveMsg for testing ibc_packet_receive. You set a few key parameters that are\n often parsed. If you want to set more, use this as a default and mutate other fields\n","sig":null,"attributes":[{"value":"/ Creates a IbcPacketReceiveMsg for testing ibc_packet_receive. You set a few key parameters that are","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":426532,"byte_end":426635,"line_start":307,"line_end":307,"column_start":1,"column_end":104}},{"value":"/ often parsed. If you want to set more, use this as a default and mutate other fields","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":426636,"byte_end":426724,"line_start":308,"line_end":308,"column_start":1,"column_end":89}},{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":426725,"byte_end":426753,"line_start":309,"line_end":309,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3089},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":428530,"byte_end":428549,"line_start":361,"line_end":361,"column_start":8,"column_end":27},"name":"mock_ibc_packet_ack","qualname":"::mock::mock_ibc_packet_ack","value":"pub fn mock_ibc_packet_ack<impl Serialize: Serialize>(&str, &impl Serialize,\n                                                      IbcAcknowledgement)\n-> StdResult<IbcPacketAckMsg>","parent":null,"children":[],"decl_id":null,"docs":" Creates a IbcPacketAckMsg for testing ibc_packet_ack. You set a few key parameters that are\n often parsed. If you want to set more, use this as a default and mutate other fields.\n The difference from mock_ibc_packet_recv is if `my_channel_id` is src or dest.\n","sig":null,"attributes":[{"value":"/ Creates a IbcPacketAckMsg for testing ibc_packet_ack. You set a few key parameters that are","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":428225,"byte_end":428320,"line_start":357,"line_end":357,"column_start":1,"column_end":96}},{"value":"/ often parsed. If you want to set more, use this as a default and mutate other fields.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":428321,"byte_end":428410,"line_start":358,"line_end":358,"column_start":1,"column_end":90}},{"value":"/ The difference from mock_ibc_packet_recv is if `my_channel_id` is src or dest.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":428411,"byte_end":428493,"line_start":359,"line_end":359,"column_start":1,"column_end":83}},{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":428494,"byte_end":428522,"line_start":360,"line_end":360,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3091},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":429082,"byte_end":429105,"line_start":375,"line_end":375,"column_start":8,"column_end":31},"name":"mock_ibc_packet_timeout","qualname":"::mock::mock_ibc_packet_timeout","value":"pub fn mock_ibc_packet_timeout<impl Serialize: Serialize>(&str,\n                                                          &impl Serialize)\n-> StdResult<IbcPacketTimeoutMsg>","parent":null,"children":[],"decl_id":null,"docs":" Creates a IbcPacketTimeoutMsg for testing ibc_packet_timeout. You set a few key parameters that are\n often parsed. If you want to set more, use this as a default and mutate other fields.\n The difference from mock_ibc_packet_recv is if `my_channel_id` is src or dest./\n","sig":null,"attributes":[{"value":"/ Creates a IbcPacketTimeoutMsg for testing ibc_packet_timeout. You set a few key parameters that are","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":428768,"byte_end":428871,"line_start":371,"line_end":371,"column_start":1,"column_end":104}},{"value":"/ often parsed. If you want to set more, use this as a default and mutate other fields.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":428872,"byte_end":428961,"line_start":372,"line_end":372,"column_start":1,"column_end":90}},{"value":"/ The difference from mock_ibc_packet_recv is if `my_channel_id` is src or dest./","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":428962,"byte_end":429045,"line_start":373,"line_end":373,"column_start":1,"column_end":84}},{"value":"cfg(feature = \"stargate\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":429046,"byte_end":429074,"line_start":374,"line_end":374,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":3093},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":429422,"byte_end":429452,"line_start":384,"line_end":384,"column_start":10,"column_end":40},"name":"MockQuerierCustomHandlerResult","qualname":"::mock::MockQuerierCustomHandlerResult","value":"SystemResult<ContractResult<Binary>>","parent":null,"children":[],"decl_id":null,"docs":" The same type as cosmwasm-std's QuerierResult, but easier to reuse in\n cosmwasm-vm. It might diverge from QuerierResult at some point.\n","sig":null,"attributes":[{"value":"/ The same type as cosmwasm-std's QuerierResult, but easier to reuse in","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":429271,"byte_end":429344,"line_start":382,"line_end":382,"column_start":1,"column_end":74}},{"value":"/ cosmwasm-vm. It might diverge from QuerierResult at some point.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":429345,"byte_end":429412,"line_start":383,"line_end":383,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3094},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":429603,"byte_end":429614,"line_start":388,"line_end":388,"column_start":12,"column_end":23},"name":"MockQuerier","qualname":"::mock::MockQuerier","value":"MockQuerier {  }","parent":null,"children":[{"krate":0,"index":3096},{"krate":0,"index":3097},{"krate":0,"index":3098},{"krate":0,"index":3099}],"decl_id":null,"docs":" MockQuerier holds an immutable table of bank balances\n TODO: also allow querying contracts\n","sig":null,"attributes":[{"value":"/ MockQuerier holds an immutable table of bank balances","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":429494,"byte_end":429551,"line_start":386,"line_end":386,"column_start":1,"column_end":58}},{"value":"/ TODO: also allow querying contracts","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":429552,"byte_end":429591,"line_start":387,"line_end":387,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3103},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":430151,"byte_end":430154,"line_start":402,"line_end":402,"column_start":12,"column_end":15},"name":"new","qualname":"<MockQuerier<C>>::new","value":"pub fn new(&[(&str, &[Coin])]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3105},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":430865,"byte_end":430879,"line_start":418,"line_end":418,"column_start":12,"column_end":26},"name":"update_balance","qualname":"<MockQuerier<C>>::update_balance","value":"pub fn update_balance<impl Into<String>: Into<String>>(&mut Self,\n                                                       impl Into<String>,\n                                                       Vec<Coin>)\n-> Option<Vec<Coin>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3107},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":431096,"byte_end":431110,"line_start":427,"line_end":427,"column_start":12,"column_end":26},"name":"update_staking","qualname":"<MockQuerier<C>>::update_staking","value":"pub fn update_staking(&mut Self, &str, &[crate::query::Validator],\n                      &[crate::query::FullDelegation])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":431057,"byte_end":431084,"line_start":426,"line_end":426,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3108},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":431356,"byte_end":431375,"line_start":436,"line_end":436,"column_start":12,"column_end":31},"name":"with_custom_handler","qualname":"<MockQuerier<C>>::with_custom_handler","value":"pub fn with_custom_handler<CH: 'static>(Self, CH) -> Self where CH: Fn(&C) ->\nMockQuerierCustomHandlerResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3115},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":432158,"byte_end":432170,"line_start":461,"line_end":461,"column_start":12,"column_end":24},"name":"handle_query","qualname":"<MockQuerier<C>>::handle_query","value":"pub fn handle_query(&Self, &QueryRequest<C>) -> QuerierResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10390},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":433572,"byte_end":433583,"line_start":498,"line_end":498,"column_start":12,"column_end":23},"name":"BankQuerier","qualname":"::mock::BankQuerier","value":"BankQuerier {  }","parent":null,"children":[{"krate":0,"index":10391}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3119},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":433661,"byte_end":433664,"line_start":503,"line_end":503,"column_start":12,"column_end":15},"name":"new","qualname":"<BankQuerier>::new","value":"pub fn new(&[(&str, &[Coin])]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3120},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":433914,"byte_end":433919,"line_start":511,"line_end":511,"column_start":12,"column_end":17},"name":"query","qualname":"<BankQuerier>::query","value":"pub fn query(&Self, &BankQuery) -> QuerierResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10396},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":435190,"byte_end":435204,"line_start":543,"line_end":543,"column_start":12,"column_end":26},"name":"StakingQuerier","qualname":"::mock::StakingQuerier","value":"StakingQuerier {  }","parent":null,"children":[{"krate":0,"index":10397},{"krate":0,"index":10398},{"krate":0,"index":10399}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":435125,"byte_end":435152,"line_start":541,"line_end":541,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3125},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":435360,"byte_end":435363,"line_start":551,"line_end":551,"column_start":12,"column_end":15},"name":"new","qualname":"<StakingQuerier>::new","value":"pub fn new(&str, &[Validator], &[FullDelegation]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3126},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":435628,"byte_end":435633,"line_start":559,"line_end":559,"column_start":12,"column_end":17},"name":"query","qualname":"<StakingQuerier>::query","value":"pub fn query(&Self, &StakingQuery) -> QuerierResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3131},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438351,"byte_end":438365,"line_start":659,"line_end":659,"column_start":8,"column_end":22},"name":"riffle_shuffle","qualname":"::mock::riffle_shuffle","value":"pub fn riffle_shuffle<T: Clone>(&[T]) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Performs a perfect shuffle (in shuffle)","sig":null,"attributes":[{"value":"/ Performs a perfect shuffle (in shuffle)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":437635,"byte_end":437678,"line_start":612,"line_end":612,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":437679,"byte_end":437682,"line_start":613,"line_end":613,"column_start":1,"column_end":4}},{"value":"/ https://en.wikipedia.org/wiki/Riffle_shuffle_permutation#Perfect_shuffles","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":437683,"byte_end":437760,"line_start":614,"line_end":614,"column_start":1,"column_end":78}},{"value":"/ https://en.wikipedia.org/wiki/In_shuffle","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":437761,"byte_end":437805,"line_start":615,"line_end":615,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":437806,"byte_end":437809,"line_start":616,"line_end":616,"column_start":1,"column_end":4}},{"value":"/ The number of shuffles required to restore the original order are listed in","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":437810,"byte_end":437889,"line_start":617,"line_end":617,"column_start":1,"column_end":80}},{"value":"/ https://oeis.org/A002326, e.g.:","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":437890,"byte_end":437925,"line_start":618,"line_end":618,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":437926,"byte_end":437929,"line_start":619,"line_end":619,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":437930,"byte_end":437943,"line_start":620,"line_end":620,"column_start":1,"column_end":14}},{"value":"/ 2: 2","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":437944,"byte_end":437952,"line_start":621,"line_end":621,"column_start":1,"column_end":9}},{"value":"/ 4: 4","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":437953,"byte_end":437961,"line_start":622,"line_end":622,"column_start":1,"column_end":9}},{"value":"/ 6: 3","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":437962,"byte_end":437970,"line_start":623,"line_end":623,"column_start":1,"column_end":9}},{"value":"/ 8: 6","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":437971,"byte_end":437979,"line_start":624,"line_end":624,"column_start":1,"column_end":9}},{"value":"/ 10: 10","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":437980,"byte_end":437990,"line_start":625,"line_end":625,"column_start":1,"column_end":11}},{"value":"/ 12: 12","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":437991,"byte_end":438001,"line_start":626,"line_end":626,"column_start":1,"column_end":11}},{"value":"/ 14: 4","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438002,"byte_end":438011,"line_start":627,"line_end":627,"column_start":1,"column_end":10}},{"value":"/ 16: 8","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438012,"byte_end":438021,"line_start":628,"line_end":628,"column_start":1,"column_end":10}},{"value":"/ 18: 18","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438022,"byte_end":438032,"line_start":629,"line_end":629,"column_start":1,"column_end":11}},{"value":"/ 20: 6","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438033,"byte_end":438042,"line_start":630,"line_end":630,"column_start":1,"column_end":10}},{"value":"/ 22: 11","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438043,"byte_end":438053,"line_start":631,"line_end":631,"column_start":1,"column_end":11}},{"value":"/ 24: 20","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438054,"byte_end":438064,"line_start":632,"line_end":632,"column_start":1,"column_end":11}},{"value":"/ 26: 18","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438065,"byte_end":438075,"line_start":633,"line_end":633,"column_start":1,"column_end":11}},{"value":"/ 28: 28","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438076,"byte_end":438086,"line_start":634,"line_end":634,"column_start":1,"column_end":11}},{"value":"/ 30: 5","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438087,"byte_end":438096,"line_start":635,"line_end":635,"column_start":1,"column_end":10}},{"value":"/ 32: 10","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438097,"byte_end":438107,"line_start":636,"line_end":636,"column_start":1,"column_end":11}},{"value":"/ 34: 12","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438108,"byte_end":438118,"line_start":637,"line_end":637,"column_start":1,"column_end":11}},{"value":"/ 36: 36","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438119,"byte_end":438129,"line_start":638,"line_end":638,"column_start":1,"column_end":11}},{"value":"/ 38: 12","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438130,"byte_end":438140,"line_start":639,"line_end":639,"column_start":1,"column_end":11}},{"value":"/ 40: 20","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438141,"byte_end":438151,"line_start":640,"line_end":640,"column_start":1,"column_end":11}},{"value":"/ 42: 14","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438152,"byte_end":438162,"line_start":641,"line_end":641,"column_start":1,"column_end":11}},{"value":"/ 44: 12","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438163,"byte_end":438173,"line_start":642,"line_end":642,"column_start":1,"column_end":11}},{"value":"/ 46: 23","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438174,"byte_end":438184,"line_start":643,"line_end":643,"column_start":1,"column_end":11}},{"value":"/ 48: 21","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438185,"byte_end":438195,"line_start":644,"line_end":644,"column_start":1,"column_end":11}},{"value":"/ 50: 8","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438196,"byte_end":438205,"line_start":645,"line_end":645,"column_start":1,"column_end":10}},{"value":"/ 52: 52","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438206,"byte_end":438216,"line_start":646,"line_end":646,"column_start":1,"column_end":11}},{"value":"/ 54: 20","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438217,"byte_end":438227,"line_start":647,"line_end":647,"column_start":1,"column_end":11}},{"value":"/ 56: 18","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438228,"byte_end":438238,"line_start":648,"line_end":648,"column_start":1,"column_end":11}},{"value":"/ 58: 58","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438239,"byte_end":438249,"line_start":649,"line_end":649,"column_start":1,"column_end":11}},{"value":"/ 60: 60","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438250,"byte_end":438260,"line_start":650,"line_end":650,"column_start":1,"column_end":11}},{"value":"/ 62: 6","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438261,"byte_end":438270,"line_start":651,"line_end":651,"column_start":1,"column_end":10}},{"value":"/ 64: 12","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438271,"byte_end":438281,"line_start":652,"line_end":652,"column_start":1,"column_end":11}},{"value":"/ 66: 66","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438282,"byte_end":438292,"line_start":653,"line_end":653,"column_start":1,"column_end":11}},{"value":"/ 68: 22","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438293,"byte_end":438303,"line_start":654,"line_end":654,"column_start":1,"column_end":11}},{"value":"/ 70: 35","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438304,"byte_end":438314,"line_start":655,"line_end":655,"column_start":1,"column_end":11}},{"value":"/ 72: 9","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438315,"byte_end":438324,"line_start":656,"line_end":656,"column_start":1,"column_end":10}},{"value":"/ 74: 20","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438325,"byte_end":438335,"line_start":657,"line_end":657,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438336,"byte_end":438343,"line_start":658,"line_end":658,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3133},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438758,"byte_end":438767,"line_start":674,"line_end":674,"column_start":8,"column_end":17},"name":"digit_sum","qualname":"::mock::digit_sum","value":"pub fn digit_sum(&[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3135},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":439001,"byte_end":439016,"line_start":680,"line_end":680,"column_start":8,"column_end":23},"name":"mock_wasmd_attr","qualname":"::mock::mock_wasmd_attr","value":"pub fn mock_wasmd_attr<impl Into<String>: Into<String>,\n                       impl Into<String>: Into<String>>(impl Into<String>,\n                                                        impl Into<String>)\n-> Attribute","parent":null,"children":[],"decl_id":null,"docs":" Only for test code. This bypasses assertions in new, allowing us to create _*\n Attributes to simulate responses from the blockchain\n","sig":null,"attributes":[{"value":"/ Only for test code. This bypasses assertions in new, allowing us to create _*","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438855,"byte_end":438936,"line_start":678,"line_end":678,"column_start":1,"column_end":82}},{"value":"/ Attributes to simulate responses from the blockchain","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":438937,"byte_end":438993,"line_start":679,"line_end":679,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":3138},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":3520,"byte_end":3527,"line_start":101,"line_end":101,"column_start":9,"column_end":16},"name":"testing","qualname":"::testing","value":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","parent":null,"children":[{"krate":0,"index":3139},{"krate":0,"index":3142},{"krate":0,"index":3143},{"krate":0,"index":3146},{"krate":0,"index":3149},{"krate":0,"index":3152},{"krate":0,"index":3155},{"krate":0,"index":3158},{"krate":0,"index":3161},{"krate":0,"index":3164},{"krate":0,"index":3167},{"krate":0,"index":3170},{"krate":0,"index":3173},{"krate":0,"index":3176},{"krate":0,"index":3179},{"krate":0,"index":3182},{"krate":0,"index":3183},{"krate":0,"index":3186},{"krate":0,"index":3189},{"krate":0,"index":3192},{"krate":0,"index":3195},{"krate":0,"index":3198},{"krate":0,"index":3201},{"krate":0,"index":3204},{"krate":0,"index":3207},{"krate":0,"index":3210}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/lib.rs","byte_start":3476,"byte_end":3511,"line_start":100,"line_end":100,"column_start":1,"column_end":36}}]}],"impls":[{"id":3,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":5496,"byte_end":5500,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":6702,"byte_end":6706,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":6830,"byte_end":6834,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":6967,"byte_end":6971,"line_start":84,"line_end":84,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":7235,"byte_end":7239,"line_start":98,"line_end":98,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":7371,"byte_end":7377,"line_start":105,"line_end":105,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":7584,"byte_end":7590,"line_start":114,"line_end":114,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":7672,"byte_end":7678,"line_start":120,"line_end":120,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":7768,"byte_end":7771,"line_start":126,"line_end":126,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":7880,"byte_end":7883,"line_start":132,"line_end":132,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":8112,"byte_end":8125,"line_start":141,"line_end":141,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":8225,"byte_end":8238,"line_start":147,"line_end":147,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":8346,"byte_end":8349,"line_start":153,"line_end":153,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":8854,"byte_end":8867,"line_start":164,"line_end":164,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":8972,"byte_end":8985,"line_start":172,"line_end":172,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":9083,"byte_end":9096,"line_start":178,"line_end":178,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":23337,"byte_end":23343,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":25237,"byte_end":25243,"line_start":72,"line_end":72,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":25377,"byte_end":25383,"line_start":78,"line_end":78,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":25832,"byte_end":25838,"line_start":89,"line_end":89,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":26001,"byte_end":26007,"line_start":98,"line_end":98,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":26152,"byte_end":26158,"line_start":105,"line_end":105,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":26265,"byte_end":26271,"line_start":111,"line_end":111,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":26359,"byte_end":26362,"line_start":117,"line_end":117,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":26522,"byte_end":26528,"line_start":124,"line_end":124,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":26720,"byte_end":26723,"line_start":132,"line_end":132,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":26895,"byte_end":26901,"line_start":140,"line_end":140,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":27247,"byte_end":27253,"line_start":156,"line_end":156,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":27497,"byte_end":27503,"line_start":166,"line_end":166,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":27734,"byte_end":27747,"line_start":177,"line_end":177,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":38937,"byte_end":38941,"line_start":13,"line_end":13,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":39140,"byte_end":39144,"line_start":22,"line_end":22,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":44842,"byte_end":44846,"line_start":36,"line_end":36,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":44911,"byte_end":44920,"line_start":38,"line_end":38,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":45372,"byte_end":45379,"line_start":56,"line_end":56,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","byte_start":52703,"byte_end":52721,"line_start":24,"line_end":24,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","byte_start":52985,"byte_end":53003,"line_start":34,"line_end":34,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","byte_start":53960,"byte_end":53978,"line_start":62,"line_end":62,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":58023,"byte_end":58031,"line_start":107,"line_end":107,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":60807,"byte_end":60815,"line_start":201,"line_end":201,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":67227,"byte_end":67235,"line_start":406,"line_end":406,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":67375,"byte_end":67383,"line_start":412,"line_end":412,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":67521,"byte_end":67529,"line_start":418,"line_end":418,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":67663,"byte_end":67671,"line_start":424,"line_end":424,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":67803,"byte_end":67811,"line_start":430,"line_end":430,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":67932,"byte_end":67940,"line_start":436,"line_end":436,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":68554,"byte_end":68571,"line_start":459,"line_end":459,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":68900,"byte_end":68913,"line_start":473,"line_end":473,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":69683,"byte_end":69706,"line_start":501,"line_end":501,"column_start":6,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":70109,"byte_end":70126,"line_start":521,"line_end":521,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/system_error.rs","byte_start":79235,"byte_end":79246,"line_start":37,"line_end":37,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/system_error.rs","byte_start":79278,"byte_end":79289,"line_start":39,"line_end":39,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/verification_error.rs","byte_start":80944,"byte_end":80961,"line_start":31,"line_end":31,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/verification_error.rs","byte_start":81223,"byte_end":81240,"line_start":41,"line_end":41,"column_start":39,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/verification_error.rs","byte_start":82506,"byte_end":82523,"line_start":74,"line_end":74,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":86311,"byte_end":86321,"line_start":69,"line_end":69,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":87014,"byte_end":87024,"line_start":100,"line_end":100,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":87163,"byte_end":87173,"line_start":106,"line_end":106,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":87877,"byte_end":87887,"line_start":128,"line_end":128,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":89391,"byte_end":89406,"line_start":172,"line_end":172,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":89521,"byte_end":89536,"line_start":178,"line_end":178,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":89653,"byte_end":89668,"line_start":184,"line_end":184,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":90374,"byte_end":90383,"line_start":207,"line_end":207,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":91054,"byte_end":91072,"line_start":234,"line_end":234,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":91984,"byte_end":92001,"line_start":260,"line_end":260,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":92782,"byte_end":92792,"line_start":290,"line_end":290,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":93677,"byte_end":93697,"line_start":313,"line_end":313,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":94490,"byte_end":94500,"line_start":343,"line_end":343,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":95376,"byte_end":95394,"line_start":363,"line_end":363,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":95815,"byte_end":95825,"line_start":380,"line_end":380,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":96269,"byte_end":96288,"line_start":396,"line_end":396,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":96628,"byte_end":96643,"line_start":410,"line_end":410,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":97042,"byte_end":97061,"line_start":426,"line_end":426,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":98708,"byte_end":98724,"line_start":463,"line_end":463,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":98901,"byte_end":98917,"line_start":473,"line_end":473,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":103996,"byte_end":104014,"line_start":608,"line_end":608,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":104238,"byte_end":104256,"line_start":619,"line_end":619,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":525},{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/iterator.rs","byte_start":113912,"byte_end":113917,"line_start":20,"line_end":20,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":115479,"byte_end":115486,"line_start":26,"line_end":26,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":121779,"byte_end":121786,"line_start":187,"line_end":187,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":122511,"byte_end":122518,"line_start":213,"line_end":213,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":124584,"byte_end":124591,"line_start":263,"line_end":263,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":125202,"byte_end":125209,"line_start":281,"line_end":281,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":125338,"byte_end":125345,"line_start":289,"line_end":289,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":125474,"byte_end":125481,"line_start":297,"line_end":297,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":126508,"byte_end":126515,"line_start":319,"line_end":319,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":126867,"byte_end":126874,"line_start":332,"line_end":332,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":127009,"byte_end":127016,"line_start":340,"line_end":340,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":127165,"byte_end":127172,"line_start":348,"line_end":348,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":127306,"byte_end":127313,"line_start":355,"line_end":355,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":127557,"byte_end":127564,"line_start":365,"line_end":365,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":127795,"byte_end":127809,"line_start":376,"line_end":376,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":157136,"byte_end":157146,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":764},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":163824,"byte_end":163834,"line_start":200,"line_end":200,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":164556,"byte_end":164566,"line_start":226,"line_end":226,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":166632,"byte_end":166642,"line_start":276,"line_end":276,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":167253,"byte_end":167263,"line_start":294,"line_end":294,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":789},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":167389,"byte_end":167399,"line_start":302,"line_end":302,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":167525,"byte_end":167535,"line_start":310,"line_end":310,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":168577,"byte_end":168584,"line_start":332,"line_end":332,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":168942,"byte_end":168952,"line_start":345,"line_end":345,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":169087,"byte_end":169097,"line_start":353,"line_end":353,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":169243,"byte_end":169253,"line_start":361,"line_end":361,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":169387,"byte_end":169397,"line_start":368,"line_end":368,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":169641,"byte_end":169651,"line_start":378,"line_end":378,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":169888,"byte_end":169905,"line_start":389,"line_end":389,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/isqrt.rs","byte_start":201904,"byte_end":201905,"line_start":12,"line_end":12,"column_start":19,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/isqrt.rs","byte_start":202757,"byte_end":202763,"line_start":48,"line_end":48,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/isqrt.rs","byte_start":202785,"byte_end":202792,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/isqrt.rs","byte_start":202814,"byte_end":202821,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/isqrt.rs","byte_start":202843,"byte_end":202850,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205451,"byte_end":205458,"line_start":34,"line_end":34,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":936},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":945},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":209019,"byte_end":209026,"line_start":155,"line_end":155,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":209118,"byte_end":209125,"line_start":161,"line_end":161,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":209210,"byte_end":209217,"line_start":167,"line_end":167,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":209308,"byte_end":209315,"line_start":173,"line_end":173,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":209406,"byte_end":209413,"line_start":179,"line_end":179,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":209503,"byte_end":209510,"line_start":185,"line_end":185,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":209607,"byte_end":209613,"line_start":191,"line_end":191,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":974},{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":209905,"byte_end":209912,"line_start":201,"line_end":201,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":210055,"byte_end":210062,"line_start":209,"line_end":209,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":981},{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":210340,"byte_end":210346,"line_start":220,"line_end":220,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":210549,"byte_end":210556,"line_start":232,"line_end":232,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":210676,"byte_end":210683,"line_start":238,"line_end":238,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":990},{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":210942,"byte_end":210949,"line_start":250,"line_end":250,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":994},{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":211078,"byte_end":211085,"line_start":258,"line_end":258,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":211349,"byte_end":211356,"line_start":270,"line_end":270,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":211485,"byte_end":211492,"line_start":278,"line_end":278,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":211761,"byte_end":211768,"line_start":290,"line_end":290,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":211908,"byte_end":211915,"line_start":298,"line_end":298,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1011},{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":212176,"byte_end":212183,"line_start":310,"line_end":310,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1015},{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":212316,"byte_end":212323,"line_start":318,"line_end":318,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":212583,"byte_end":212590,"line_start":330,"line_end":330,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":212730,"byte_end":212737,"line_start":338,"line_end":338,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":212864,"byte_end":212871,"line_start":344,"line_end":344,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":212994,"byte_end":213001,"line_start":350,"line_end":350,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":213128,"byte_end":213135,"line_start":356,"line_end":356,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":213258,"byte_end":213265,"line_start":362,"line_end":362,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":213389,"byte_end":213396,"line_start":368,"line_end":368,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":213519,"byte_end":213526,"line_start":374,"line_end":374,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":213650,"byte_end":213657,"line_start":380,"line_end":380,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":213776,"byte_end":213783,"line_start":386,"line_end":386,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":213903,"byte_end":213910,"line_start":392,"line_end":392,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":214002,"byte_end":214009,"line_start":398,"line_end":398,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1050},{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":215071,"byte_end":215078,"line_start":434,"line_end":434,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":215340,"byte_end":215347,"line_start":444,"line_end":444,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":215639,"byte_end":215653,"line_start":456,"line_end":456,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":216110,"byte_end":216117,"line_start":474,"line_end":474,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":216268,"byte_end":216275,"line_start":480,"line_end":480,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":226993,"byte_end":227000,"line_start":50,"line_end":50,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1161},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1167},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1174},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":234290,"byte_end":234297,"line_start":286,"line_end":286,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1189}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":234393,"byte_end":234400,"line_start":292,"line_end":292,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":234492,"byte_end":234499,"line_start":298,"line_end":298,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":234591,"byte_end":234598,"line_start":304,"line_end":304,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":234689,"byte_end":234696,"line_start":310,"line_end":310,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":234787,"byte_end":234794,"line_start":316,"line_end":316,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":234884,"byte_end":234891,"line_start":322,"line_end":322,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":234988,"byte_end":234995,"line_start":328,"line_end":328,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1203},{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":235289,"byte_end":235296,"line_start":338,"line_end":338,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":235439,"byte_end":235446,"line_start":346,"line_end":346,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1210},{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":235851,"byte_end":235857,"line_start":361,"line_end":361,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1213}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":235961,"byte_end":235968,"line_start":367,"line_end":367,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1215}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":236254,"byte_end":236261,"line_start":377,"line_end":377,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1217},{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":236507,"byte_end":236514,"line_start":389,"line_end":389,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1221},{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":236643,"byte_end":236650,"line_start":397,"line_end":397,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":236901,"byte_end":236908,"line_start":409,"line_end":409,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1228},{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":237037,"byte_end":237044,"line_start":417,"line_end":417,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":237295,"byte_end":237302,"line_start":429,"line_end":429,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1235},{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":237439,"byte_end":237446,"line_start":437,"line_end":437,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1238},{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":237705,"byte_end":237712,"line_start":449,"line_end":449,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1242},{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":237848,"byte_end":237855,"line_start":457,"line_end":457,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1245},{"krate":0,"index":1246}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":238180,"byte_end":238187,"line_start":470,"line_end":470,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1250},{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":238319,"byte_end":238326,"line_start":478,"line_end":478,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1253},{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":238650,"byte_end":238657,"line_start":491,"line_end":491,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1258},{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":238799,"byte_end":238806,"line_start":499,"line_end":499,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1261}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":238933,"byte_end":238940,"line_start":505,"line_end":505,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":239063,"byte_end":239070,"line_start":511,"line_end":511,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":239197,"byte_end":239204,"line_start":517,"line_end":517,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":239327,"byte_end":239334,"line_start":523,"line_end":523,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":239458,"byte_end":239465,"line_start":529,"line_end":529,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":239588,"byte_end":239595,"line_start":535,"line_end":535,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":239719,"byte_end":239726,"line_start":541,"line_end":541,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1279}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":239845,"byte_end":239852,"line_start":547,"line_end":547,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1281}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":239987,"byte_end":239994,"line_start":553,"line_end":553,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":240102,"byte_end":240109,"line_start":559,"line_end":559,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1286},{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":241258,"byte_end":241265,"line_start":598,"line_end":598,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":241527,"byte_end":241534,"line_start":608,"line_end":608,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":241826,"byte_end":241840,"line_start":620,"line_end":620,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":242230,"byte_end":242237,"line_start":635,"line_end":635,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":242388,"byte_end":242395,"line_start":641,"line_end":641,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270722,"byte_end":270729,"line_start":54,"line_end":54,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1395},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1401},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1406},{"krate":0,"index":1408},{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":280639,"byte_end":280646,"line_start":366,"line_end":366,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1419}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":280834,"byte_end":280841,"line_start":374,"line_end":374,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":280937,"byte_end":280944,"line_start":380,"line_end":380,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":281036,"byte_end":281043,"line_start":386,"line_end":386,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":281135,"byte_end":281142,"line_start":392,"line_end":392,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1428}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":281233,"byte_end":281240,"line_start":398,"line_end":398,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":281331,"byte_end":281338,"line_start":404,"line_end":404,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1432}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":281428,"byte_end":281435,"line_start":410,"line_end":410,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":281532,"byte_end":281539,"line_start":416,"line_end":416,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1436},{"krate":0,"index":1437}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":282056,"byte_end":282063,"line_start":435,"line_end":435,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1440},{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":282357,"byte_end":282364,"line_start":445,"line_end":445,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1444},{"krate":0,"index":1445}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":282507,"byte_end":282514,"line_start":453,"line_end":453,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1447},{"krate":0,"index":1448}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":282793,"byte_end":282799,"line_start":464,"line_end":464,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1450}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":282903,"byte_end":282910,"line_start":470,"line_end":470,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":283196,"byte_end":283203,"line_start":480,"line_end":480,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1454},{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":283365,"byte_end":283372,"line_start":488,"line_end":488,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1458},{"krate":0,"index":1459}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":283533,"byte_end":283540,"line_start":496,"line_end":496,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1461},{"krate":0,"index":1462}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":283702,"byte_end":283709,"line_start":504,"line_end":504,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1465},{"krate":0,"index":1466}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":283870,"byte_end":283877,"line_start":512,"line_end":512,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1468},{"krate":0,"index":1469}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":284044,"byte_end":284051,"line_start":520,"line_end":520,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1472},{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":284217,"byte_end":284224,"line_start":528,"line_end":528,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1475},{"krate":0,"index":1476}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":284391,"byte_end":284398,"line_start":536,"line_end":536,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1479},{"krate":0,"index":1480}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":284560,"byte_end":284567,"line_start":544,"line_end":544,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1482},{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":284892,"byte_end":284899,"line_start":557,"line_end":557,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1487},{"krate":0,"index":1488}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":285054,"byte_end":285061,"line_start":565,"line_end":565,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":285212,"byte_end":285219,"line_start":571,"line_end":571,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1493}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":285366,"byte_end":285373,"line_start":577,"line_end":577,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1495}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":285524,"byte_end":285531,"line_start":583,"line_end":583,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1498}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":285678,"byte_end":285685,"line_start":589,"line_end":589,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1500}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":285833,"byte_end":285840,"line_start":595,"line_end":595,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1503}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":285987,"byte_end":285994,"line_start":601,"line_end":601,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1505}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":286142,"byte_end":286149,"line_start":607,"line_end":607,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":286292,"byte_end":286299,"line_start":613,"line_end":613,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":286434,"byte_end":286441,"line_start":619,"line_end":619,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":286563,"byte_end":286570,"line_start":625,"line_end":625,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":286832,"byte_end":286839,"line_start":635,"line_end":635,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1519}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":287131,"byte_end":287145,"line_start":647,"line_end":647,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":287535,"byte_end":287542,"line_start":662,"line_end":662,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1531}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":287693,"byte_end":287700,"line_start":668,"line_end":668,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1535}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303522,"byte_end":303528,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1598},{"krate":0,"index":1600},{"krate":0,"index":1602},{"krate":0,"index":1604},{"krate":0,"index":1606},{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":306558,"byte_end":306564,"line_start":134,"line_end":134,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":306647,"byte_end":306653,"line_start":140,"line_end":140,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1619}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":306743,"byte_end":306749,"line_start":146,"line_end":146,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1621}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":306838,"byte_end":306844,"line_start":152,"line_end":152,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1623}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":306937,"byte_end":306943,"line_start":158,"line_end":158,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1625},{"krate":0,"index":1626}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":307225,"byte_end":307231,"line_start":169,"line_end":169,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1628}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":307430,"byte_end":307436,"line_start":181,"line_end":181,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1632}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":307555,"byte_end":307561,"line_start":187,"line_end":187,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1634},{"krate":0,"index":1635}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":307729,"byte_end":307735,"line_start":195,"line_end":195,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1638},{"krate":0,"index":1639}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":307901,"byte_end":307907,"line_start":203,"line_end":203,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1641},{"krate":0,"index":1642}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":308081,"byte_end":308087,"line_start":211,"line_end":211,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1645},{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":308256,"byte_end":308262,"line_start":219,"line_end":219,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1648},{"krate":0,"index":1649}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":308426,"byte_end":308432,"line_start":227,"line_end":227,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1652},{"krate":0,"index":1653}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":308602,"byte_end":308608,"line_start":235,"line_end":235,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1655}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":308761,"byte_end":308767,"line_start":241,"line_end":241,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1658}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":308916,"byte_end":308922,"line_start":247,"line_end":247,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1660}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":309073,"byte_end":309079,"line_start":253,"line_end":253,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1663}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":309225,"byte_end":309231,"line_start":259,"line_end":259,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1665}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":309372,"byte_end":309378,"line_start":265,"line_end":265,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1668}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":309492,"byte_end":309498,"line_start":271,"line_end":271,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1670},{"krate":0,"index":1673}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":310533,"byte_end":310539,"line_start":308,"line_end":308,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1676}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":310801,"byte_end":310807,"line_start":318,"line_end":318,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1680}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":311096,"byte_end":311109,"line_start":330,"line_end":330,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":311561,"byte_end":311567,"line_start":348,"line_end":348,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1691}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":311715,"byte_end":311721,"line_start":354,"line_end":354,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1695}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":326557,"byte_end":326567,"line_start":62,"line_end":62,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1796}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":321010,"byte_end":321015,"line_start":73,"line_end":73,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":321061,"byte_end":321073,"line_start":75,"line_end":75,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1890}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":321191,"byte_end":321203,"line_start":81,"line_end":81,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1893}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":321354,"byte_end":321366,"line_start":88,"line_end":88,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1896}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":321498,"byte_end":321510,"line_start":94,"line_end":94,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":321664,"byte_end":321676,"line_start":101,"line_end":101,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1902}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":332882,"byte_end":332896,"line_start":44,"line_end":44,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1923}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":333396,"byte_end":333410,"line_start":64,"line_end":64,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1926}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":333549,"byte_end":333563,"line_start":70,"line_end":70,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":333822,"byte_end":333828,"line_start":79,"line_end":79,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1933}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":338064,"byte_end":338069,"line_start":18,"line_end":18,"column_start":20,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":346412,"byte_end":346421,"line_start":219,"line_end":219,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1975}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":346558,"byte_end":346567,"line_start":226,"line_end":226,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1978}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":346715,"byte_end":346724,"line_start":233,"line_end":233,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1981}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":346846,"byte_end":346855,"line_start":239,"line_end":239,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1984}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":346989,"byte_end":346998,"line_start":246,"line_end":246,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1987}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":347130,"byte_end":347139,"line_start":253,"line_end":253,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1990}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":349826,"byte_end":349831,"line_start":26,"line_end":26,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2014},{"krate":0,"index":2016},{"krate":0,"index":2019}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":350970,"byte_end":350979,"line_start":64,"line_end":64,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2023}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":351525,"byte_end":351534,"line_start":84,"line_end":84,"column_start":57,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2029}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":351670,"byte_end":351679,"line_start":90,"line_end":90,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2033}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":352450,"byte_end":352459,"line_start":120,"line_end":120,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2049}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":356659,"byte_end":356667,"line_start":88,"line_end":88,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2090}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":356860,"byte_end":356868,"line_start":99,"line_end":99,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2093},{"krate":0,"index":2094},{"krate":0,"index":2097},{"krate":0,"index":2099},{"krate":0,"index":2100},{"krate":0,"index":2101},{"krate":0,"index":2104},{"krate":0,"index":2107},{"krate":0,"index":2109},{"krate":0,"index":2111}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":363530,"byte_end":363536,"line_start":43,"line_end":43,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2144},{"krate":0,"index":2146},{"krate":0,"index":2148},{"krate":0,"index":2150},{"krate":0,"index":2152},{"krate":0,"index":2153}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":367460,"byte_end":367472,"line_start":42,"line_end":42,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2173},{"krate":0,"index":2174}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":367811,"byte_end":367823,"line_start":54,"line_end":54,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2177}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":367964,"byte_end":367976,"line_start":60,"line_end":60,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2180}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":368225,"byte_end":368231,"line_start":69,"line_end":69,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2183}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/storage.rs","byte_start":380204,"byte_end":380217,"line_start":17,"line_end":17,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2322}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/storage.rs","byte_start":380306,"byte_end":380319,"line_start":23,"line_end":23,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2324},{"krate":0,"index":2325},{"krate":0,"index":2326},{"krate":0,"index":2327}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/storage.rs","byte_start":382383,"byte_end":382396,"line_start":70,"line_end":70,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2330}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":391458,"byte_end":391467,"line_start":30,"line_end":30,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2356},{"krate":0,"index":2357},{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2363},{"krate":0,"index":2364}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":392903,"byte_end":392912,"line_start":79,"line_end":79,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2366}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":404094,"byte_end":404108,"line_start":148,"line_end":148,"column_start":35,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":404285,"byte_end":404299,"line_start":152,"line_end":152,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2505},{"krate":0,"index":2506}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":404440,"byte_end":404454,"line_start":160,"line_end":160,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2514},{"krate":0,"index":2517},{"krate":0,"index":2519},{"krate":0,"index":2523},{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":2530},{"krate":0,"index":2531},{"krate":0,"index":2533}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":419420,"byte_end":419427,"line_start":84,"line_end":84,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3064}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":419555,"byte_end":419562,"line_start":92,"line_end":92,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3066},{"krate":0,"index":3068},{"krate":0,"index":3069},{"krate":0,"index":3071},{"krate":0,"index":3072},{"krate":0,"index":3073},{"krate":0,"index":3074},{"krate":0,"index":3075}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":430123,"byte_end":430134,"line_start":401,"line_end":401,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3103},{"krate":0,"index":3105},{"krate":0,"index":3107},{"krate":0,"index":3108}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":431614,"byte_end":431625,"line_start":445,"line_end":445,"column_start":53,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3112}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":432130,"byte_end":432141,"line_start":460,"line_end":460,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3115}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":433111,"byte_end":433124,"line_start":485,"line_end":485,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3117}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":433636,"byte_end":433647,"line_start":502,"line_end":502,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3119},{"krate":0,"index":3120}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":435332,"byte_end":435346,"line_start":550,"line_end":550,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3125},{"krate":0,"index":3126}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":5496,"byte_end":5500,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":6702,"byte_end":6706,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3216},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":6830,"byte_end":6834,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3216},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":6967,"byte_end":6971,"line_start":84,"line_end":84,"column_start":26,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3216},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":7235,"byte_end":7239,"line_start":98,"line_end":98,"column_start":28,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3216},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":7371,"byte_end":7377,"line_start":105,"line_end":105,"column_start":26,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":7590},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":7584,"byte_end":7590,"line_start":114,"line_end":114,"column_start":21,"column_end":27},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":7590},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":7672,"byte_end":7678,"line_start":120,"line_end":120,"column_start":22,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":5,"index":7590},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":7768,"byte_end":7771,"line_start":126,"line_end":126,"column_start":21,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":546},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":7880,"byte_end":7883,"line_start":132,"line_end":132,"column_start":29,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":546},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":8112,"byte_end":8125,"line_start":141,"line_end":141,"column_start":22,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3266},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":8225,"byte_end":8238,"line_start":147,"line_end":147,"column_start":24,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3266},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":8346,"byte_end":8349,"line_start":153,"line_end":153,"column_start":30,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":7050},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":8854,"byte_end":8867,"line_start":164,"line_end":164,"column_start":16,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3266},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":8972,"byte_end":8985,"line_start":172,"line_end":172,"column_start":6,"column_end":19},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/addresses.rs","byte_start":9083,"byte_end":9096,"line_start":178,"line_end":178,"column_start":23,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3266},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":23337,"byte_end":23343,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":25237,"byte_end":25243,"line_start":72,"line_end":72,"column_start":23,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3312},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":25377,"byte_end":25383,"line_start":78,"line_end":78,"column_start":22,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3312},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":25832,"byte_end":25838,"line_start":89,"line_end":89,"column_start":16,"column_end":22},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3312},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":26001,"byte_end":26007,"line_start":98,"line_end":98,"column_start":51,"column_end":57},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3312},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":26152,"byte_end":26158,"line_start":105,"line_end":105,"column_start":50,"column_end":56},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3312},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":26265,"byte_end":26271,"line_start":111,"line_end":111,"column_start":24,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3312},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":26359,"byte_end":26362,"line_start":117,"line_end":117,"column_start":23,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":5,"index":7050},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":26522,"byte_end":26528,"line_start":124,"line_end":124,"column_start":29,"column_end":35},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3312},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":26720,"byte_end":26723,"line_start":132,"line_end":132,"column_start":28,"column_end":31},"kind":{"Impl":{"id":32}},"from":{"krate":5,"index":7050},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":26895,"byte_end":26901,"line_start":140,"line_end":140,"column_start":27,"column_end":33},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3312},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":27247,"byte_end":27253,"line_start":156,"line_end":156,"column_start":20,"column_end":26},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3312},"to":{"krate":21,"index":2078}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":27497,"byte_end":27503,"line_start":166,"line_end":166,"column_start":32,"column_end":38},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3312},"to":{"krate":21,"index":1539}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/binary.rs","byte_start":27734,"byte_end":27747,"line_start":177,"line_end":177,"column_start":32,"column_end":45},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":148},"to":{"krate":21,"index":1623}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":38937,"byte_end":38941,"line_start":13,"line_end":13,"column_start":6,"column_end":10},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/coins.rs","byte_start":39140,"byte_end":39144,"line_start":22,"line_end":22,"column_start":23,"column_end":27},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3339},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":44842,"byte_end":44846,"line_start":36,"line_end":36,"column_start":35,"column_end":39},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3405},"to":{"krate":2,"index":3014}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":44911,"byte_end":44920,"line_start":38,"line_end":38,"column_start":54,"column_end":63},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/deps.rs","byte_start":45372,"byte_end":45379,"line_start":56,"line_end":56,"column_start":26,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","byte_start":52703,"byte_end":52721,"line_start":24,"line_end":24,"column_start":6,"column_end":24},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","byte_start":52985,"byte_end":53003,"line_start":34,"line_end":34,"column_start":40,"column_end":58},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3415},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/recover_pubkey_error.rs","byte_start":53960,"byte_end":53978,"line_start":62,"line_end":62,"column_start":28,"column_end":46},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3415},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":58023,"byte_end":58031,"line_start":107,"line_end":107,"column_start":6,"column_end":14},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":3436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":60807,"byte_end":60815,"line_start":201,"line_end":201,"column_start":30,"column_end":38},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3436},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":67227,"byte_end":67235,"line_start":406,"line_end":406,"column_start":36,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3436},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":67375,"byte_end":67383,"line_start":412,"line_end":412,"column_start":43,"column_end":51},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3436},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":67521,"byte_end":67529,"line_start":418,"line_end":418,"column_start":34,"column_end":42},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3436},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":67663,"byte_end":67671,"line_start":424,"line_end":424,"column_start":35,"column_end":43},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3436},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":67803,"byte_end":67811,"line_start":430,"line_end":430,"column_start":30,"column_end":38},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3436},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":67932,"byte_end":67940,"line_start":436,"line_end":436,"column_start":34,"column_end":42},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3436},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":68554,"byte_end":68571,"line_start":459,"line_end":459,"column_start":23,"column_end":40},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3482},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":68900,"byte_end":68913,"line_start":473,"line_end":473,"column_start":6,"column_end":19},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":69683,"byte_end":69706,"line_start":501,"line_end":501,"column_start":6,"column_end":29},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/std_error.rs","byte_start":70109,"byte_end":70126,"line_start":521,"line_end":521,"column_start":6,"column_end":23},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/system_error.rs","byte_start":79235,"byte_end":79246,"line_start":37,"line_end":37,"column_start":28,"column_end":39},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3806},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/system_error.rs","byte_start":79278,"byte_end":79289,"line_start":39,"line_end":39,"column_start":28,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":3806},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/verification_error.rs","byte_start":80944,"byte_end":80961,"line_start":31,"line_end":31,"column_start":6,"column_end":23},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/verification_error.rs","byte_start":81223,"byte_end":81240,"line_start":41,"line_end":41,"column_start":39,"column_end":56},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3818},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/errors/verification_error.rs","byte_start":82506,"byte_end":82523,"line_start":74,"line_end":74,"column_start":28,"column_end":45},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3818},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":86311,"byte_end":86321,"line_start":69,"line_end":69,"column_start":6,"column_end":16},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":4153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":87014,"byte_end":87024,"line_start":100,"line_end":100,"column_start":26,"column_end":36},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":4153},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":87163,"byte_end":87173,"line_start":106,"line_end":106,"column_start":32,"column_end":42},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":4153},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":87877,"byte_end":87887,"line_start":128,"line_end":128,"column_start":6,"column_end":16},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":4156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":89391,"byte_end":89406,"line_start":172,"line_end":172,"column_start":6,"column_end":21},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":4290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":89521,"byte_end":89536,"line_start":178,"line_end":178,"column_start":21,"column_end":36},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":4290},"to":{"krate":2,"index":2702}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":89653,"byte_end":89668,"line_start":184,"line_end":184,"column_start":14,"column_end":29},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":4290},"to":{"krate":2,"index":2691}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":90374,"byte_end":90383,"line_start":207,"line_end":207,"column_start":6,"column_end":15},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":4358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":91054,"byte_end":91072,"line_start":234,"line_end":234,"column_start":6,"column_end":24},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":4431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":91984,"byte_end":92001,"line_start":260,"line_end":260,"column_start":6,"column_end":23},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":92782,"byte_end":92792,"line_start":290,"line_end":290,"column_start":34,"column_end":44},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4156},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":93677,"byte_end":93697,"line_start":313,"line_end":313,"column_start":6,"column_end":26},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":4752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":94490,"byte_end":94500,"line_start":343,"line_end":343,"column_start":37,"column_end":47},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":4156},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":95376,"byte_end":95394,"line_start":363,"line_end":363,"column_start":6,"column_end":24},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":4883},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":95815,"byte_end":95825,"line_start":380,"line_end":380,"column_start":35,"column_end":45},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":4156},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":96269,"byte_end":96288,"line_start":396,"line_end":396,"column_start":6,"column_end":25},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":96628,"byte_end":96643,"line_start":410,"line_end":410,"column_start":6,"column_end":21},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":4949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":97042,"byte_end":97061,"line_start":426,"line_end":426,"column_start":6,"column_end":25},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":5013},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":98708,"byte_end":98724,"line_start":463,"line_end":463,"column_start":21,"column_end":37},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":5074},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":98901,"byte_end":98917,"line_start":473,"line_end":473,"column_start":9,"column_end":25},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":5074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":103996,"byte_end":104014,"line_start":608,"line_end":608,"column_start":21,"column_end":39},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":5151},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/ibc.rs","byte_start":104238,"byte_end":104256,"line_start":619,"line_end":619,"column_start":9,"column_end":27},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":5151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/iterator.rs","byte_start":113912,"byte_end":113917,"line_start":20,"line_end":20,"column_start":23,"column_end":28},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":5231},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":115479,"byte_end":115486,"line_start":26,"line_end":26,"column_start":6,"column_end":13},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":5241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":121779,"byte_end":121786,"line_start":187,"line_end":187,"column_start":28,"column_end":35},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":5241},"to":{"krate":0,"index":824}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":122511,"byte_end":122518,"line_start":213,"line_end":213,"column_start":18,"column_end":25},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":5241},"to":{"krate":2,"index":11872}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":124584,"byte_end":124591,"line_start":263,"line_end":263,"column_start":23,"column_end":30},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":5241},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":125202,"byte_end":125209,"line_start":281,"line_end":281,"column_start":19,"column_end":26},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":5241},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":125338,"byte_end":125345,"line_start":289,"line_end":289,"column_start":19,"column_end":26},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":5241},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":125474,"byte_end":125481,"line_start":297,"line_end":297,"column_start":19,"column_end":26},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":5241},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":126508,"byte_end":126515,"line_start":319,"line_end":319,"column_start":28,"column_end":35},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":126867,"byte_end":126874,"line_start":332,"line_end":332,"column_start":28,"column_end":35},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":5241},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":127009,"byte_end":127016,"line_start":340,"line_end":340,"column_start":28,"column_end":35},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":5241},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":127165,"byte_end":127172,"line_start":348,"line_end":348,"column_start":34,"column_end":41},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":5241},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":127306,"byte_end":127313,"line_start":355,"line_end":355,"column_start":20,"column_end":27},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":5241},"to":{"krate":21,"index":2078}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":127557,"byte_end":127564,"line_start":365,"line_end":365,"column_start":32,"column_end":39},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":5241},"to":{"krate":21,"index":1539}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal.rs","byte_start":127795,"byte_end":127809,"line_start":376,"line_end":376,"column_start":32,"column_end":46},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":687},"to":{"krate":21,"index":1623}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":157136,"byte_end":157146,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":5276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":163824,"byte_end":163834,"line_start":200,"line_end":200,"column_start":28,"column_end":38},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":5276},"to":{"krate":0,"index":824}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":164556,"byte_end":164566,"line_start":226,"line_end":226,"column_start":18,"column_end":28},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":5276},"to":{"krate":2,"index":11872}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":166632,"byte_end":166642,"line_start":276,"line_end":276,"column_start":23,"column_end":33},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":5276},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":167253,"byte_end":167263,"line_start":294,"line_end":294,"column_start":19,"column_end":29},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":5276},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":167389,"byte_end":167399,"line_start":302,"line_end":302,"column_start":19,"column_end":29},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":5276},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":167525,"byte_end":167535,"line_start":310,"line_end":310,"column_start":19,"column_end":29},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":5276},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":168577,"byte_end":168584,"line_start":332,"line_end":332,"column_start":31,"column_end":38},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":168942,"byte_end":168952,"line_start":345,"line_end":345,"column_start":28,"column_end":38},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":5276},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":169087,"byte_end":169097,"line_start":353,"line_end":353,"column_start":28,"column_end":38},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":5276},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":169243,"byte_end":169253,"line_start":361,"line_end":361,"column_start":34,"column_end":44},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":5276},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":169387,"byte_end":169397,"line_start":368,"line_end":368,"column_start":20,"column_end":30},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":5276},"to":{"krate":21,"index":2078}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":169641,"byte_end":169651,"line_start":378,"line_end":378,"column_start":32,"column_end":42},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":5276},"to":{"krate":21,"index":1539}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/decimal256.rs","byte_start":169888,"byte_end":169905,"line_start":389,"line_end":389,"column_start":32,"column_end":49},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":815},"to":{"krate":21,"index":1623}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/fraction.rs","byte_start":201272,"byte_end":201277,"line_start":4,"line_end":4,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":824}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/isqrt.rs","byte_start":201904,"byte_end":201905,"line_start":12,"line_end":12,"column_start":19,"column_end":20},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":853},"to":{"krate":0,"index":850}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/isqrt.rs","byte_start":202757,"byte_end":202763,"line_start":48,"line_end":48,"column_start":19,"column_end":25},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":6478},"to":{"krate":0,"index":855}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/isqrt.rs","byte_start":202785,"byte_end":202792,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":5311},"to":{"krate":0,"index":855}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/isqrt.rs","byte_start":202814,"byte_end":202821,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":5882},"to":{"krate":0,"index":855}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/isqrt.rs","byte_start":202843,"byte_end":202850,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":6453},"to":{"krate":0,"index":855}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":205451,"byte_end":205458,"line_start":34,"line_end":34,"column_start":6,"column_end":13},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":209019,"byte_end":209026,"line_start":155,"line_end":155,"column_start":23,"column_end":30},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":209118,"byte_end":209125,"line_start":161,"line_end":161,"column_start":21,"column_end":28},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":209210,"byte_end":209217,"line_start":167,"line_end":167,"column_start":20,"column_end":27},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":209308,"byte_end":209315,"line_start":173,"line_end":173,"column_start":20,"column_end":27},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":209406,"byte_end":209413,"line_start":179,"line_end":179,"column_start":20,"column_end":27},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":209503,"byte_end":209510,"line_start":185,"line_end":185,"column_start":19,"column_end":26},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":209607,"byte_end":209613,"line_start":191,"line_end":191,"column_start":27,"column_end":33},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":6478},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":209905,"byte_end":209912,"line_start":201,"line_end":201,"column_start":24,"column_end":31},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":210055,"byte_end":210062,"line_start":209,"line_end":209,"column_start":18,"column_end":25},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":11872}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":210340,"byte_end":210346,"line_start":220,"line_end":220,"column_start":24,"column_end":30},"kind":{"Impl":{"id":210}},"from":{"krate":5,"index":7590},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":210549,"byte_end":210556,"line_start":232,"line_end":232,"column_start":23,"column_end":30},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":210676,"byte_end":210683,"line_start":238,"line_end":238,"column_start":28,"column_end":35},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":210942,"byte_end":210949,"line_start":250,"line_end":250,"column_start":36,"column_end":43},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":211078,"byte_end":211085,"line_start":258,"line_end":258,"column_start":28,"column_end":35},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":211349,"byte_end":211356,"line_start":270,"line_end":270,"column_start":36,"column_end":43},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":211485,"byte_end":211492,"line_start":278,"line_end":278,"column_start":28,"column_end":35},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":211761,"byte_end":211768,"line_start":290,"line_end":290,"column_start":36,"column_end":43},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":211908,"byte_end":211915,"line_start":298,"line_end":298,"column_start":28,"column_end":35},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":212176,"byte_end":212183,"line_start":310,"line_end":310,"column_start":36,"column_end":43},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":212316,"byte_end":212323,"line_start":318,"line_end":318,"column_start":24,"column_end":31},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":3148}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":212583,"byte_end":212590,"line_start":330,"line_end":330,"column_start":32,"column_end":39},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":3148}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":212730,"byte_end":212737,"line_start":338,"line_end":338,"column_start":34,"column_end":41},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":212864,"byte_end":212871,"line_start":344,"line_end":344,"column_start":42,"column_end":49},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":212994,"byte_end":213001,"line_start":350,"line_end":350,"column_start":34,"column_end":41},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":3106}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":213128,"byte_end":213135,"line_start":356,"line_end":356,"column_start":42,"column_end":49},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":3106}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":213258,"byte_end":213265,"line_start":362,"line_end":362,"column_start":34,"column_end":41},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":213389,"byte_end":213396,"line_start":368,"line_end":368,"column_start":42,"column_end":49},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":213519,"byte_end":213526,"line_start":374,"line_end":374,"column_start":34,"column_end":41},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":213650,"byte_end":213657,"line_start":380,"line_end":380,"column_start":42,"column_end":49},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":213776,"byte_end":213783,"line_start":386,"line_end":386,"column_start":30,"column_end":37},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":3171}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":213903,"byte_end":213910,"line_start":392,"line_end":392,"column_start":38,"column_end":45},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":3171}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":214002,"byte_end":214009,"line_start":398,"line_end":398,"column_start":6,"column_end":13},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":5311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":215071,"byte_end":215078,"line_start":434,"line_end":434,"column_start":20,"column_end":27},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":5311},"to":{"krate":21,"index":2078}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":215340,"byte_end":215347,"line_start":444,"line_end":444,"column_start":32,"column_end":39},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":5311},"to":{"krate":21,"index":1539}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":215639,"byte_end":215653,"line_start":456,"line_end":456,"column_start":32,"column_end":46},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":1062},"to":{"krate":21,"index":1623}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":216110,"byte_end":216117,"line_start":474,"line_end":474,"column_start":23,"column_end":30},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint128.rs","byte_start":216268,"byte_end":216275,"line_start":480,"line_end":480,"column_start":31,"column_end":38},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":226993,"byte_end":227000,"line_start":50,"line_end":50,"column_start":6,"column_end":13},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":5882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":234290,"byte_end":234297,"line_start":286,"line_end":286,"column_start":24,"column_end":31},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":234393,"byte_end":234400,"line_start":292,"line_end":292,"column_start":23,"column_end":30},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":234492,"byte_end":234499,"line_start":298,"line_end":298,"column_start":21,"column_end":28},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":234591,"byte_end":234598,"line_start":304,"line_end":304,"column_start":20,"column_end":27},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":234689,"byte_end":234696,"line_start":310,"line_end":310,"column_start":20,"column_end":27},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":234787,"byte_end":234794,"line_start":316,"line_end":316,"column_start":20,"column_end":27},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":234884,"byte_end":234891,"line_start":322,"line_end":322,"column_start":19,"column_end":26},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":234988,"byte_end":234995,"line_start":328,"line_end":328,"column_start":27,"column_end":34},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":235289,"byte_end":235296,"line_start":338,"line_end":338,"column_start":24,"column_end":31},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":235439,"byte_end":235446,"line_start":346,"line_end":346,"column_start":18,"column_end":25},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":11872}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":235851,"byte_end":235857,"line_start":361,"line_end":361,"column_start":24,"column_end":30},"kind":{"Impl":{"id":251}},"from":{"krate":5,"index":7590},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":235961,"byte_end":235968,"line_start":367,"line_end":367,"column_start":23,"column_end":30},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":236254,"byte_end":236261,"line_start":377,"line_end":377,"column_start":28,"column_end":35},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":236507,"byte_end":236514,"line_start":389,"line_end":389,"column_start":36,"column_end":43},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":236643,"byte_end":236650,"line_start":397,"line_end":397,"column_start":28,"column_end":35},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":236901,"byte_end":236908,"line_start":409,"line_end":409,"column_start":36,"column_end":43},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":237037,"byte_end":237044,"line_start":417,"line_end":417,"column_start":28,"column_end":35},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":237295,"byte_end":237302,"line_start":429,"line_end":429,"column_start":36,"column_end":43},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":237439,"byte_end":237446,"line_start":437,"line_end":437,"column_start":28,"column_end":35},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":237705,"byte_end":237712,"line_start":449,"line_end":449,"column_start":36,"column_end":43},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":237848,"byte_end":237855,"line_start":457,"line_end":457,"column_start":24,"column_end":31},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":3148}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":238180,"byte_end":238187,"line_start":470,"line_end":470,"column_start":32,"column_end":39},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":3148}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":238319,"byte_end":238326,"line_start":478,"line_end":478,"column_start":24,"column_end":31},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":3142}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":238650,"byte_end":238657,"line_start":491,"line_end":491,"column_start":32,"column_end":39},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":3142}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":238799,"byte_end":238806,"line_start":499,"line_end":499,"column_start":34,"column_end":41},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":238933,"byte_end":238940,"line_start":505,"line_end":505,"column_start":42,"column_end":49},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":239063,"byte_end":239070,"line_start":511,"line_end":511,"column_start":34,"column_end":41},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":3106}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":239197,"byte_end":239204,"line_start":517,"line_end":517,"column_start":42,"column_end":49},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":3106}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":239327,"byte_end":239334,"line_start":523,"line_end":523,"column_start":34,"column_end":41},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":239458,"byte_end":239465,"line_start":529,"line_end":529,"column_start":42,"column_end":49},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":239588,"byte_end":239595,"line_start":535,"line_end":535,"column_start":34,"column_end":41},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":239719,"byte_end":239726,"line_start":541,"line_end":541,"column_start":42,"column_end":49},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":239845,"byte_end":239852,"line_start":547,"line_end":547,"column_start":30,"column_end":37},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":3171}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":239987,"byte_end":239994,"line_start":553,"line_end":553,"column_start":38,"column_end":45},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":3171}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":240102,"byte_end":240109,"line_start":559,"line_end":559,"column_start":6,"column_end":13},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":5882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":241258,"byte_end":241265,"line_start":598,"line_end":598,"column_start":20,"column_end":27},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":5882},"to":{"krate":21,"index":2078}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":241527,"byte_end":241534,"line_start":608,"line_end":608,"column_start":32,"column_end":39},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":5882},"to":{"krate":21,"index":1539}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":241826,"byte_end":241840,"line_start":620,"line_end":620,"column_start":32,"column_end":46},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":1298},"to":{"krate":21,"index":1623}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":242230,"byte_end":242237,"line_start":635,"line_end":635,"column_start":23,"column_end":30},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint256.rs","byte_start":242388,"byte_end":242395,"line_start":641,"line_end":641,"column_start":31,"column_end":38},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":270722,"byte_end":270729,"line_start":54,"line_end":54,"column_start":6,"column_end":13},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":6453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":280639,"byte_end":280646,"line_start":366,"line_end":366,"column_start":24,"column_end":31},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":280834,"byte_end":280841,"line_start":374,"line_end":374,"column_start":24,"column_end":31},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":280937,"byte_end":280944,"line_start":380,"line_end":380,"column_start":23,"column_end":30},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":281036,"byte_end":281043,"line_start":386,"line_end":386,"column_start":21,"column_end":28},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":281135,"byte_end":281142,"line_start":392,"line_end":392,"column_start":20,"column_end":27},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":281233,"byte_end":281240,"line_start":398,"line_end":398,"column_start":20,"column_end":27},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":281331,"byte_end":281338,"line_start":404,"line_end":404,"column_start":20,"column_end":27},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":281428,"byte_end":281435,"line_start":410,"line_end":410,"column_start":19,"column_end":26},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":281532,"byte_end":281539,"line_start":416,"line_end":416,"column_start":27,"column_end":34},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":5882},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":282056,"byte_end":282063,"line_start":435,"line_end":435,"column_start":27,"column_end":34},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":5311},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":282357,"byte_end":282364,"line_start":445,"line_end":445,"column_start":24,"column_end":31},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":282507,"byte_end":282514,"line_start":453,"line_end":453,"column_start":18,"column_end":25},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":11872}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":282793,"byte_end":282799,"line_start":464,"line_end":464,"column_start":24,"column_end":30},"kind":{"Impl":{"id":295}},"from":{"krate":5,"index":7590},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":282903,"byte_end":282910,"line_start":470,"line_end":470,"column_start":23,"column_end":30},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":283196,"byte_end":283203,"line_start":480,"line_end":480,"column_start":28,"column_end":35},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":283365,"byte_end":283372,"line_start":488,"line_end":488,"column_start":36,"column_end":43},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":283533,"byte_end":283540,"line_start":496,"line_end":496,"column_start":28,"column_end":35},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":283702,"byte_end":283709,"line_start":504,"line_end":504,"column_start":36,"column_end":43},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":283870,"byte_end":283877,"line_start":512,"line_end":512,"column_start":28,"column_end":35},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":284044,"byte_end":284051,"line_start":520,"line_end":520,"column_start":36,"column_end":43},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":284217,"byte_end":284224,"line_start":528,"line_end":528,"column_start":28,"column_end":35},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":284391,"byte_end":284398,"line_start":536,"line_end":536,"column_start":36,"column_end":43},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":284560,"byte_end":284567,"line_start":544,"line_end":544,"column_start":24,"column_end":31},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":3148}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":284892,"byte_end":284899,"line_start":557,"line_end":557,"column_start":32,"column_end":39},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":3148}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":285054,"byte_end":285061,"line_start":565,"line_end":565,"column_start":34,"column_end":41},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":285212,"byte_end":285219,"line_start":571,"line_end":571,"column_start":42,"column_end":49},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":285366,"byte_end":285373,"line_start":577,"line_end":577,"column_start":34,"column_end":41},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":3106}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":285524,"byte_end":285531,"line_start":583,"line_end":583,"column_start":42,"column_end":49},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":3106}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":285678,"byte_end":285685,"line_start":589,"line_end":589,"column_start":34,"column_end":41},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":285833,"byte_end":285840,"line_start":595,"line_end":595,"column_start":42,"column_end":49},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":285987,"byte_end":285994,"line_start":601,"line_end":601,"column_start":34,"column_end":41},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":286142,"byte_end":286149,"line_start":607,"line_end":607,"column_start":42,"column_end":49},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":286292,"byte_end":286299,"line_start":613,"line_end":613,"column_start":30,"column_end":37},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":3171}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":286434,"byte_end":286441,"line_start":619,"line_end":619,"column_start":38,"column_end":45},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":3171}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":286563,"byte_end":286570,"line_start":625,"line_end":625,"column_start":20,"column_end":27},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":6453},"to":{"krate":21,"index":2078}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":286832,"byte_end":286839,"line_start":635,"line_end":635,"column_start":32,"column_end":39},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":6453},"to":{"krate":21,"index":1539}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":287131,"byte_end":287145,"line_start":647,"line_end":647,"column_start":32,"column_end":46},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":1521},"to":{"krate":21,"index":1623}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":287535,"byte_end":287542,"line_start":662,"line_end":662,"column_start":23,"column_end":30},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint512.rs","byte_start":287693,"byte_end":287700,"line_start":668,"line_end":668,"column_start":31,"column_end":38},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":6453},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":303522,"byte_end":303528,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":6478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":306558,"byte_end":306564,"line_start":134,"line_end":134,"column_start":20,"column_end":26},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":6478},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":306647,"byte_end":306653,"line_start":140,"line_end":140,"column_start":20,"column_end":26},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":6478},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":306743,"byte_end":306749,"line_start":146,"line_end":146,"column_start":20,"column_end":26},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":6478},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":306838,"byte_end":306844,"line_start":152,"line_end":152,"column_start":19,"column_end":25},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":6478},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":306937,"byte_end":306943,"line_start":158,"line_end":158,"column_start":24,"column_end":30},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":6478},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":307225,"byte_end":307231,"line_start":169,"line_end":169,"column_start":23,"column_end":29},"kind":{"Impl":{"id":329}},"from":{"krate":5,"index":7590},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":307430,"byte_end":307436,"line_start":181,"line_end":181,"column_start":23,"column_end":29},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":6478},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":307555,"byte_end":307561,"line_start":187,"line_end":187,"column_start":27,"column_end":33},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":6478},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":307729,"byte_end":307735,"line_start":195,"line_end":195,"column_start":35,"column_end":41},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":6478},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":307901,"byte_end":307907,"line_start":203,"line_end":203,"column_start":27,"column_end":33},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":6478},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":308081,"byte_end":308087,"line_start":211,"line_end":211,"column_start":35,"column_end":41},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":6478},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":308256,"byte_end":308262,"line_start":219,"line_end":219,"column_start":24,"column_end":30},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":6478},"to":{"krate":2,"index":3148}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":308426,"byte_end":308432,"line_start":227,"line_end":227,"column_start":32,"column_end":38},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":6478},"to":{"krate":2,"index":3148}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":308602,"byte_end":308608,"line_start":235,"line_end":235,"column_start":33,"column_end":39},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":6478},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":308761,"byte_end":308767,"line_start":241,"line_end":241,"column_start":41,"column_end":47},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":6478},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":308916,"byte_end":308922,"line_start":247,"line_end":247,"column_start":33,"column_end":39},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":6478},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":309073,"byte_end":309079,"line_start":253,"line_end":253,"column_start":41,"column_end":47},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":6478},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":309225,"byte_end":309231,"line_start":259,"line_end":259,"column_start":30,"column_end":36},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":6478},"to":{"krate":2,"index":3171}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":309372,"byte_end":309378,"line_start":265,"line_end":265,"column_start":38,"column_end":44},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":6478},"to":{"krate":2,"index":3171}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":309492,"byte_end":309498,"line_start":271,"line_end":271,"column_start":6,"column_end":12},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":6478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":310533,"byte_end":310539,"line_start":308,"line_end":308,"column_start":20,"column_end":26},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":6478},"to":{"krate":21,"index":2078}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":310801,"byte_end":310807,"line_start":318,"line_end":318,"column_start":32,"column_end":38},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":6478},"to":{"krate":21,"index":1539}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":311096,"byte_end":311109,"line_start":330,"line_end":330,"column_start":32,"column_end":45},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":1682},"to":{"krate":21,"index":1623}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":311561,"byte_end":311567,"line_start":348,"line_end":348,"column_start":22,"column_end":28},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":6478},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/math/uint64.rs","byte_start":311715,"byte_end":311721,"line_start":354,"line_end":354,"column_start":30,"column_end":36},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":6478},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/staking.rs","byte_start":326557,"byte_end":326567,"line_start":62,"line_end":62,"column_start":31,"column_end":41},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":7472},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320815,"byte_end":320824,"line_start":69,"line_end":69,"column_start":24,"column_end":33},"kind":"SuperTrait","from":{"krate":21,"index":2078},"to":{"krate":0,"index":1886}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":320827,"byte_end":320832,"line_start":69,"line_end":69,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":2625},"to":{"krate":0,"index":1886}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":321010,"byte_end":321015,"line_start":73,"line_end":73,"column_start":22,"column_end":27},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":9399},"to":{"krate":0,"index":1886}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":321061,"byte_end":321073,"line_start":75,"line_end":75,"column_start":42,"column_end":54},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":8285},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":321191,"byte_end":321203,"line_start":81,"line_end":81,"column_start":34,"column_end":46},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":8285},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":321354,"byte_end":321366,"line_start":88,"line_end":88,"column_start":45,"column_end":57},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":8285},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":321498,"byte_end":321510,"line_start":94,"line_end":94,"column_start":42,"column_end":54},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":8285},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/query/mod.rs","byte_start":321664,"byte_end":321676,"line_start":101,"line_end":101,"column_start":41,"column_end":53},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":8285},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":332882,"byte_end":332896,"line_start":44,"line_end":44,"column_start":9,"column_end":23},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":8371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":333396,"byte_end":333410,"line_start":64,"line_end":64,"column_start":21,"column_end":35},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":8371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":333549,"byte_end":333563,"line_start":70,"line_end":70,"column_start":45,"column_end":59},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":8371},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/contract_result.rs","byte_start":333822,"byte_end":333828,"line_start":79,"line_end":79,"column_start":37,"column_end":43},"kind":{"Impl":{"id":423}},"from":{"krate":2,"index":43490},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":337985,"byte_end":337994,"line_start":16,"line_end":16,"column_start":22,"column_end":31},"kind":"SuperTrait","from":{"krate":21,"index":2078},"to":{"krate":0,"index":1966}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":337997,"byte_end":338002,"line_start":16,"line_end":16,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2625},"to":{"krate":0,"index":1966}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":338010,"byte_end":338015,"line_start":16,"line_end":16,"column_start":47,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":9345},"to":{"krate":0,"index":1966}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":338018,"byte_end":338027,"line_start":16,"line_end":16,"column_start":55,"column_end":64},"kind":"SuperTrait","from":{"krate":2,"index":2655},"to":{"krate":0,"index":1966}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":338030,"byte_end":338040,"line_start":16,"line_end":16,"column_start":67,"column_end":77},"kind":"SuperTrait","from":{"krate":18,"index":623},"to":{"krate":0,"index":1966}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":338064,"byte_end":338069,"line_start":18,"line_end":18,"column_start":20,"column_end":25},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":9399},"to":{"krate":0,"index":1966}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":346412,"byte_end":346421,"line_start":219,"line_end":219,"column_start":27,"column_end":36},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":8495},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":346558,"byte_end":346567,"line_start":226,"line_end":226,"column_start":30,"column_end":39},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":8495},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":346715,"byte_end":346724,"line_start":233,"line_end":233,"column_start":35,"column_end":44},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":8495},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":346846,"byte_end":346855,"line_start":239,"line_end":239,"column_start":27,"column_end":36},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":8495},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":346989,"byte_end":346998,"line_start":246,"line_end":246,"column_start":26,"column_end":35},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":8495},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/cosmos_msg.rs","byte_start":347130,"byte_end":347139,"line_start":253,"line_end":253,"column_start":26,"column_end":35},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":8495},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":349826,"byte_end":349831,"line_start":26,"line_end":26,"column_start":6,"column_end":11},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":9456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":350970,"byte_end":350979,"line_start":64,"line_end":64,"column_start":6,"column_end":15},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":9520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":351525,"byte_end":351534,"line_start":84,"line_end":84,"column_start":57,"column_end":66},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":9520},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":351670,"byte_end":351679,"line_start":90,"line_end":90,"column_start":58,"column_end":67},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":9520},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/events.rs","byte_start":352450,"byte_end":352459,"line_start":120,"line_end":120,"column_start":32,"column_end":41},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":9520},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":356659,"byte_end":356667,"line_start":88,"line_end":88,"column_start":21,"column_end":29},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":9586},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/response.rs","byte_start":356860,"byte_end":356868,"line_start":99,"line_end":99,"column_start":9,"column_end":17},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":9586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/submessages.rs","byte_start":363530,"byte_end":363536,"line_start":43,"line_end":43,"column_start":9,"column_end":15},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":9735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":367460,"byte_end":367472,"line_start":42,"line_end":42,"column_start":9,"column_end":21},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":10009},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":367811,"byte_end":367823,"line_start":54,"line_end":54,"column_start":21,"column_end":33},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":10009},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":367964,"byte_end":367976,"line_start":60,"line_end":60,"column_start":42,"column_end":54},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":10009},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/results/system_result.rs","byte_start":368225,"byte_end":368231,"line_start":69,"line_end":69,"column_start":35,"column_end":41},"kind":{"Impl":{"id":490}},"from":{"krate":2,"index":43490},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/storage.rs","byte_start":380204,"byte_end":380217,"line_start":17,"line_end":17,"column_start":6,"column_end":19},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":10017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/storage.rs","byte_start":380306,"byte_end":380319,"line_start":23,"line_end":23,"column_start":18,"column_end":31},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":10017},"to":{"krate":0,"index":2481}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/storage.rs","byte_start":382383,"byte_end":382396,"line_start":70,"line_end":70,"column_start":21,"column_end":34},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":10017},"to":{"krate":2,"index":9345}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":391458,"byte_end":391467,"line_start":30,"line_end":30,"column_start":6,"column_end":15},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":10021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/timestamp.rs","byte_start":392903,"byte_end":392912,"line_start":79,"line_end":79,"column_start":23,"column_end":32},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":10021},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":404094,"byte_end":404108,"line_start":148,"line_end":148,"column_start":35,"column_end":49},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":10071},"to":{"krate":2,"index":3014}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":404285,"byte_end":404299,"line_start":152,"line_end":152,"column_start":36,"column_end":50},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":10071},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/traits.rs","byte_start":404440,"byte_end":404454,"line_start":160,"line_end":160,"column_start":26,"column_end":40},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":10071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":419420,"byte_end":419427,"line_start":84,"line_end":84,"column_start":18,"column_end":25},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":10380},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":419555,"byte_end":419562,"line_start":92,"line_end":92,"column_start":14,"column_end":21},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":10380},"to":{"krate":0,"index":2487}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":430123,"byte_end":430134,"line_start":401,"line_end":401,"column_start":27,"column_end":38},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":3094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":431614,"byte_end":431625,"line_start":445,"line_end":445,"column_start":53,"column_end":64},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":3094},"to":{"krate":0,"index":2497}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":432130,"byte_end":432141,"line_start":460,"line_end":460,"column_start":41,"column_end":52},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":3094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":433111,"byte_end":433124,"line_start":485,"line_end":485,"column_start":6,"column_end":19},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":10385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":433636,"byte_end":433647,"line_start":502,"line_end":502,"column_start":6,"column_end":17},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":10390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta/src/mock.rs","byte_start":435332,"byte_end":435346,"line_start":550,"line_end":550,"column_start":6,"column_end":20},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":10396},"to":{"krate":4294967295,"index":4294967295}}]}