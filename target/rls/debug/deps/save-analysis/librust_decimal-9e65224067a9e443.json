{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0","program":"/Users/stevenli/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","rust_decimal","--edition=2018","/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"serde\"","--cfg","feature=\"std\"","-C","metadata=9e65224067a9e443","-C","extra-filename=-9e65224067a9e443","--out-dir","/Users/stevenli/Downloads/cw-plus-0.10.2/target/rls/debug/deps","-L","dependency=/Users/stevenli/Downloads/cw-plus-0.10.2/target/rls/debug/deps","--extern","arrayvec=/Users/stevenli/Downloads/cw-plus-0.10.2/target/rls/debug/deps/libarrayvec-236f9eba07336171.rmeta","--extern","num_traits=/Users/stevenli/Downloads/cw-plus-0.10.2/target/rls/debug/deps/libnum_traits-294bab8bcf435d5a.rmeta","--extern","serde=/Users/stevenli/Downloads/cw-plus-0.10.2/target/rls/debug/deps/libserde-11fcde9e60472d7d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/stevenli/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/stevenli/Downloads/cw-plus-0.10.2/target/rls/debug/deps/librust_decimal-9e65224067a9e443.rmeta"},"prelude":{"crate_id":{"name":"rust_decimal","disambiguator":[242660811780851213,0]},"crate_root":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src","external_crates":[{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[13397687447365136237,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","num":2,"id":{"name":"core","disambiguator":[12597453921046050400,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10337807943449432441,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15255728868105367331,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3332034203136216330,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4768259444744658338,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14770965832479625303,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9296703136347489161,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2508387316696144016,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11194842143487016821,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[677485867405505285,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11695788395232495118,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[1893355350187676699,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[4235596681029805678,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[4025428084964080381,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[9641156662954966841,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3359352200029954805,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","num":18,"id":{"name":"num_traits","disambiguator":[18394391415843874508,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/str.rs","num":19,"id":{"name":"arrayvec","disambiguator":[16501503586576468942,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/serde.rs","num":20,"id":{"name":"serde","disambiguator":[16063605659652312967,0]}},{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/serde.rs","num":21,"id":{"name":"serde_derive","disambiguator":[12556891448448635906,0]}}],"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":0,"byte_end":7250,"line_start":1,"line_end":202,"column_start":1,"column_end":53}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":884},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":6568,"byte_end":6575,"line_start":182,"line_end":182,"column_start":19,"column_end":26},"alias_span":null,"name":"Decimal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":892},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":6577,"byte_end":6593,"line_start":182,"line_end":182,"column_start":28,"column_end":44},"alias_span":null,"name":"RoundingStrategy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1007},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":6611,"byte_end":6616,"line_start":183,"line_end":183,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":884},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":6877,"byte_end":6884,"line_start":191,"line_end":191,"column_start":21,"column_end":28},"alias_span":null,"name":"Decimal","value":"","parent":{"krate":0,"index":847}},{"kind":"Use","ref_id":{"krate":0,"index":892},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":6886,"byte_end":6902,"line_start":191,"line_end":191,"column_start":30,"column_end":46},"alias_span":null,"name":"RoundingStrategy","value":"","parent":{"krate":0,"index":847}},{"kind":"Use","ref_id":{"krate":2,"index":11872},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":6928,"byte_end":6935,"line_start":192,"line_end":192,"column_start":24,"column_end":31},"alias_span":null,"name":"FromStr","value":"","parent":{"krate":0,"index":847}},{"kind":"Use","ref_id":{"krate":18,"index":316},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":6962,"byte_end":6975,"line_start":193,"line_end":193,"column_start":26,"column_end":39},"alias_span":null,"name":"FromPrimitive","value":"","parent":{"krate":0,"index":847}},{"kind":"Use","ref_id":{"krate":18,"index":455},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":6977,"byte_end":6980,"line_start":193,"line_end":193,"column_start":41,"column_end":44},"alias_span":null,"name":"One","value":"","parent":{"krate":0,"index":847}},{"kind":"Use","ref_id":{"krate":18,"index":290},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":6982,"byte_end":6993,"line_start":193,"line_end":193,"column_start":46,"column_end":57},"alias_span":null,"name":"ToPrimitive","value":"","parent":{"krate":0,"index":847}},{"kind":"Use","ref_id":{"krate":18,"index":445},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":6995,"byte_end":6999,"line_start":193,"line_end":193,"column_start":59,"column_end":63},"alias_span":null,"name":"Zero","value":"","parent":{"krate":0,"index":847}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":0,"byte_end":7250,"line_start":1,"line_end":202,"column_start":1,"column_end":53},"name":"","qualname":"::","value":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":23},{"krate":0,"index":425},{"krate":0,"index":441},{"krate":0,"index":733},{"krate":0,"index":789},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":841},{"krate":0,"index":844},{"krate":0,"index":847},{"krate":0,"index":871}],"decl_id":null,"docs":"\n A Decimal implementation written in pure Rust suitable\n for financial calculations that require significant integral\n and fractional digits with no round-off errors.","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":0,"byte_end":3,"line_start":1,"line_end":1,"column_start":1,"column_end":4}},{"value":"/ A Decimal implementation written in pure Rust suitable","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4,"byte_end":62,"line_start":2,"line_end":2,"column_start":1,"column_end":59}},{"value":"/ for financial calculations that require significant integral","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":63,"byte_end":127,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ and fractional digits with no round-off errors.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":128,"byte_end":179,"line_start":4,"line_end":4,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":180,"byte_end":183,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The binary representation consists of a 96 bit integer number,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":184,"byte_end":250,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"/ a scaling factor used to specify the decimal fraction and a 1","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":251,"byte_end":316,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"/ bit sign. Because of this representation, trailing zeros are","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":317,"byte_end":381,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/ preserved and may be exposed when in string form. These can be","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":382,"byte_end":448,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/ truncated using the `normalize` or `round_dp` functions.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":449,"byte_end":509,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":510,"byte_end":513,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ## Getting started","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":514,"byte_end":536,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":537,"byte_end":540,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ To get started, add `rust_decimal` and optionally `rust_decimal_macros` to your `Cargo.toml`:","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":541,"byte_end":638,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":639,"byte_end":642,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":643,"byte_end":654,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":655,"byte_end":673,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/ rust_decimal = \"1.16\"","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":674,"byte_end":699,"line_start":18,"line_end":18,"column_start":1,"column_end":26}},{"value":"/ rust_decimal_macros = \"1.16\"","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":700,"byte_end":732,"line_start":19,"line_end":19,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":733,"byte_end":740,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":741,"byte_end":744,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":745,"byte_end":757,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":758,"byte_end":761,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Decimal numbers can be created in a few distinct ways. The easiest and most optimal","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":762,"byte_end":849,"line_start":24,"line_end":24,"column_start":1,"column_end":88}},{"value":"/ method of creating a Decimal is to use the procedural macro within the","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":850,"byte_end":924,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ `rust_decimal_macros` crate:","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":925,"byte_end":957,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":958,"byte_end":961,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":962,"byte_end":975,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/ // Procedural macros need importing directly","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":976,"byte_end":1024,"line_start":29,"line_end":29,"column_start":1,"column_end":49}},{"value":"/ use rust_decimal_macros::dec;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1025,"byte_end":1058,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1059,"byte_end":1062,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let number = dec!(-1.23);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1063,"byte_end":1092,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(\"-1.23\", number.to_string());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1093,"byte_end":1137,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1138,"byte_end":1145,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1146,"byte_end":1149,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Alternatively you can also use one of the Decimal number convenience functions:","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1150,"byte_end":1233,"line_start":36,"line_end":36,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1234,"byte_end":1237,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1238,"byte_end":1249,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"/ // Using the prelude can help importing trait based functions (e.g. core::str::FromStr).","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1250,"byte_end":1342,"line_start":39,"line_end":39,"column_start":1,"column_end":93}},{"value":"/ use rust_decimal::prelude::*;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1343,"byte_end":1376,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1377,"byte_end":1380,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Using an integer followed by the decimal points","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1381,"byte_end":1435,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"/ let scaled = Decimal::new(202, 2);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1436,"byte_end":1474,"line_start":43,"line_end":43,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(\"2.02\", scaled.to_string());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1475,"byte_end":1518,"line_start":44,"line_end":44,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1519,"byte_end":1522,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // From a string representation","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1523,"byte_end":1558,"line_start":46,"line_end":46,"column_start":1,"column_end":36}},{"value":"/ let from_string = Decimal::from_str(\"2.02\").unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1559,"byte_end":1616,"line_start":47,"line_end":47,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(\"2.02\", from_string.to_string());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1617,"byte_end":1665,"line_start":48,"line_end":48,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1666,"byte_end":1669,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // From a string representation in a different base","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1670,"byte_end":1725,"line_start":50,"line_end":50,"column_start":1,"column_end":56}},{"value":"/ let from_string_base16 = Decimal::from_str_radix(\"ffff\", 16).unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1726,"byte_end":1800,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(\"65535\", from_string_base16.to_string());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1801,"byte_end":1857,"line_start":52,"line_end":52,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1858,"byte_end":1861,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ // Using the `Into` trait","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1862,"byte_end":1891,"line_start":54,"line_end":54,"column_start":1,"column_end":30}},{"value":"/ let my_int: Decimal = 3i32.into();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1892,"byte_end":1930,"line_start":55,"line_end":55,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(\"3\", my_int.to_string());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1931,"byte_end":1971,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1972,"byte_end":1975,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // Using the raw decimal representation","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":1976,"byte_end":2019,"line_start":58,"line_end":58,"column_start":1,"column_end":44}},{"value":"/ let pi = Decimal::from_parts(1102470952, 185874565, 1703060790, false, 28);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2020,"byte_end":2099,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(\"3.1415926535897932384626433832\", pi.to_string());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2100,"byte_end":2165,"line_start":60,"line_end":60,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2166,"byte_end":2173,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2174,"byte_end":2177,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Once you have instantiated your `Decimal` number you can perform calculations with it just like any other number:","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2178,"byte_end":2295,"line_start":63,"line_end":63,"column_start":1,"column_end":118}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2296,"byte_end":2299,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2300,"byte_end":2311,"line_start":65,"line_end":65,"column_start":1,"column_end":12}},{"value":"/ use rust_decimal::prelude::*;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2312,"byte_end":2345,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2346,"byte_end":2349,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ let amount = Decimal::from_str(\"25.12\").unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2350,"byte_end":2403,"line_start":68,"line_end":68,"column_start":1,"column_end":54}},{"value":"/ let tax = Decimal::from_str(\"0.085\").unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2404,"byte_end":2454,"line_start":69,"line_end":69,"column_start":1,"column_end":51}},{"value":"/ let total = amount + (amount * tax).round_dp(2);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2455,"byte_end":2507,"line_start":70,"line_end":70,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(total.to_string(), \"27.26\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2508,"byte_end":2551,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2552,"byte_end":2559,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2560,"byte_end":2563,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ## Features","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2564,"byte_end":2579,"line_start":74,"line_end":74,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2580,"byte_end":2583,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ * [c-repr](#c-repr)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2584,"byte_end":2607,"line_start":76,"line_end":76,"column_start":1,"column_end":24}},{"value":"/ * [db-postgres](#db-postgres)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2608,"byte_end":2641,"line_start":77,"line_end":77,"column_start":1,"column_end":34}},{"value":"/ * [db-tokio-postgres](#db-tokio-postgres)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2642,"byte_end":2687,"line_start":78,"line_end":78,"column_start":1,"column_end":46}},{"value":"/ * [db-diesel-postgres](#db-diesel-postgres)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2688,"byte_end":2735,"line_start":79,"line_end":79,"column_start":1,"column_end":48}},{"value":"/ * [legacy-ops](#legacy-ops)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2736,"byte_end":2767,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/ * [maths](#maths)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2768,"byte_end":2789,"line_start":81,"line_end":81,"column_start":1,"column_end":22}},{"value":"/ * [rust-fuzz](#rust-fuzz)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2790,"byte_end":2819,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ * [serde-float](#serde-float)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2820,"byte_end":2853,"line_start":83,"line_end":83,"column_start":1,"column_end":34}},{"value":"/ * [serde-str](#serde-str)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2854,"byte_end":2883,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/ * [serde-arbitrary-precision](#serde-arbitrary-precision)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2884,"byte_end":2945,"line_start":85,"line_end":85,"column_start":1,"column_end":62}},{"value":"/ * [std](#std)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2946,"byte_end":2963,"line_start":86,"line_end":86,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2964,"byte_end":2967,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ### `c-repr`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2968,"byte_end":2984,"line_start":88,"line_end":88,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2985,"byte_end":2988,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Forces `Decimal` to use `[repr(C)]`. The corresponding target layout is 128 bit aligned.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":2989,"byte_end":3081,"line_start":90,"line_end":90,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":3082,"byte_end":3085,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ### `db-postgres`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":3086,"byte_end":3107,"line_start":92,"line_end":92,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":3108,"byte_end":3111,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ This feature enables a PostgreSQL communication module. It allows for reading and writing the `Decimal`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":3112,"byte_end":3219,"line_start":94,"line_end":94,"column_start":1,"column_end":108}},{"value":"/ type by transparently serializing/deserializing into the `NUMERIC` data type within PostgreSQL.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":3220,"byte_end":3319,"line_start":95,"line_end":95,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":3320,"byte_end":3323,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ### `db-tokio-postgres`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":3324,"byte_end":3351,"line_start":97,"line_end":97,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":3352,"byte_end":3355,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Enables the tokio postgres module allowing for async communication with PostgreSQL.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":3356,"byte_end":3443,"line_start":99,"line_end":99,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":3444,"byte_end":3447,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ### `db-diesel-postgres`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":3448,"byte_end":3476,"line_start":101,"line_end":101,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":3477,"byte_end":3480,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Enable `diesel` PostgreSQL support.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":3481,"byte_end":3520,"line_start":103,"line_end":103,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":3521,"byte_end":3524,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ### `legacy-ops`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":3525,"byte_end":3545,"line_start":105,"line_end":105,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":3546,"byte_end":3549,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ As of `1.10` the algorithms used to perform basic operations have changed which has benefits of significant speed improvements.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":3550,"byte_end":3681,"line_start":107,"line_end":107,"column_start":1,"column_end":132}},{"value":"/ To maintain backwards compatibility this can be opted out of by enabling the `legacy-ops` feature.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":3682,"byte_end":3784,"line_start":108,"line_end":108,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":3785,"byte_end":3788,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ### `maths`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":3789,"byte_end":3804,"line_start":110,"line_end":110,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":3805,"byte_end":3808,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The `maths` feature enables additional complex mathematical functions such as `pow`, `ln`, `enf`, `exp` etc.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":3809,"byte_end":3921,"line_start":112,"line_end":112,"column_start":1,"column_end":113}},{"value":"/ Documentation detailing the additional functions can be found on the","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":3922,"byte_end":3994,"line_start":113,"line_end":113,"column_start":1,"column_end":73}},{"value":"/ [`MathematicalOps`](https://docs.rs/rust_decimal/latest/rust_decimal/trait.MathematicalOps.html) trait.  ","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":3995,"byte_end":4104,"line_start":114,"line_end":114,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4105,"byte_end":4108,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ Please note that `ln` and `log10` will panic on invalid input with `checked_ln` and `checked_log10` the preferred functions","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4109,"byte_end":4236,"line_start":116,"line_end":116,"column_start":1,"column_end":128}},{"value":"/ to curb against this. When the `maths` feature was first developed the library would return `0` on invalid input. To re-enable this","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4237,"byte_end":4372,"line_start":117,"line_end":117,"column_start":1,"column_end":136}},{"value":"/ non-panicing behavior, please use the feature: `maths-nopanic`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4373,"byte_end":4440,"line_start":118,"line_end":118,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4441,"byte_end":4444,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ ### `rust-fuzz`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4445,"byte_end":4464,"line_start":120,"line_end":120,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4465,"byte_end":4468,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Enable `rust-fuzz` support by implementing the `Arbitrary` trait.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4469,"byte_end":4538,"line_start":122,"line_end":122,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4539,"byte_end":4542,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ### `serde-float`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4543,"byte_end":4564,"line_start":124,"line_end":124,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4565,"byte_end":4568,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Enable this so that JSON serialization of `Decimal` types are sent as a float instead of a string (default).","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4569,"byte_end":4681,"line_start":126,"line_end":126,"column_start":1,"column_end":113}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4682,"byte_end":4685,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ e.g. with this turned on, JSON serialization would output:","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4686,"byte_end":4748,"line_start":128,"line_end":128,"column_start":1,"column_end":63}},{"value":"/ ```json","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4749,"byte_end":4760,"line_start":129,"line_end":129,"column_start":1,"column_end":12}},{"value":"/ {","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4761,"byte_end":4766,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"/   \"value\": 1.234","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4767,"byte_end":4787,"line_start":131,"line_end":131,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4788,"byte_end":4793,"line_start":132,"line_end":132,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4794,"byte_end":4801,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4802,"byte_end":4805,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ### `serde-str`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4806,"byte_end":4825,"line_start":135,"line_end":135,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4826,"byte_end":4829,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ This is typically useful for `bincode` or `csv` like implementations.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4830,"byte_end":4903,"line_start":137,"line_end":137,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4904,"byte_end":4907,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ Since `bincode` does not specify type information, we need to ensure that a type hint is provided in order to","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":4908,"byte_end":5021,"line_start":139,"line_end":139,"column_start":1,"column_end":114}},{"value":"/ correctly be able to deserialize. Enabling this feature on its own will force deserialization to use `deserialize_str`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":5022,"byte_end":5144,"line_start":140,"line_end":140,"column_start":1,"column_end":123}},{"value":"/ instead of `deserialize_any`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":5145,"byte_end":5178,"line_start":141,"line_end":141,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":5179,"byte_end":5182,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ If, for some reason, you also have `serde-float` enabled then this will use `deserialize_f64` as a type hint. Because","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":5183,"byte_end":5304,"line_start":143,"line_end":143,"column_start":1,"column_end":122}},{"value":"/ converting to `f64` _loses_ precision, it's highly recommended that you do NOT enable this feature when working with","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":5305,"byte_end":5425,"line_start":144,"line_end":144,"column_start":1,"column_end":121}},{"value":"/ `bincode`. That being said, this will only use 8 bytes so is slightly more efficient in terms of storage size.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":5426,"byte_end":5540,"line_start":145,"line_end":145,"column_start":1,"column_end":115}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":5541,"byte_end":5544,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ### `serde-arbitrary-precision`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":5545,"byte_end":5580,"line_start":147,"line_end":147,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":5581,"byte_end":5584,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ This is used primarily with `serde_json` and consequently adds it as a \"weak dependency\". This supports the","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":5585,"byte_end":5696,"line_start":149,"line_end":149,"column_start":1,"column_end":112}},{"value":"/ `arbitrary_precision` feature inside `serde_json` when parsing decimals.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":5697,"byte_end":5773,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":5774,"byte_end":5777,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ This is recommended when parsing \"float\" looking data as it will prevent data loss.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":5778,"byte_end":5865,"line_start":152,"line_end":152,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":5866,"byte_end":5869,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ### `std`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":5870,"byte_end":5883,"line_start":154,"line_end":154,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":5884,"byte_end":5887,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ Enable `std` library support. This is enabled by default, however in the future will be opt in. For now, to support `no_std`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":5888,"byte_end":6016,"line_start":156,"line_end":156,"column_start":1,"column_end":129}},{"value":"/ libraries, this crate can be compiled with `--no-default-features`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":6017,"byte_end":6088,"line_start":157,"line_end":157,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":6089,"byte_end":6092,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ## Building","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":6093,"byte_end":6108,"line_start":159,"line_end":159,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":6109,"byte_end":6112,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ Please refer to the [Build document](BUILD.md) for more information on building and testing Rust Decimal.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":6113,"byte_end":6222,"line_start":161,"line_end":161,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":6223,"byte_end":6226,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"forbid(unsafe_code)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":6227,"byte_end":6250,"line_start":163,"line_end":163,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":873},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":11241,"byte_end":11256,"line_start":87,"line_end":87,"column_start":12,"column_end":27},"name":"UnpackedDecimal","qualname":"::decimal::UnpackedDecimal","value":"UnpackedDecimal { negative, scale, hi, mid, lo }","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878}],"decl_id":null,"docs":" `UnpackedDecimal` contains unpacked representation of `Decimal` where each component\n of decimal-format stored in it's own field\n","sig":null,"attributes":[{"value":"/ `UnpackedDecimal` contains unpacked representation of `Decimal` where each component","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":11064,"byte_end":11152,"line_start":84,"line_end":84,"column_start":1,"column_end":89}},{"value":"/ of decimal-format stored in it's own field","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":11153,"byte_end":11199,"line_start":85,"line_end":85,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":874},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":11267,"byte_end":11275,"line_start":88,"line_end":88,"column_start":9,"column_end":17},"name":"negative","qualname":"::decimal::UnpackedDecimal::negative","value":"bool","parent":{"krate":0,"index":873},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":875},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":11291,"byte_end":11296,"line_start":89,"line_end":89,"column_start":9,"column_end":14},"name":"scale","qualname":"::decimal::UnpackedDecimal::scale","value":"u32","parent":{"krate":0,"index":873},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":876},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":11311,"byte_end":11313,"line_start":90,"line_end":90,"column_start":9,"column_end":11},"name":"hi","qualname":"::decimal::UnpackedDecimal::hi","value":"u32","parent":{"krate":0,"index":873},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":877},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":11328,"byte_end":11331,"line_start":91,"line_end":91,"column_start":9,"column_end":12},"name":"mid","qualname":"::decimal::UnpackedDecimal::mid","value":"u32","parent":{"krate":0,"index":873},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":878},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":11346,"byte_end":11348,"line_start":92,"line_end":92,"column_start":9,"column_end":11},"name":"lo","qualname":"::decimal::UnpackedDecimal::lo","value":"u32","parent":{"krate":0,"index":873},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":884},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":11817,"byte_end":11824,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"Decimal","qualname":"::decimal::Decimal","value":"Decimal {  }","parent":null,"children":[{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888}],"decl_id":null,"docs":" `Decimal` represents a 128 bit representation of a fixed-precision decimal number.\n The finite set of values of type `Decimal` are of the form m / 10<sup>e</sup>,\n where m is an integer such that -2<sup>96</sup> < m < 2<sup>96</sup>, and e is an integer\n between 0 and 28 inclusive.\n","sig":null,"attributes":[{"value":"/ `Decimal` represents a 128 bit representation of a fixed-precision decimal number.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":11358,"byte_end":11444,"line_start":95,"line_end":95,"column_start":1,"column_end":87}},{"value":"/ The finite set of values of type `Decimal` are of the form m / 10<sup>e</sup>,","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":11445,"byte_end":11527,"line_start":96,"line_end":96,"column_start":1,"column_end":83}},{"value":"/ where m is an integer such that -2<sup>96</sup> < m < 2<sup>96</sup>, and e is an integer","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":11528,"byte_end":11621,"line_start":97,"line_end":97,"column_start":1,"column_end":94}},{"value":"/ between 0 and 28 inclusive.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":11622,"byte_end":11653,"line_start":98,"line_end":98,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":893},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":12598,"byte_end":12617,"line_start":123,"line_end":123,"column_start":5,"column_end":24},"name":"MidpointNearestEven","qualname":"::decimal::RoundingStrategy::MidpointNearestEven","value":"RoundingStrategy::MidpointNearestEven","parent":{"krate":0,"index":892},"children":[],"decl_id":null,"docs":" When a number is halfway between two others, it is rounded toward the nearest even number.\n Also known as \"Bankers Rounding\".\n e.g.\n 6.5 -> 6, 7.5 -> 8\n","sig":null,"attributes":[{"value":"/ When a number is halfway between two others, it is rounded toward the nearest even number.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":12417,"byte_end":12511,"line_start":119,"line_end":119,"column_start":5,"column_end":99}},{"value":"/ Also known as \"Bankers Rounding\".","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":12516,"byte_end":12553,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ e.g.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":12558,"byte_end":12566,"line_start":121,"line_end":121,"column_start":5,"column_end":13}},{"value":"/ 6.5 -> 6, 7.5 -> 8","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":12571,"byte_end":12593,"line_start":122,"line_end":122,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":895},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":12784,"byte_end":12804,"line_start":126,"line_end":126,"column_start":5,"column_end":25},"name":"MidpointAwayFromZero","qualname":"::decimal::RoundingStrategy::MidpointAwayFromZero","value":"RoundingStrategy::MidpointAwayFromZero","parent":{"krate":0,"index":892},"children":[],"decl_id":null,"docs":" When a number is halfway between two others, it is rounded toward the nearest number that\n is away from zero. e.g. 6.4 -> 6, 6.5 -> 7, -6.5 -> -7\n","sig":null,"attributes":[{"value":"/ When a number is halfway between two others, it is rounded toward the nearest number that","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":12623,"byte_end":12716,"line_start":124,"line_end":124,"column_start":5,"column_end":98}},{"value":"/ is away from zero. e.g. 6.4 -> 6, 6.5 -> 7, -6.5 -> -7","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":12721,"byte_end":12779,"line_start":125,"line_end":125,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":897},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":12968,"byte_end":12986,"line_start":129,"line_end":129,"column_start":5,"column_end":23},"name":"MidpointTowardZero","qualname":"::decimal::RoundingStrategy::MidpointTowardZero","value":"RoundingStrategy::MidpointTowardZero","parent":{"krate":0,"index":892},"children":[],"decl_id":null,"docs":" When a number is halfway between two others, it is rounded toward the nearest number that\n is toward zero. e.g. 6.4 -> 6, 6.5 -> 7, -6.5 -> -6\n","sig":null,"attributes":[{"value":"/ When a number is halfway between two others, it is rounded toward the nearest number that","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":12810,"byte_end":12903,"line_start":127,"line_end":127,"column_start":5,"column_end":98}},{"value":"/ is toward zero. e.g. 6.4 -> 6, 6.5 -> 7, -6.5 -> -6","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":12908,"byte_end":12963,"line_start":128,"line_end":128,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":899},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":13068,"byte_end":13074,"line_start":131,"line_end":131,"column_start":5,"column_end":11},"name":"ToZero","qualname":"::decimal::RoundingStrategy::ToZero","value":"RoundingStrategy::ToZero","parent":{"krate":0,"index":892},"children":[],"decl_id":null,"docs":" The number is always rounded toward zero. e.g. -6.8 -> -6, 6.8 -> 6\n","sig":null,"attributes":[{"value":"/ The number is always rounded toward zero. e.g. -6.8 -> -6, 6.8 -> 6","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":12992,"byte_end":13063,"line_start":130,"line_end":130,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":901},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":13159,"byte_end":13171,"line_start":133,"line_end":133,"column_start":5,"column_end":17},"name":"AwayFromZero","qualname":"::decimal::RoundingStrategy::AwayFromZero","value":"RoundingStrategy::AwayFromZero","parent":{"krate":0,"index":892},"children":[],"decl_id":null,"docs":" The number is always rounded away from zero. e.g. -6.8 -> -7, 6.8 -> 7\n","sig":null,"attributes":[{"value":"/ The number is always rounded away from zero. e.g. -6.8 -> -7, 6.8 -> 7","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":13080,"byte_end":13154,"line_start":132,"line_end":132,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":903},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":13267,"byte_end":13285,"line_start":135,"line_end":135,"column_start":5,"column_end":23},"name":"ToNegativeInfinity","qualname":"::decimal::RoundingStrategy::ToNegativeInfinity","value":"RoundingStrategy::ToNegativeInfinity","parent":{"krate":0,"index":892},"children":[],"decl_id":null,"docs":" The number is always rounded towards negative infinity. e.g. 6.8 -> 6, -6.8 -> -7\n","sig":null,"attributes":[{"value":"/ The number is always rounded towards negative infinity. e.g. 6.8 -> 6, -6.8 -> -7","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":13177,"byte_end":13262,"line_start":134,"line_end":134,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":905},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":13381,"byte_end":13399,"line_start":137,"line_end":137,"column_start":5,"column_end":23},"name":"ToPositiveInfinity","qualname":"::decimal::RoundingStrategy::ToPositiveInfinity","value":"RoundingStrategy::ToPositiveInfinity","parent":{"krate":0,"index":892},"children":[],"decl_id":null,"docs":" The number is always rounded towards positive infinity. e.g. 6.8 -> 7, -6.8 -> -6\n","sig":null,"attributes":[{"value":"/ The number is always rounded towards positive infinity. e.g. 6.8 -> 7, -6.8 -> -6","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":13291,"byte_end":13376,"line_start":136,"line_end":136,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":907},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":13648,"byte_end":13663,"line_start":143,"line_end":143,"column_start":5,"column_end":20},"name":"BankersRounding","qualname":"::decimal::RoundingStrategy::BankersRounding","value":"RoundingStrategy::BankersRounding","parent":{"krate":0,"index":892},"children":[],"decl_id":null,"docs":" When a number is halfway between two others, it is rounded toward the nearest even number.\n e.g.\n 6.5 -> 6, 7.5 -> 8\n","sig":null,"attributes":[{"value":"/ When a number is halfway between two others, it is rounded toward the nearest even number.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":13406,"byte_end":13500,"line_start":139,"line_end":139,"column_start":5,"column_end":99}},{"value":"/ e.g.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":13505,"byte_end":13513,"line_start":140,"line_end":140,"column_start":5,"column_end":13}},{"value":"/ 6.5 -> 6, 7.5 -> 8","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":13518,"byte_end":13540,"line_start":141,"line_end":141,"column_start":5,"column_end":27}},{"value":"deprecated(since = \"1.11.0\", note =\n             \"Please use RoundingStrategy::MidpointNearestEven instead\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":13545,"byte_end":13643,"line_start":142,"line_end":142,"column_start":5,"column_end":103}}]},{"kind":"TupleVariant","id":{"krate":0,"index":909},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":13847,"byte_end":13858,"line_start":146,"line_end":146,"column_start":5,"column_end":16},"name":"RoundHalfUp","qualname":"::decimal::RoundingStrategy::RoundHalfUp","value":"RoundingStrategy::RoundHalfUp","parent":{"krate":0,"index":892},"children":[],"decl_id":null,"docs":" Rounds up if the value >= 5, otherwise rounds down, e.g. 6.5 -> 7\n","sig":null,"attributes":[{"value":"/ Rounds up if the value >= 5, otherwise rounds down, e.g. 6.5 -> 7","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":13669,"byte_end":13738,"line_start":144,"line_end":144,"column_start":5,"column_end":74}},{"value":"deprecated(since = \"1.11.0\", note =\n             \"Please use RoundingStrategy::MidpointAwayFromZero instead\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":13743,"byte_end":13842,"line_start":145,"line_end":145,"column_start":5,"column_end":104}}]},{"kind":"TupleVariant","id":{"krate":0,"index":911},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":14066,"byte_end":14079,"line_start":149,"line_end":149,"column_start":5,"column_end":18},"name":"RoundHalfDown","qualname":"::decimal::RoundingStrategy::RoundHalfDown","value":"RoundingStrategy::RoundHalfDown","parent":{"krate":0,"index":892},"children":[],"decl_id":null,"docs":" Rounds down if the value =< 5, otherwise rounds up, e.g. 6.5 -> 6, 6.51 -> 7 1.4999999 -> 1\n","sig":null,"attributes":[{"value":"/ Rounds down if the value =< 5, otherwise rounds up, e.g. 6.5 -> 6, 6.51 -> 7 1.4999999 -> 1","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":13864,"byte_end":13959,"line_start":147,"line_end":147,"column_start":5,"column_end":100}},{"value":"deprecated(since = \"1.11.0\", note =\n             \"Please use RoundingStrategy::MidpointTowardZero instead\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":13964,"byte_end":14061,"line_start":148,"line_end":148,"column_start":5,"column_end":102}}]},{"kind":"TupleVariant","id":{"krate":0,"index":913},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":14202,"byte_end":14211,"line_start":152,"line_end":152,"column_start":5,"column_end":14},"name":"RoundDown","qualname":"::decimal::RoundingStrategy::RoundDown","value":"RoundingStrategy::RoundDown","parent":{"krate":0,"index":892},"children":[],"decl_id":null,"docs":" Always round down.\n","sig":null,"attributes":[{"value":"/ Always round down.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":14085,"byte_end":14107,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"deprecated(since = \"1.11.0\", note =\n             \"Please use RoundingStrategy::ToZero instead\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":14112,"byte_end":14197,"line_start":151,"line_end":151,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":915},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":14338,"byte_end":14345,"line_start":155,"line_end":155,"column_start":5,"column_end":12},"name":"RoundUp","qualname":"::decimal::RoundingStrategy::RoundUp","value":"RoundingStrategy::RoundUp","parent":{"krate":0,"index":892},"children":[],"decl_id":null,"docs":" Always round up.\n","sig":null,"attributes":[{"value":"/ Always round up.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":14217,"byte_end":14237,"line_start":153,"line_end":153,"column_start":5,"column_end":25}},{"value":"deprecated(since = \"1.11.0\", note =\n             \"Please use RoundingStrategy::AwayFromZero instead\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":14242,"byte_end":14333,"line_start":154,"line_end":154,"column_start":5,"column_end":96}}]},{"kind":"Enum","id":{"krate":0,"index":892},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":12394,"byte_end":12410,"line_start":118,"line_end":118,"column_start":10,"column_end":26},"name":"RoundingStrategy","qualname":"::decimal::RoundingStrategy","value":"pub enum RoundingStrategy {\n    MidpointNearestEven,\n    MidpointAwayFromZero,\n    MidpointTowardZero,\n    ToZero,\n    AwayFromZero,\n    ToNegativeInfinity,\n    ToPositiveInfinity,\n    BankersRounding,\n    RoundHalfUp,\n    RoundHalfDown,\n    RoundDown,\n    RoundUp,\n}","parent":null,"children":[{"krate":0,"index":893},{"krate":0,"index":895},{"krate":0,"index":897},{"krate":0,"index":899},{"krate":0,"index":901},{"krate":0,"index":903},{"krate":0,"index":905},{"krate":0,"index":907},{"krate":0,"index":909},{"krate":0,"index":911},{"krate":0,"index":913},{"krate":0,"index":915}],"decl_id":null,"docs":" `RoundingStrategy` represents the different rounding strategies that can be used by\n `round_dp_with_strategy`.\n","sig":null,"attributes":[{"value":"/ `RoundingStrategy` represents the different rounding strategies that can be used by","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":12222,"byte_end":12309,"line_start":115,"line_end":115,"column_start":1,"column_end":88}},{"value":"/ `round_dp_with_strategy`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":12310,"byte_end":12339,"line_start":116,"line_end":116,"column_start":1,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":161},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":14472,"byte_end":14475,"line_start":161,"line_end":161,"column_start":15,"column_end":18},"name":"MIN","qualname":"::decimal::Decimal::MIN","value":"Decimal","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":" The smallest value that can be represented by this decimal type.\n","sig":null,"attributes":[{"value":"/ The smallest value that can be represented by this decimal type.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":14389,"byte_end":14457,"line_start":160,"line_end":160,"column_start":5,"column_end":73}}]},{"kind":"Const","id":{"krate":0,"index":162},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":14578,"byte_end":14581,"line_start":163,"line_end":163,"column_start":15,"column_end":18},"name":"MAX","qualname":"::decimal::Decimal::MAX","value":"Decimal","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":" The largest value that can be represented by this decimal type.\n","sig":null,"attributes":[{"value":"/ The largest value that can be represented by this decimal type.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":14496,"byte_end":14563,"line_start":162,"line_end":162,"column_start":5,"column_end":72}}]},{"kind":"Const","id":{"krate":0,"index":163},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":14647,"byte_end":14651,"line_start":165,"line_end":165,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::decimal::Decimal::ZERO","value":"Decimal","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":" A constant representing 0.\n","sig":null,"attributes":[{"value":"/ A constant representing 0.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":14602,"byte_end":14632,"line_start":164,"line_end":164,"column_start":5,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":164},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":14718,"byte_end":14721,"line_start":167,"line_end":167,"column_start":15,"column_end":18},"name":"ONE","qualname":"::decimal::Decimal::ONE","value":"Decimal","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":" A constant representing 1.\n","sig":null,"attributes":[{"value":"/ A constant representing 1.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":14673,"byte_end":14703,"line_start":166,"line_end":166,"column_start":5,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":165},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":14788,"byte_end":14800,"line_start":169,"line_end":169,"column_start":15,"column_end":27},"name":"NEGATIVE_ONE","qualname":"::decimal::Decimal::NEGATIVE_ONE","value":"Decimal","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":" A constant representing -1.\n","sig":null,"attributes":[{"value":"/ A constant representing -1.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":14742,"byte_end":14773,"line_start":168,"line_end":168,"column_start":5,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":166},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":14875,"byte_end":14878,"line_start":171,"line_end":171,"column_start":15,"column_end":18},"name":"TWO","qualname":"::decimal::Decimal::TWO","value":"Decimal","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":" A constant representing 2.\n","sig":null,"attributes":[{"value":"/ A constant representing 2.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":14830,"byte_end":14860,"line_start":170,"line_end":170,"column_start":5,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":167},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":14945,"byte_end":14948,"line_start":173,"line_end":173,"column_start":15,"column_end":18},"name":"TEN","qualname":"::decimal::Decimal::TEN","value":"Decimal","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":" A constant representing 10.\n","sig":null,"attributes":[{"value":"/ A constant representing 10.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":14899,"byte_end":14930,"line_start":172,"line_end":172,"column_start":5,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":168},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":15016,"byte_end":15027,"line_start":175,"line_end":175,"column_start":15,"column_end":26},"name":"ONE_HUNDRED","qualname":"::decimal::Decimal::ONE_HUNDRED","value":"Decimal","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":" A constant representing 100.\n","sig":null,"attributes":[{"value":"/ A constant representing 100.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":14969,"byte_end":15001,"line_start":174,"line_end":174,"column_start":5,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":169},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":15104,"byte_end":15116,"line_start":177,"line_end":177,"column_start":15,"column_end":27},"name":"ONE_THOUSAND","qualname":"::decimal::Decimal::ONE_THOUSAND","value":"Decimal","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":" A constant representing 1000.\n","sig":null,"attributes":[{"value":"/ A constant representing 1000.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":15056,"byte_end":15089,"line_start":176,"line_end":176,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":17238,"byte_end":17241,"line_start":248,"line_end":248,"column_start":12,"column_end":15},"name":"new","qualname":"<Decimal>::new","value":"pub fn new(i64, u32) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Decimal` with a 64 bit `m` representation and corresponding `e` scale.","sig":null,"attributes":[{"value":"/ Returns a `Decimal` with a 64 bit `m` representation and corresponding `e` scale.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":16664,"byte_end":16749,"line_start":228,"line_end":228,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":16754,"byte_end":16757,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":16762,"byte_end":16777,"line_start":230,"line_end":230,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":16782,"byte_end":16785,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ * `num` - An i64 that represents the `m` portion of the decimal number","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":16790,"byte_end":16864,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/ * `scale` - A u32 representing the `e` portion of the decimal number.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":16869,"byte_end":16942,"line_start":233,"line_end":233,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":16947,"byte_end":16950,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":16955,"byte_end":16967,"line_start":235,"line_end":235,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":16972,"byte_end":16975,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ This function panics if `scale` is > 28.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":16980,"byte_end":17024,"line_start":237,"line_end":237,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":17029,"byte_end":17032,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":17037,"byte_end":17050,"line_start":239,"line_end":239,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":17055,"byte_end":17058,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":17063,"byte_end":17070,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":17075,"byte_end":17105,"line_start":242,"line_end":242,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":17110,"byte_end":17113,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ let pi = Decimal::new(3141, 3);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":17118,"byte_end":17153,"line_start":244,"line_end":244,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(pi.to_string(), \"3.141\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":17158,"byte_end":17198,"line_start":245,"line_end":245,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":17203,"byte_end":17210,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":17215,"byte_end":17226,"line_start":247,"line_end":247,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":17703,"byte_end":17710,"line_start":265,"line_end":265,"column_start":18,"column_end":25},"name":"try_new","qualname":"<Decimal>::try_new","value":"pub const fn try_new(i64, u32) -> crate::Result<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Checked version of `Decimal::new`. Will return `Err` instead of panicking at run-time.","sig":null,"attributes":[{"value":"/ Checked version of `Decimal::new`. Will return `Err` instead of panicking at run-time.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":17403,"byte_end":17493,"line_start":255,"line_end":255,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":17498,"byte_end":17501,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":17506,"byte_end":17519,"line_start":257,"line_end":257,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":17524,"byte_end":17527,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":17532,"byte_end":17543,"line_start":259,"line_end":259,"column_start":5,"column_end":16}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":17548,"byte_end":17578,"line_start":260,"line_end":260,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":17583,"byte_end":17586,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let max = Decimal::try_new(i64::MAX, u32::MAX);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":17591,"byte_end":17642,"line_start":262,"line_end":262,"column_start":5,"column_end":56}},{"value":"/ assert!(max.is_err());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":17647,"byte_end":17673,"line_start":263,"line_end":263,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":17678,"byte_end":17685,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":19070,"byte_end":19090,"line_start":307,"line_end":307,"column_start":12,"column_end":32},"name":"from_i128_with_scale","qualname":"<Decimal>::from_i128_with_scale","value":"pub fn from_i128_with_scale(i128, u32) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Decimal` using a 128 bit signed `m` representation and corresponding `e` scale.","sig":null,"attributes":[{"value":"/ Creates a `Decimal` using a 128 bit signed `m` representation and corresponding `e` scale.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":18411,"byte_end":18505,"line_start":287,"line_end":287,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":18510,"byte_end":18513,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":18518,"byte_end":18533,"line_start":289,"line_end":289,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":18538,"byte_end":18541,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ * `num` - An i128 that represents the `m` portion of the decimal number","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":18546,"byte_end":18621,"line_start":291,"line_end":291,"column_start":5,"column_end":80}},{"value":"/ * `scale` - A u32 representing the `e` portion of the decimal number.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":18626,"byte_end":18699,"line_start":292,"line_end":292,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":18704,"byte_end":18707,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":18712,"byte_end":18724,"line_start":294,"line_end":294,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":18729,"byte_end":18732,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This function panics if `scale` is > 28 or if `num` exceeds the maximum supported 96 bits.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":18737,"byte_end":18831,"line_start":296,"line_end":296,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":18836,"byte_end":18839,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":18844,"byte_end":18857,"line_start":298,"line_end":298,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":18862,"byte_end":18865,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":18870,"byte_end":18881,"line_start":300,"line_end":300,"column_start":5,"column_end":16}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":18886,"byte_end":18916,"line_start":301,"line_end":301,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":18921,"byte_end":18924,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ let pi = Decimal::from_i128_with_scale(3141i128, 3);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":18929,"byte_end":18985,"line_start":303,"line_end":303,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(pi.to_string(), \"3.141\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":18990,"byte_end":19030,"line_start":304,"line_end":304,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":19035,"byte_end":19042,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":19047,"byte_end":19058,"line_start":306,"line_end":306,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":19613,"byte_end":19637,"line_start":325,"line_end":325,"column_start":18,"column_end":42},"name":"try_from_i128_with_scale","qualname":"<Decimal>::try_from_i128_with_scale","value":"pub const fn try_from_i128_with_scale(i128, u32) -> crate::Result<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Checked version of `Decimal::from_i128_with_scale`. Will return `Err` instead\n of panicking at run-time.","sig":null,"attributes":[{"value":"/ Checked version of `Decimal::from_i128_with_scale`. Will return `Err` instead","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":19270,"byte_end":19351,"line_start":314,"line_end":314,"column_start":5,"column_end":86}},{"value":"/ of panicking at run-time.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":19356,"byte_end":19385,"line_start":315,"line_end":315,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":19390,"byte_end":19393,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":19398,"byte_end":19411,"line_start":317,"line_end":317,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":19416,"byte_end":19419,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":19424,"byte_end":19435,"line_start":319,"line_end":319,"column_start":5,"column_end":16}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":19440,"byte_end":19470,"line_start":320,"line_end":320,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":19475,"byte_end":19478,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ let max = Decimal::try_from_i128_with_scale(i128::MAX, u32::MAX);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":19483,"byte_end":19552,"line_start":322,"line_end":322,"column_start":5,"column_end":74}},{"value":"/ assert!(max.is_err());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":19557,"byte_end":19583,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":19588,"byte_end":19595,"line_start":324,"line_end":324,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":21535,"byte_end":21545,"line_start":374,"line_end":374,"column_start":18,"column_end":28},"name":"from_parts","qualname":"<Decimal>::from_parts","value":"pub const fn from_parts(u32, u32, u32, bool, u32) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Decimal` using the instances constituent parts.","sig":null,"attributes":[{"value":"/ Returns a `Decimal` using the instances constituent parts.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":20434,"byte_end":20496,"line_start":348,"line_end":348,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":20501,"byte_end":20504,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":20509,"byte_end":20524,"line_start":350,"line_end":350,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":20529,"byte_end":20532,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ * `lo` - The low 32 bits of a 96-bit integer.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":20537,"byte_end":20586,"line_start":352,"line_end":352,"column_start":5,"column_end":54}},{"value":"/ * `mid` - The middle 32 bits of a 96-bit integer.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":20591,"byte_end":20644,"line_start":353,"line_end":353,"column_start":5,"column_end":58}},{"value":"/ * `hi` - The high 32 bits of a 96-bit integer.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":20649,"byte_end":20699,"line_start":354,"line_end":354,"column_start":5,"column_end":55}},{"value":"/ * `negative` - `true` to indicate a negative number.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":20704,"byte_end":20760,"line_start":355,"line_end":355,"column_start":5,"column_end":61}},{"value":"/ * `scale` - A power of 10 ranging from 0 to 28.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":20765,"byte_end":20816,"line_start":356,"line_end":356,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":20821,"byte_end":20824,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Caution: Undefined behavior","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":20829,"byte_end":20862,"line_start":358,"line_end":358,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":20867,"byte_end":20870,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ While a scale greater than 28 can be passed in, it will be automatically capped by this","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":20875,"byte_end":20966,"line_start":360,"line_end":360,"column_start":5,"column_end":96}},{"value":"/ function at the maximum precision. The library opts towards this functionality as opposed","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":20971,"byte_end":21064,"line_start":361,"line_end":361,"column_start":5,"column_end":98}},{"value":"/ to a panic to ensure that the function can be treated as constant. This may lead to","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":21069,"byte_end":21156,"line_start":362,"line_end":362,"column_start":5,"column_end":92}},{"value":"/ undefined behavior in downstream applications and should be treated with caution.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":21161,"byte_end":21246,"line_start":363,"line_end":363,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":21251,"byte_end":21254,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":21259,"byte_end":21272,"line_start":365,"line_end":365,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":21277,"byte_end":21280,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":21285,"byte_end":21292,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":21297,"byte_end":21327,"line_start":368,"line_end":368,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":21332,"byte_end":21335,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ let pi = Decimal::from_parts(1102470952, 185874565, 1703060790, false, 28);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":21340,"byte_end":21419,"line_start":370,"line_end":370,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(pi.to_string(), \"3.1415926535897932384626433832\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":21424,"byte_end":21489,"line_start":371,"line_end":371,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":21494,"byte_end":21501,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":21506,"byte_end":21517,"line_start":373,"line_end":373,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":22772,"byte_end":22787,"line_start":419,"line_end":419,"column_start":12,"column_end":27},"name":"from_scientific","qualname":"<Decimal>::from_scientific","value":"pub fn from_scientific(&str) -> Result<Decimal, Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Result` which if successful contains the `Decimal` constitution of\n the scientific notation provided by `value`.","sig":null,"attributes":[{"value":"/ Returns a `Result` which if successful contains the `Decimal` constitution of","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":22309,"byte_end":22390,"line_start":404,"line_end":404,"column_start":5,"column_end":86}},{"value":"/ the scientific notation provided by `value`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":22395,"byte_end":22443,"line_start":405,"line_end":405,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":22448,"byte_end":22451,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":22456,"byte_end":22471,"line_start":407,"line_end":407,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":22476,"byte_end":22479,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ * `value` - The scientific notation of the `Decimal`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":22484,"byte_end":22541,"line_start":409,"line_end":409,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":22546,"byte_end":22549,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":22554,"byte_end":22567,"line_start":411,"line_end":411,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":22572,"byte_end":22575,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":22580,"byte_end":22587,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":22592,"byte_end":22622,"line_start":414,"line_end":414,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":22627,"byte_end":22630,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ let value = Decimal::from_scientific(\"9.7e-7\").unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":22635,"byte_end":22695,"line_start":416,"line_end":416,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(value.to_string(), \"0.00000097\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":22700,"byte_end":22748,"line_start":417,"line_end":417,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":22753,"byte_end":22760,"line_start":418,"line_end":418,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25538,"byte_end":25543,"line_start":489,"line_end":489,"column_start":18,"column_end":23},"name":"scale","qualname":"<Decimal>::scale","value":"pub const fn scale(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the scale of the decimal number, otherwise known as `e`.","sig":null,"attributes":[{"value":"/ Returns the scale of the decimal number, otherwise known as `e`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25241,"byte_end":25309,"line_start":477,"line_end":477,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25314,"byte_end":25317,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25322,"byte_end":25335,"line_start":479,"line_end":479,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25340,"byte_end":25343,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25348,"byte_end":25355,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25360,"byte_end":25390,"line_start":482,"line_end":482,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25395,"byte_end":25398,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ let num = Decimal::new(1234, 3);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25403,"byte_end":25439,"line_start":484,"line_end":484,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(num.scale(), 3u32);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25444,"byte_end":25478,"line_start":485,"line_end":485,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25483,"byte_end":25490,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25495,"byte_end":25504,"line_start":487,"line_end":487,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25509,"byte_end":25520,"line_start":488,"line_end":488,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25961,"byte_end":25969,"line_start":505,"line_end":505,"column_start":18,"column_end":26},"name":"mantissa","qualname":"<Decimal>::mantissa","value":"pub const fn mantissa(&Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Returns the mantissa of the decimal number.","sig":null,"attributes":[{"value":"/ Returns the mantissa of the decimal number.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25629,"byte_end":25676,"line_start":493,"line_end":493,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25681,"byte_end":25684,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25689,"byte_end":25702,"line_start":495,"line_end":495,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25707,"byte_end":25710,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25715,"byte_end":25722,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::prelude::*;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25727,"byte_end":25760,"line_start":498,"line_end":498,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25765,"byte_end":25768,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ let num = Decimal::from_str(\"-1.2345678\").unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25773,"byte_end":25828,"line_start":500,"line_end":500,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(num.mantissa(), -12345678i128);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25833,"byte_end":25879,"line_start":501,"line_end":501,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(num.scale(), 7);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25884,"byte_end":25915,"line_start":502,"line_end":502,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25920,"byte_end":25927,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":25932,"byte_end":25943,"line_start":504,"line_end":504,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26454,"byte_end":26461,"line_start":525,"line_end":525,"column_start":18,"column_end":25},"name":"is_zero","qualname":"<Decimal>::is_zero","value":"pub const fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this Decimal number is equivalent to zero.","sig":null,"attributes":[{"value":"/ Returns true if this Decimal number is equivalent to zero.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26189,"byte_end":26251,"line_start":514,"line_end":514,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26256,"byte_end":26259,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26264,"byte_end":26277,"line_start":516,"line_end":516,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26282,"byte_end":26285,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26290,"byte_end":26297,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::prelude::*;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26302,"byte_end":26335,"line_start":519,"line_end":519,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26340,"byte_end":26343,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ let num = Decimal::ZERO;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26348,"byte_end":26376,"line_start":521,"line_end":521,"column_start":5,"column_end":33}},{"value":"/ assert!(num.is_zero());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26381,"byte_end":26408,"line_start":522,"line_end":522,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26413,"byte_end":26420,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26425,"byte_end":26436,"line_start":524,"line_end":524,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27023,"byte_end":27031,"line_start":545,"line_end":545,"column_start":12,"column_end":20},"name":"set_sign","qualname":"<Decimal>::set_sign","value":"pub fn set_sign(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" An optimized method for changing the sign of a decimal number.","sig":null,"attributes":[{"value":"/ An optimized method for changing the sign of a decimal number.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26544,"byte_end":26610,"line_start":529,"line_end":529,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26615,"byte_end":26618,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26623,"byte_end":26638,"line_start":531,"line_end":531,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26643,"byte_end":26646,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ * `positive`: true if the resulting decimal should be positive.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26651,"byte_end":26718,"line_start":533,"line_end":533,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26723,"byte_end":26726,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26731,"byte_end":26744,"line_start":535,"line_end":535,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26749,"byte_end":26752,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26757,"byte_end":26764,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26769,"byte_end":26799,"line_start":538,"line_end":538,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26804,"byte_end":26807,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ let mut one = Decimal::ONE;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26812,"byte_end":26843,"line_start":540,"line_end":540,"column_start":5,"column_end":36}},{"value":"/ one.set_sign(false);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26848,"byte_end":26872,"line_start":541,"line_end":541,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(one.to_string(), \"-1\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26877,"byte_end":26915,"line_start":542,"line_end":542,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26920,"byte_end":26927,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"deprecated(since = \"1.4.0\", note =\n             \"please use `set_sign_positive` instead\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":26932,"byte_end":27011,"line_start":544,"line_end":544,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27540,"byte_end":27557,"line_start":565,"line_end":565,"column_start":12,"column_end":29},"name":"set_sign_positive","qualname":"<Decimal>::set_sign_positive","value":"pub fn set_sign_positive(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" An optimized method for changing the sign of a decimal number.","sig":null,"attributes":[{"value":"/ An optimized method for changing the sign of a decimal number.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27114,"byte_end":27180,"line_start":549,"line_end":549,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27185,"byte_end":27188,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27193,"byte_end":27208,"line_start":551,"line_end":551,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27213,"byte_end":27216,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ * `positive`: true if the resulting decimal should be positive.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27221,"byte_end":27288,"line_start":553,"line_end":553,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27293,"byte_end":27296,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27301,"byte_end":27314,"line_start":555,"line_end":555,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27319,"byte_end":27322,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27327,"byte_end":27334,"line_start":557,"line_end":557,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27339,"byte_end":27369,"line_start":558,"line_end":558,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27374,"byte_end":27377,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ let mut one = Decimal::ONE;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27382,"byte_end":27413,"line_start":560,"line_end":560,"column_start":5,"column_end":36}},{"value":"/ one.set_sign_positive(false);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27418,"byte_end":27451,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(one.to_string(), \"-1\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27456,"byte_end":27494,"line_start":562,"line_end":562,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27499,"byte_end":27506,"line_start":563,"line_end":563,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27511,"byte_end":27528,"line_start":564,"line_end":564,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":28148,"byte_end":28165,"line_start":589,"line_end":589,"column_start":12,"column_end":29},"name":"set_sign_negative","qualname":"<Decimal>::set_sign_negative","value":"pub fn set_sign_negative(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" An optimized method for changing the sign of a decimal number.","sig":null,"attributes":[{"value":"/ An optimized method for changing the sign of a decimal number.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27723,"byte_end":27789,"line_start":573,"line_end":573,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27794,"byte_end":27797,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27802,"byte_end":27817,"line_start":575,"line_end":575,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27822,"byte_end":27825,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ * `negative`: true if the resulting decimal should be negative.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27830,"byte_end":27897,"line_start":577,"line_end":577,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27902,"byte_end":27905,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27910,"byte_end":27923,"line_start":579,"line_end":579,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27928,"byte_end":27931,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27936,"byte_end":27943,"line_start":581,"line_end":581,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27948,"byte_end":27978,"line_start":582,"line_end":582,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27983,"byte_end":27986,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ let mut one = Decimal::ONE;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":27991,"byte_end":28022,"line_start":584,"line_end":584,"column_start":5,"column_end":36}},{"value":"/ one.set_sign_negative(true);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":28027,"byte_end":28059,"line_start":585,"line_end":585,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(one.to_string(), \"-1\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":28064,"byte_end":28102,"line_start":586,"line_end":586,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":28107,"byte_end":28114,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":28119,"byte_end":28136,"line_start":588,"line_end":588,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":28631,"byte_end":28640,"line_start":608,"line_end":608,"column_start":12,"column_end":21},"name":"set_scale","qualname":"<Decimal>::set_scale","value":"pub fn set_scale(&mut Self, u32) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" An optimized method for changing the scale of a decimal number.","sig":null,"attributes":[{"value":"/ An optimized method for changing the scale of a decimal number.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":28249,"byte_end":28316,"line_start":593,"line_end":593,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":28321,"byte_end":28324,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":28329,"byte_end":28344,"line_start":595,"line_end":595,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":28349,"byte_end":28352,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ * `scale`: the new scale of the number","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":28357,"byte_end":28399,"line_start":597,"line_end":597,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":28404,"byte_end":28407,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":28412,"byte_end":28425,"line_start":599,"line_end":599,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":28430,"byte_end":28433,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":28438,"byte_end":28445,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":28450,"byte_end":28480,"line_start":602,"line_end":602,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":28485,"byte_end":28488,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ let mut one = Decimal::ONE;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":28493,"byte_end":28524,"line_start":604,"line_end":604,"column_start":5,"column_end":36}},{"value":"/ one.set_scale(5).unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":28529,"byte_end":28559,"line_start":605,"line_end":605,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(one.to_string(), \"0.00001\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":28564,"byte_end":28607,"line_start":606,"line_end":606,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":28612,"byte_end":28619,"line_start":607,"line_end":607,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":30153,"byte_end":30160,"line_start":647,"line_end":647,"column_start":12,"column_end":19},"name":"rescale","qualname":"<Decimal>::rescale","value":"pub fn rescale(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Modifies the `Decimal` to the given scale, attempting to do so without changing the\n underlying number itself.","sig":null,"attributes":[{"value":"/ Modifies the `Decimal` to the given scale, attempting to do so without changing the","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":28898,"byte_end":28985,"line_start":616,"line_end":616,"column_start":5,"column_end":92}},{"value":"/ underlying number itself.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":28990,"byte_end":29019,"line_start":617,"line_end":617,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29024,"byte_end":29027,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ Note that setting the scale to something less then the current `Decimal`s scale will","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29032,"byte_end":29120,"line_start":619,"line_end":619,"column_start":5,"column_end":93}},{"value":"/ cause the newly created `Decimal` to have some rounding.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29125,"byte_end":29185,"line_start":620,"line_end":620,"column_start":5,"column_end":65}},{"value":"/ Scales greater than the maximum precision supported by `Decimal` will be automatically","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29190,"byte_end":29280,"line_start":621,"line_end":621,"column_start":5,"column_end":95}},{"value":"/ rounded to `Decimal::MAX_PRECISION`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29285,"byte_end":29325,"line_start":622,"line_end":622,"column_start":5,"column_end":45}},{"value":"/ Rounding leverages the half up strategy.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29330,"byte_end":29374,"line_start":623,"line_end":623,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29379,"byte_end":29382,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29387,"byte_end":29402,"line_start":625,"line_end":625,"column_start":5,"column_end":20}},{"value":"/ * `scale`: The scale to use for the new `Decimal` number.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29407,"byte_end":29468,"line_start":626,"line_end":626,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29473,"byte_end":29476,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29481,"byte_end":29494,"line_start":628,"line_end":628,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29499,"byte_end":29502,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29507,"byte_end":29514,"line_start":630,"line_end":630,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::prelude::*;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29519,"byte_end":29552,"line_start":631,"line_end":631,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29557,"byte_end":29560,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ // Rescaling to a higher scale preserves the value","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29565,"byte_end":29619,"line_start":633,"line_end":633,"column_start":5,"column_end":59}},{"value":"/ let mut number = Decimal::from_str(\"1.123\").unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29624,"byte_end":29681,"line_start":634,"line_end":634,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(number.scale(), 3);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29686,"byte_end":29720,"line_start":635,"line_end":635,"column_start":5,"column_end":39}},{"value":"/ number.rescale(6);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29725,"byte_end":29747,"line_start":636,"line_end":636,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(number.to_string(), \"1.123000\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29752,"byte_end":29799,"line_start":637,"line_end":637,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(number.scale(), 6);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29804,"byte_end":29838,"line_start":638,"line_end":638,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29843,"byte_end":29846,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ // Rescaling to a lower scale forces the number to be rounded","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29851,"byte_end":29916,"line_start":640,"line_end":640,"column_start":5,"column_end":70}},{"value":"/ let mut number = Decimal::from_str(\"1.45\").unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29921,"byte_end":29977,"line_start":641,"line_end":641,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(number.scale(), 2);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":29982,"byte_end":30016,"line_start":642,"line_end":642,"column_start":5,"column_end":39}},{"value":"/ number.rescale(1);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":30021,"byte_end":30043,"line_start":643,"line_end":643,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(number.to_string(), \"1.5\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":30048,"byte_end":30090,"line_start":644,"line_end":644,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(number.scale(), 1);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":30095,"byte_end":30129,"line_start":645,"line_end":645,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":30134,"byte_end":30141,"line_start":646,"line_end":646,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":30841,"byte_end":30850,"line_start":665,"line_end":665,"column_start":18,"column_end":27},"name":"serialize","qualname":"<Decimal>::serialize","value":"pub const fn serialize(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a serialized version of the decimal number.\n The resulting byte array will have the following representation:","sig":null,"attributes":[{"value":"/ Returns a serialized version of the decimal number.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":30521,"byte_end":30576,"line_start":657,"line_end":657,"column_start":5,"column_end":60}},{"value":"/ The resulting byte array will have the following representation:","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":30581,"byte_end":30649,"line_start":658,"line_end":658,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":30654,"byte_end":30657,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ * Bytes 1-4: flags","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":30662,"byte_end":30684,"line_start":660,"line_end":660,"column_start":5,"column_end":27}},{"value":"/ * Bytes 5-8: lo portion of `m`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":30689,"byte_end":30723,"line_start":661,"line_end":661,"column_start":5,"column_end":39}},{"value":"/ * Bytes 9-12: mid portion of `m`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":30728,"byte_end":30764,"line_start":662,"line_end":662,"column_start":5,"column_end":41}},{"value":"/ * Bytes 13-16: high portion of `m`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":30769,"byte_end":30807,"line_start":663,"line_end":663,"column_start":5,"column_end":43}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":30812,"byte_end":30823,"line_start":664,"line_end":664,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":31984,"byte_end":31995,"line_start":694,"line_end":694,"column_start":18,"column_end":29},"name":"deserialize","qualname":"<Decimal>::deserialize","value":"pub const fn deserialize([u8; ]) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Deserializes the given bytes into a decimal number.\n The deserialized byte representation must be 16 bytes and adhere to the following convention:","sig":null,"attributes":[{"value":"/ Deserializes the given bytes into a decimal number.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":31635,"byte_end":31690,"line_start":686,"line_end":686,"column_start":5,"column_end":60}},{"value":"/ The deserialized byte representation must be 16 bytes and adhere to the following convention:","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":31695,"byte_end":31792,"line_start":687,"line_end":687,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":31797,"byte_end":31800,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ * Bytes 1-4: flags","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":31805,"byte_end":31827,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ * Bytes 5-8: lo portion of `m`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":31832,"byte_end":31866,"line_start":690,"line_end":690,"column_start":5,"column_end":39}},{"value":"/ * Bytes 9-12: mid portion of `m`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":31871,"byte_end":31907,"line_start":691,"line_end":691,"column_start":5,"column_end":41}},{"value":"/ * Bytes 13-16: high portion of `m`","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":31912,"byte_end":31950,"line_start":692,"line_end":692,"column_start":5,"column_end":43}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":31955,"byte_end":31966,"line_start":693,"line_end":693,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":32680,"byte_end":32691,"line_start":706,"line_end":706,"column_start":12,"column_end":23},"name":"is_negative","qualname":"<Decimal>::is_negative","value":"pub fn is_negative(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the decimal is negative.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the decimal is negative.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":32523,"byte_end":32569,"line_start":703,"line_end":703,"column_start":5,"column_end":51}},{"value":"deprecated(since = \"0.6.3\", note = \"please use `is_sign_negative` instead\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":32574,"byte_end":32652,"line_start":704,"line_end":704,"column_start":5,"column_end":83}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":32657,"byte_end":32668,"line_start":705,"line_end":705,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":32909,"byte_end":32920,"line_start":713,"line_end":713,"column_start":12,"column_end":23},"name":"is_positive","qualname":"<Decimal>::is_positive","value":"pub fn is_positive(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the decimal is positive.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the decimal is positive.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":32752,"byte_end":32798,"line_start":710,"line_end":710,"column_start":5,"column_end":51}},{"value":"deprecated(since = \"0.6.3\", note = \"please use `is_sign_positive` instead\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":32803,"byte_end":32881,"line_start":711,"line_end":711,"column_start":5,"column_end":83}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":32886,"byte_end":32897,"line_start":712,"line_end":712,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":33083,"byte_end":33099,"line_start":719,"line_end":719,"column_start":18,"column_end":34},"name":"is_sign_negative","qualname":"<Decimal>::is_sign_negative","value":"pub const fn is_sign_negative(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the sign bit of the decimal is negative.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the sign bit of the decimal is negative.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":32981,"byte_end":33043,"line_start":717,"line_end":717,"column_start":5,"column_end":67}},{"value":"inline(always)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":33048,"byte_end":33065,"line_start":718,"line_end":718,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":33281,"byte_end":33297,"line_start":726,"line_end":726,"column_start":18,"column_end":34},"name":"is_sign_positive","qualname":"<Decimal>::is_sign_positive","value":"pub const fn is_sign_positive(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the sign bit of the decimal is positive.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the sign bit of the decimal is positive.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":33163,"byte_end":33225,"line_start":723,"line_end":723,"column_start":5,"column_end":67}},{"value":"inline(always)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":33230,"byte_end":33247,"line_start":724,"line_end":724,"column_start":5,"column_end":22}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":33252,"byte_end":33263,"line_start":725,"line_end":725,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":33552,"byte_end":33561,"line_start":733,"line_end":733,"column_start":18,"column_end":27},"name":"min_value","qualname":"<Decimal>::min_value","value":"pub const fn min_value() -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns the minimum possible number that `Decimal` can represent.\n","sig":null,"attributes":[{"value":"/ Returns the minimum possible number that `Decimal` can represent.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":33362,"byte_end":33431,"line_start":730,"line_end":730,"column_start":5,"column_end":74}},{"value":"deprecated(since = \"1.12.0\", note =\n             \"Use the associated constant Decimal::MIN\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":33436,"byte_end":33518,"line_start":731,"line_end":731,"column_start":5,"column_end":87}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":33523,"byte_end":33534,"line_start":732,"line_end":732,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":33790,"byte_end":33799,"line_start":740,"line_end":740,"column_start":18,"column_end":27},"name":"max_value","qualname":"<Decimal>::max_value","value":"pub const fn max_value() -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum possible number that `Decimal` can represent.\n","sig":null,"attributes":[{"value":"/ Returns the maximum possible number that `Decimal` can represent.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":33600,"byte_end":33669,"line_start":737,"line_end":737,"column_start":5,"column_end":74}},{"value":"deprecated(since = \"1.12.0\", note =\n             \"Use the associated constant Decimal::MAX\")","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":33674,"byte_end":33756,"line_start":738,"line_end":738,"column_start":5,"column_end":87}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":33761,"byte_end":33772,"line_start":739,"line_end":739,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":34260,"byte_end":34265,"line_start":758,"line_end":758,"column_start":12,"column_end":17},"name":"trunc","qualname":"<Decimal>::trunc","value":"pub fn trunc(&Self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Decimal` integral with no fractional portion.\n This is a true truncation whereby no rounding is performed.","sig":null,"attributes":[{"value":"/ Returns a new `Decimal` integral with no fractional portion.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":33838,"byte_end":33902,"line_start":744,"line_end":744,"column_start":5,"column_end":69}},{"value":"/ This is a true truncation whereby no rounding is performed.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":33907,"byte_end":33970,"line_start":745,"line_end":745,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":33975,"byte_end":33978,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":33983,"byte_end":33996,"line_start":747,"line_end":747,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":34001,"byte_end":34004,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":34009,"byte_end":34016,"line_start":749,"line_end":749,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":34021,"byte_end":34051,"line_start":750,"line_end":750,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":34056,"byte_end":34059,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ let pi = Decimal::new(3141, 3);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":34064,"byte_end":34099,"line_start":752,"line_end":752,"column_start":5,"column_end":40}},{"value":"/ let trunc = Decimal::new(3, 0);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":34104,"byte_end":34139,"line_start":753,"line_end":753,"column_start":5,"column_end":40}},{"value":"/ // note that it returns a decimal","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":34144,"byte_end":34181,"line_start":754,"line_end":754,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(pi.trunc(), trunc);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":34186,"byte_end":34220,"line_start":755,"line_end":755,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":34225,"byte_end":34232,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":34237,"byte_end":34248,"line_start":757,"line_end":757,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35443,"byte_end":35448,"line_start":797,"line_end":797,"column_start":12,"column_end":17},"name":"fract","qualname":"<Decimal>::fract","value":"pub fn fract(&Self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Decimal` representing the fractional portion of the number.","sig":null,"attributes":[{"value":"/ Returns a new `Decimal` representing the fractional portion of the number.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35073,"byte_end":35151,"line_start":784,"line_end":784,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35156,"byte_end":35159,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35164,"byte_end":35177,"line_start":786,"line_end":786,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35182,"byte_end":35185,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35190,"byte_end":35197,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35202,"byte_end":35232,"line_start":789,"line_end":789,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35237,"byte_end":35240,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ let pi = Decimal::new(3141, 3);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35245,"byte_end":35280,"line_start":791,"line_end":791,"column_start":5,"column_end":40}},{"value":"/ let fract = Decimal::new(141, 3);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35285,"byte_end":35322,"line_start":792,"line_end":792,"column_start":5,"column_end":42}},{"value":"/ // note that it returns a decimal","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35327,"byte_end":35364,"line_start":793,"line_end":793,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(pi.fract(), fract);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35369,"byte_end":35403,"line_start":794,"line_end":794,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35408,"byte_end":35415,"line_start":795,"line_end":795,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35420,"byte_end":35431,"line_start":796,"line_end":796,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35898,"byte_end":35901,"line_start":814,"line_end":814,"column_start":12,"column_end":15},"name":"abs","qualname":"<Decimal>::abs","value":"pub fn abs(&Self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35633,"byte_end":35675,"line_start":803,"line_end":803,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35680,"byte_end":35683,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35688,"byte_end":35701,"line_start":805,"line_end":805,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35706,"byte_end":35709,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35714,"byte_end":35721,"line_start":807,"line_end":807,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35726,"byte_end":35756,"line_start":808,"line_end":808,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35761,"byte_end":35764,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let num = Decimal::new(-3141, 3);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35769,"byte_end":35806,"line_start":810,"line_end":810,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(num.abs().to_string(), \"3.141\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35811,"byte_end":35858,"line_start":811,"line_end":811,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35863,"byte_end":35870,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":35875,"byte_end":35886,"line_start":813,"line_end":813,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":36291,"byte_end":36296,"line_start":831,"line_end":831,"column_start":12,"column_end":17},"name":"floor","qualname":"<Decimal>::floor","value":"pub fn floor(&Self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":36008,"byte_end":36071,"line_start":820,"line_end":820,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":36076,"byte_end":36079,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":36084,"byte_end":36097,"line_start":822,"line_end":822,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":36102,"byte_end":36105,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":36110,"byte_end":36117,"line_start":824,"line_end":824,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":36122,"byte_end":36152,"line_start":825,"line_end":825,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":36157,"byte_end":36160,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ let num = Decimal::new(3641, 3);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":36165,"byte_end":36201,"line_start":827,"line_end":827,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(num.floor().to_string(), \"3\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":36206,"byte_end":36251,"line_start":828,"line_end":828,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":36256,"byte_end":36263,"line_start":829,"line_end":829,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":36268,"byte_end":36279,"line_start":830,"line_end":830,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":37043,"byte_end":37047,"line_start":860,"line_end":860,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Decimal>::ceil","value":"pub fn ceil(&Self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":36670,"byte_end":36737,"line_start":847,"line_end":847,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":36742,"byte_end":36745,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":36750,"byte_end":36763,"line_start":849,"line_end":849,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":36768,"byte_end":36771,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":36776,"byte_end":36783,"line_start":851,"line_end":851,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":36788,"byte_end":36818,"line_start":852,"line_end":852,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":36823,"byte_end":36826,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ let num = Decimal::new(3141, 3);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":36831,"byte_end":36867,"line_start":854,"line_end":854,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(num.ceil().to_string(), \"4\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":36872,"byte_end":36916,"line_start":855,"line_end":855,"column_start":5,"column_end":49}},{"value":"/ let num = Decimal::new(3, 0);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":36921,"byte_end":36954,"line_start":856,"line_end":856,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(num.ceil().to_string(), \"3\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":36959,"byte_end":37003,"line_start":857,"line_end":857,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":37008,"byte_end":37015,"line_start":858,"line_end":858,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":37020,"byte_end":37031,"line_start":859,"line_end":859,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":37646,"byte_end":37649,"line_start":885,"line_end":885,"column_start":12,"column_end":15},"name":"max","qualname":"<Decimal>::max","value":"pub fn max(Self, Decimal) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the maximum of the two numbers.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":37395,"byte_end":37438,"line_start":875,"line_end":875,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":37443,"byte_end":37446,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":37451,"byte_end":37458,"line_start":877,"line_end":877,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":37463,"byte_end":37493,"line_start":878,"line_end":878,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":37498,"byte_end":37501,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ let x = Decimal::new(1, 0);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":37506,"byte_end":37537,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/ let y = Decimal::new(2, 0);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":37542,"byte_end":37573,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(y, x.max(y));","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":37578,"byte_end":37606,"line_start":882,"line_end":882,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":37611,"byte_end":37618,"line_start":883,"line_end":883,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":37623,"byte_end":37634,"line_start":884,"line_end":884,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38035,"byte_end":38038,"line_start":903,"line_end":903,"column_start":12,"column_end":15},"name":"min","qualname":"<Decimal>::min","value":"pub fn min(Self, Decimal) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns the minimum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the minimum of the two numbers.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":37784,"byte_end":37827,"line_start":893,"line_end":893,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":37832,"byte_end":37835,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":37840,"byte_end":37847,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":37852,"byte_end":37882,"line_start":896,"line_end":896,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":37887,"byte_end":37890,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ let x = Decimal::new(1, 0);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":37895,"byte_end":37926,"line_start":898,"line_end":898,"column_start":5,"column_end":36}},{"value":"/ let y = Decimal::new(2, 0);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":37931,"byte_end":37962,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(x, x.min(y));","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":37967,"byte_end":37995,"line_start":900,"line_end":900,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38000,"byte_end":38007,"line_start":901,"line_end":901,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38012,"byte_end":38023,"line_start":902,"line_end":902,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38491,"byte_end":38500,"line_start":922,"line_end":922,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Decimal>::normalize","value":"pub fn normalize(&Self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Strips any trailing zero's from a `Decimal` and converts -0 to 0.","sig":null,"attributes":[{"value":"/ Strips any trailing zero's from a `Decimal` and converts -0 to 0.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38173,"byte_end":38242,"line_start":911,"line_end":911,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38247,"byte_end":38250,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38255,"byte_end":38268,"line_start":913,"line_end":913,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38273,"byte_end":38276,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38281,"byte_end":38288,"line_start":915,"line_end":915,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::prelude::*;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38293,"byte_end":38326,"line_start":916,"line_end":916,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38331,"byte_end":38334,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ let number = Decimal::from_str(\"3.100\").unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38339,"byte_end":38392,"line_start":918,"line_end":918,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(number.normalize().to_string(), \"3.1\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38397,"byte_end":38451,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38456,"byte_end":38463,"line_start":920,"line_end":920,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38468,"byte_end":38479,"line_start":921,"line_end":921,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":39028,"byte_end":39044,"line_start":940,"line_end":940,"column_start":12,"column_end":28},"name":"normalize_assign","qualname":"<Decimal>::normalize_assign","value":"pub fn normalize_assign(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" An in place version of `normalize`. Strips any trailing zero's from a `Decimal` and converts -0 to 0.","sig":null,"attributes":[{"value":"/ An in place version of `normalize`. Strips any trailing zero's from a `Decimal` and converts -0 to 0.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38614,"byte_end":38719,"line_start":928,"line_end":928,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38724,"byte_end":38727,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38732,"byte_end":38745,"line_start":930,"line_end":930,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38750,"byte_end":38753,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38758,"byte_end":38765,"line_start":932,"line_end":932,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::prelude::*;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38770,"byte_end":38803,"line_start":933,"line_end":933,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38808,"byte_end":38811,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ let mut number = Decimal::from_str(\"3.100\").unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38816,"byte_end":38873,"line_start":935,"line_end":935,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(number.to_string(), \"3.100\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38878,"byte_end":38922,"line_start":936,"line_end":936,"column_start":5,"column_end":49}},{"value":"/ number.normalize_assign();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38927,"byte_end":38957,"line_start":937,"line_end":937,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(number.to_string(), \"3.1\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":38962,"byte_end":39004,"line_start":938,"line_end":938,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":39009,"byte_end":39016,"line_start":939,"line_end":939,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40248,"byte_end":40253,"line_start":981,"line_end":981,"column_start":12,"column_end":17},"name":"round","qualname":"<Decimal>::round","value":"pub fn round(&Self) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Decimal` number with no fractional portion (i.e. an integer).\n Rounding currently follows \"Bankers Rounding\" rules. e.g. 6.5 -> 6, 7.5 -> 8","sig":null,"attributes":[{"value":"/ Returns a new `Decimal` number with no fractional portion (i.e. an integer).","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":39701,"byte_end":39781,"line_start":966,"line_end":966,"column_start":5,"column_end":85}},{"value":"/ Rounding currently follows \"Bankers Rounding\" rules. e.g. 6.5 -> 6, 7.5 -> 8","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":39786,"byte_end":39866,"line_start":967,"line_end":967,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":39871,"byte_end":39874,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":39879,"byte_end":39892,"line_start":969,"line_end":969,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":39897,"byte_end":39900,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":39905,"byte_end":39912,"line_start":971,"line_end":971,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":39917,"byte_end":39947,"line_start":972,"line_end":972,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":39952,"byte_end":39955,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ // Demonstrating bankers rounding...","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":39960,"byte_end":40000,"line_start":974,"line_end":974,"column_start":5,"column_end":45}},{"value":"/ let number_down = Decimal::new(65, 1);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40005,"byte_end":40047,"line_start":975,"line_end":975,"column_start":5,"column_end":47}},{"value":"/ let number_up   = Decimal::new(75, 1);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40052,"byte_end":40094,"line_start":976,"line_end":976,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(number_down.round().to_string(), \"6\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40099,"byte_end":40152,"line_start":977,"line_end":977,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(number_up.round().to_string(), \"8\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40157,"byte_end":40208,"line_start":978,"line_end":978,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40213,"byte_end":40220,"line_start":979,"line_end":979,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40225,"byte_end":40236,"line_start":980,"line_end":980,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40979,"byte_end":41001,"line_start":1003,"line_end":1003,"column_start":12,"column_end":34},"name":"round_dp_with_strategy","qualname":"<Decimal>::round_dp_with_strategy","value":"pub fn round_dp_with_strategy(&Self, u32, RoundingStrategy) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Decimal` number with the specified number of decimal points for fractional\n portion.\n Rounding is performed using the provided [`RoundingStrategy`]","sig":null,"attributes":[{"value":"/ Returns a new `Decimal` number with the specified number of decimal points for fractional","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40310,"byte_end":40403,"line_start":985,"line_end":985,"column_start":5,"column_end":98}},{"value":"/ portion.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40408,"byte_end":40420,"line_start":986,"line_end":986,"column_start":5,"column_end":17}},{"value":"/ Rounding is performed using the provided [`RoundingStrategy`]","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40425,"byte_end":40490,"line_start":987,"line_end":987,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40495,"byte_end":40498,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40503,"byte_end":40518,"line_start":989,"line_end":989,"column_start":5,"column_end":20}},{"value":"/ * `dp`: the number of decimal points to round to.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40523,"byte_end":40576,"line_start":990,"line_end":990,"column_start":5,"column_end":58}},{"value":"/ * `strategy`: the [`RoundingStrategy`] to use.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40581,"byte_end":40631,"line_start":991,"line_end":991,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40636,"byte_end":40639,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40644,"byte_end":40657,"line_start":993,"line_end":993,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40662,"byte_end":40665,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40670,"byte_end":40677,"line_start":995,"line_end":995,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::{Decimal, RoundingStrategy};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40682,"byte_end":40732,"line_start":996,"line_end":996,"column_start":5,"column_end":55}},{"value":"/ use core::str::FromStr;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40737,"byte_end":40764,"line_start":997,"line_end":997,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40769,"byte_end":40772,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ let tax = Decimal::from_str(\"3.4395\").unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40777,"byte_end":40828,"line_start":999,"line_end":999,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(tax.round_dp_with_strategy(2, RoundingStrategy::MidpointAwayFromZero).to_string(), \"3.44\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40833,"byte_end":40939,"line_start":1000,"line_end":1000,"column_start":5,"column_end":111}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40944,"byte_end":40951,"line_start":1001,"line_end":1001,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":40956,"byte_end":40967,"line_start":1002,"line_end":1002,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":46858,"byte_end":46866,"line_start":1156,"line_end":1156,"column_start":12,"column_end":20},"name":"round_dp","qualname":"<Decimal>::round_dp","value":"pub fn round_dp(&Self, u32) -> Decimal","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Decimal` number with the specified number of decimal points for fractional portion.\n Rounding currently follows \"Bankers Rounding\" rules. e.g. 6.5 -> 6, 7.5 -> 8","sig":null,"attributes":[{"value":"/ Returns a new `Decimal` number with the specified number of decimal points for fractional portion.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":46289,"byte_end":46391,"line_start":1140,"line_end":1140,"column_start":5,"column_end":107}},{"value":"/ Rounding currently follows \"Bankers Rounding\" rules. e.g. 6.5 -> 6, 7.5 -> 8","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":46396,"byte_end":46476,"line_start":1141,"line_end":1141,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":46481,"byte_end":46484,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":46489,"byte_end":46504,"line_start":1143,"line_end":1143,"column_start":5,"column_end":20}},{"value":"/ * `dp`: the number of decimal points to round to.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":46509,"byte_end":46562,"line_start":1144,"line_end":1144,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":46567,"byte_end":46570,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":46575,"byte_end":46588,"line_start":1146,"line_end":1146,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":46593,"byte_end":46596,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":46601,"byte_end":46608,"line_start":1148,"line_end":1148,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":46613,"byte_end":46643,"line_start":1149,"line_end":1149,"column_start":5,"column_end":35}},{"value":"/ use core::str::FromStr;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":46648,"byte_end":46675,"line_start":1150,"line_end":1150,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":46680,"byte_end":46683,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ let pi = Decimal::from_str(\"3.1415926535897932384626433832\").unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":46688,"byte_end":46762,"line_start":1152,"line_end":1152,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(pi.round_dp(2).to_string(), \"3.14\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":46767,"byte_end":46818,"line_start":1153,"line_end":1153,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":46823,"byte_end":46830,"line_start":1154,"line_end":1154,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":46835,"byte_end":46846,"line_start":1155,"line_end":1155,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":48779,"byte_end":48787,"line_start":1194,"line_end":1194,"column_start":12,"column_end":20},"name":"round_sf","qualname":"<Decimal>::round_sf","value":"pub fn round_sf(&Self, u32) -> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(Decimal)` number rounded to the specified number of significant digits. If\n the resulting number is unable to be represented by the `Decimal` number then `None` will\n be returned.  \n When the number of significant figures of the `Decimal` being rounded is greater than the requested\n number of significant digits then rounding will be performed using `MidpointNearestEven` strategy.","sig":null,"attributes":[{"value":"/ Returns `Some(Decimal)` number rounded to the specified number of significant digits. If","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":46986,"byte_end":47078,"line_start":1160,"line_end":1160,"column_start":5,"column_end":97}},{"value":"/ the resulting number is unable to be represented by the `Decimal` number then `None` will","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":47083,"byte_end":47176,"line_start":1161,"line_end":1161,"column_start":5,"column_end":98}},{"value":"/ be returned.  ","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":47181,"byte_end":47199,"line_start":1162,"line_end":1162,"column_start":5,"column_end":23}},{"value":"/ When the number of significant figures of the `Decimal` being rounded is greater than the requested","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":47204,"byte_end":47307,"line_start":1163,"line_end":1163,"column_start":5,"column_end":108}},{"value":"/ number of significant digits then rounding will be performed using `MidpointNearestEven` strategy.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":47312,"byte_end":47414,"line_start":1164,"line_end":1164,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":47419,"byte_end":47422,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":47427,"byte_end":47442,"line_start":1166,"line_end":1166,"column_start":5,"column_end":20}},{"value":"/ * `digits`: the number of significant digits to round to.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":47447,"byte_end":47508,"line_start":1167,"line_end":1167,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":47513,"byte_end":47516,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ # Remarks","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":47521,"byte_end":47534,"line_start":1169,"line_end":1169,"column_start":5,"column_end":18}},{"value":"/ A significant figure is determined using the following rules:","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":47539,"byte_end":47604,"line_start":1170,"line_end":1170,"column_start":5,"column_end":70}},{"value":"/ 1. Non-zero digits are always significant.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":47609,"byte_end":47655,"line_start":1171,"line_end":1171,"column_start":5,"column_end":51}},{"value":"/ 2. Zeros between non-zero digits are always significant.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":47660,"byte_end":47720,"line_start":1172,"line_end":1172,"column_start":5,"column_end":65}},{"value":"/ 3. Leading zeros are never significant.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":47725,"byte_end":47768,"line_start":1173,"line_end":1173,"column_start":5,"column_end":48}},{"value":"/ 4. Trailing zeros are only significant if the number contains a decimal point.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":47773,"byte_end":47855,"line_start":1174,"line_end":1174,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":47860,"byte_end":47863,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":47868,"byte_end":47881,"line_start":1176,"line_end":1176,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":47886,"byte_end":47889,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":47894,"byte_end":47901,"line_start":1178,"line_end":1178,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":47906,"byte_end":47936,"line_start":1179,"line_end":1179,"column_start":5,"column_end":35}},{"value":"/ use core::str::FromStr;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":47941,"byte_end":47968,"line_start":1180,"line_end":1180,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":47973,"byte_end":47976,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ let value = Decimal::from_str(\"305.459\").unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":47981,"byte_end":48035,"line_start":1182,"line_end":1182,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(value.round_sf(0), Some(Decimal::from_str(\"0\").unwrap()));","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":48040,"byte_end":48113,"line_start":1183,"line_end":1183,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(value.round_sf(1), Some(Decimal::from_str(\"300\").unwrap()));","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":48118,"byte_end":48193,"line_start":1184,"line_end":1184,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(value.round_sf(2), Some(Decimal::from_str(\"310\").unwrap()));","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":48198,"byte_end":48273,"line_start":1185,"line_end":1185,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(value.round_sf(3), Some(Decimal::from_str(\"305\").unwrap()));","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":48278,"byte_end":48353,"line_start":1186,"line_end":1186,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(value.round_sf(4), Some(Decimal::from_str(\"305.5\").unwrap()));","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":48358,"byte_end":48435,"line_start":1187,"line_end":1187,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(value.round_sf(5), Some(Decimal::from_str(\"305.46\").unwrap()));","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":48440,"byte_end":48518,"line_start":1188,"line_end":1188,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(value.round_sf(6), Some(Decimal::from_str(\"305.459\").unwrap()));","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":48523,"byte_end":48602,"line_start":1189,"line_end":1189,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(value.round_sf(7), Some(Decimal::from_str(\"305.4590\").unwrap()));","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":48607,"byte_end":48687,"line_start":1190,"line_end":1190,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(Decimal::MAX.round_sf(1), None);","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":48692,"byte_end":48739,"line_start":1191,"line_end":1191,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":48744,"byte_end":48751,"line_start":1192,"line_end":1192,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":48756,"byte_end":48767,"line_start":1193,"line_end":1193,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":51250,"byte_end":51272,"line_start":1233,"line_end":1233,"column_start":12,"column_end":34},"name":"round_sf_with_strategy","qualname":"<Decimal>::round_sf_with_strategy","value":"pub fn round_sf_with_strategy(&Self, u32, RoundingStrategy) -> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(Decimal)` number rounded to the specified number of significant digits. If\n the resulting number is unable to be represented by the `Decimal` number then `None` will\n be returned.  \n When the number of significant figures of the `Decimal` being rounded is greater than the requested\n number of significant digits then rounding will be performed using the provided [RoundingStrategy].","sig":null,"attributes":[{"value":"/ Returns `Some(Decimal)` number rounded to the specified number of significant digits. If","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":48923,"byte_end":49015,"line_start":1198,"line_end":1198,"column_start":5,"column_end":97}},{"value":"/ the resulting number is unable to be represented by the `Decimal` number then `None` will","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":49020,"byte_end":49113,"line_start":1199,"line_end":1199,"column_start":5,"column_end":98}},{"value":"/ be returned.  ","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":49118,"byte_end":49136,"line_start":1200,"line_end":1200,"column_start":5,"column_end":23}},{"value":"/ When the number of significant figures of the `Decimal` being rounded is greater than the requested","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":49141,"byte_end":49244,"line_start":1201,"line_end":1201,"column_start":5,"column_end":108}},{"value":"/ number of significant digits then rounding will be performed using the provided [RoundingStrategy].","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":49249,"byte_end":49352,"line_start":1202,"line_end":1202,"column_start":5,"column_end":108}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":49357,"byte_end":49360,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":49365,"byte_end":49380,"line_start":1204,"line_end":1204,"column_start":5,"column_end":20}},{"value":"/ * `digits`: the number of significant digits to round to.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":49385,"byte_end":49446,"line_start":1205,"line_end":1205,"column_start":5,"column_end":66}},{"value":"/ * `strategy`: if required, the rounding strategy to use.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":49451,"byte_end":49511,"line_start":1206,"line_end":1206,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":49516,"byte_end":49519,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ # Remarks","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":49524,"byte_end":49537,"line_start":1208,"line_end":1208,"column_start":5,"column_end":18}},{"value":"/ A significant figure is determined using the following rules:","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":49542,"byte_end":49607,"line_start":1209,"line_end":1209,"column_start":5,"column_end":70}},{"value":"/ 1. Non-zero digits are always significant.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":49612,"byte_end":49658,"line_start":1210,"line_end":1210,"column_start":5,"column_end":51}},{"value":"/ 2. Zeros between non-zero digits are always significant.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":49663,"byte_end":49723,"line_start":1211,"line_end":1211,"column_start":5,"column_end":65}},{"value":"/ 3. Leading zeros are never significant.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":49728,"byte_end":49771,"line_start":1212,"line_end":1212,"column_start":5,"column_end":48}},{"value":"/ 4. Trailing zeros are only significant if the number contains a decimal point.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":49776,"byte_end":49858,"line_start":1213,"line_end":1213,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":49863,"byte_end":49866,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":49871,"byte_end":49884,"line_start":1215,"line_end":1215,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":49889,"byte_end":49892,"line_start":1216,"line_end":1216,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":49897,"byte_end":49904,"line_start":1217,"line_end":1217,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::{Decimal, RoundingStrategy};","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":49909,"byte_end":49959,"line_start":1218,"line_end":1218,"column_start":5,"column_end":55}},{"value":"/ use core::str::FromStr;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":49964,"byte_end":49991,"line_start":1219,"line_end":1219,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":49996,"byte_end":49999,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ let value = Decimal::from_str(\"305.459\").unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":50004,"byte_end":50058,"line_start":1221,"line_end":1221,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(value.round_sf_with_strategy(0, RoundingStrategy::ToZero).unwrap(), Decimal::from_str(\"0\").unwrap());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":50063,"byte_end":50179,"line_start":1222,"line_end":1222,"column_start":5,"column_end":121}},{"value":"/ assert_eq!(value.round_sf_with_strategy(1, RoundingStrategy::ToZero).unwrap(), Decimal::from_str(\"300\").unwrap());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":50184,"byte_end":50302,"line_start":1223,"line_end":1223,"column_start":5,"column_end":123}},{"value":"/ assert_eq!(value.round_sf_with_strategy(2, RoundingStrategy::ToZero).unwrap(), Decimal::from_str(\"300\").unwrap());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":50307,"byte_end":50425,"line_start":1224,"line_end":1224,"column_start":5,"column_end":123}},{"value":"/ assert_eq!(value.round_sf_with_strategy(3, RoundingStrategy::ToZero).unwrap(), Decimal::from_str(\"305\").unwrap());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":50430,"byte_end":50548,"line_start":1225,"line_end":1225,"column_start":5,"column_end":123}},{"value":"/ assert_eq!(value.round_sf_with_strategy(4, RoundingStrategy::ToZero).unwrap(), Decimal::from_str(\"305.4\").unwrap());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":50553,"byte_end":50673,"line_start":1226,"line_end":1226,"column_start":5,"column_end":125}},{"value":"/ assert_eq!(value.round_sf_with_strategy(5, RoundingStrategy::ToZero).unwrap(), Decimal::from_str(\"305.45\").unwrap());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":50678,"byte_end":50799,"line_start":1227,"line_end":1227,"column_start":5,"column_end":126}},{"value":"/ assert_eq!(value.round_sf_with_strategy(6, RoundingStrategy::ToZero).unwrap(), Decimal::from_str(\"305.459\").unwrap());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":50804,"byte_end":50926,"line_start":1228,"line_end":1228,"column_start":5,"column_end":127}},{"value":"/ assert_eq!(value.round_sf_with_strategy(7, RoundingStrategy::ToZero).unwrap(), Decimal::from_str(\"305.4590\").unwrap());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":50931,"byte_end":51054,"line_start":1229,"line_end":1229,"column_start":5,"column_end":128}},{"value":"/ assert_eq!(Decimal::MAX.round_sf_with_strategy(1, RoundingStrategy::ToZero).unwrap(), Decimal::from_str(\"70000000000000000000000000000\").unwrap());","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":51059,"byte_end":51210,"line_start":1230,"line_end":1230,"column_start":5,"column_end":156}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":51215,"byte_end":51222,"line_start":1231,"line_end":1231,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":51227,"byte_end":51238,"line_start":1232,"line_end":1232,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":56151,"byte_end":56157,"line_start":1337,"line_end":1337,"column_start":18,"column_end":24},"name":"unpack","qualname":"<Decimal>::unpack","value":"pub const fn unpack(&Self) -> UnpackedDecimal","parent":null,"children":[],"decl_id":null,"docs":" Convert `Decimal` to an internal representation of the underlying struct. This is useful\n for debugging the internal state of the object.","sig":null,"attributes":[{"value":"/ Convert `Decimal` to an internal representation of the underlying struct. This is useful","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":55335,"byte_end":55427,"line_start":1318,"line_end":1318,"column_start":5,"column_end":97}},{"value":"/ for debugging the internal state of the object.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":55432,"byte_end":55483,"line_start":1319,"line_end":1319,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":55488,"byte_end":55491,"line_start":1320,"line_end":1320,"column_start":5,"column_end":8}},{"value":"/ # Important Disclaimer","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":55496,"byte_end":55522,"line_start":1321,"line_end":1321,"column_start":5,"column_end":31}},{"value":"/ This is primarily intended for library maintainers. The internal representation of a","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":55527,"byte_end":55615,"line_start":1322,"line_end":1322,"column_start":5,"column_end":93}},{"value":"/ `Decimal` is considered \"unstable\" for public use.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":55620,"byte_end":55674,"line_start":1323,"line_end":1323,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":55679,"byte_end":55682,"line_start":1324,"line_end":1324,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":55687,"byte_end":55700,"line_start":1325,"line_end":1325,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":55705,"byte_end":55708,"line_start":1326,"line_end":1326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":55713,"byte_end":55720,"line_start":1327,"line_end":1327,"column_start":5,"column_end":12}},{"value":"/ use rust_decimal::Decimal;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":55725,"byte_end":55755,"line_start":1328,"line_end":1328,"column_start":5,"column_end":35}},{"value":"/ use core::str::FromStr;","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":55760,"byte_end":55787,"line_start":1329,"line_end":1329,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":55792,"byte_end":55795,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ let pi = Decimal::from_str(\"3.1415926535897932384626433832\").unwrap();","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":55800,"byte_end":55874,"line_start":1331,"line_end":1331,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(format!(\"{:?}\", pi), \"3.1415926535897932384626433832\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":55879,"byte_end":55949,"line_start":1332,"line_end":1332,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(format!(\"{:?}\", pi.unpack()), \"UnpackedDecimal { \\","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":55954,"byte_end":56019,"line_start":1333,"line_end":1333,"column_start":5,"column_end":70}},{"value":"/     negative: false, scale: 28, hi: 1703060790, mid: 185874565, lo: 1102470952 \\","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":56024,"byte_end":56108,"line_start":1334,"line_end":1334,"column_start":5,"column_end":89}},{"value":"/ }\");","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":56113,"byte_end":56121,"line_start":1335,"line_end":1335,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":56126,"byte_end":56133,"line_start":1336,"line_end":1336,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":62900,"byte_end":62911,"line_start":1516,"line_end":1516,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Decimal>::checked_add","value":"pub fn checked_add(Self, Decimal) -> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Checked addition. Computes `self + other`, returning `None` if overflow occurred.\n","sig":null,"attributes":[{"value":"/ Checked addition. Computes `self + other`, returning `None` if overflow occurred.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":62765,"byte_end":62850,"line_start":1513,"line_end":1513,"column_start":5,"column_end":90}},{"value":"inline(always)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":62855,"byte_end":62872,"line_start":1514,"line_end":1514,"column_start":5,"column_end":22}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":62877,"byte_end":62888,"line_start":1515,"line_end":1515,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":63290,"byte_end":63301,"line_start":1527,"line_end":1527,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Decimal>::checked_sub","value":"pub fn checked_sub(Self, Decimal) -> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Checked subtraction. Computes `self - other`, returning `None` if overflow occurred.\n","sig":null,"attributes":[{"value":"/ Checked subtraction. Computes `self - other`, returning `None` if overflow occurred.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":63152,"byte_end":63240,"line_start":1524,"line_end":1524,"column_start":5,"column_end":93}},{"value":"inline(always)","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":63245,"byte_end":63262,"line_start":1525,"line_end":1525,"column_start":5,"column_end":22}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":63267,"byte_end":63278,"line_start":1526,"line_end":1526,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":63675,"byte_end":63686,"line_start":1538,"line_end":1538,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Decimal>::checked_mul","value":"pub fn checked_mul(Self, Decimal) -> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Checked multiplication. Computes `self * other`, returning `None` if overflow occurred.\n","sig":null,"attributes":[{"value":"/ Checked multiplication. Computes `self * other`, returning `None` if overflow occurred.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":63542,"byte_end":63633,"line_start":1535,"line_end":1535,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":63638,"byte_end":63647,"line_start":1536,"line_end":1536,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":63652,"byte_end":63663,"line_start":1537,"line_end":1537,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":64095,"byte_end":64106,"line_start":1550,"line_end":1550,"column_start":12,"column_end":23},"name":"checked_div","qualname":"<Decimal>::checked_div","value":"pub fn checked_div(Self, Decimal) -> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Checked division. Computes `self / other`, returning `None` if `other == 0.0` or the\n division results in overflow.\n","sig":null,"attributes":[{"value":"/ Checked division. Computes `self / other`, returning `None` if `other == 0.0` or the","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":63927,"byte_end":64015,"line_start":1546,"line_end":1546,"column_start":5,"column_end":93}},{"value":"/ division results in overflow.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":64020,"byte_end":64053,"line_start":1547,"line_end":1547,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":64058,"byte_end":64067,"line_start":1548,"line_end":1548,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":64072,"byte_end":64083,"line_start":1549,"line_end":1549,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":64495,"byte_end":64506,"line_start":1561,"line_end":1561,"column_start":12,"column_end":23},"name":"checked_rem","qualname":"<Decimal>::checked_rem","value":"pub fn checked_rem(Self, Decimal) -> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Checked remainder. Computes `self % other`, returning `None` if `other == 0.0`.\n","sig":null,"attributes":[{"value":"/ Checked remainder. Computes `self % other`, returning `None` if `other == 0.0`.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":64370,"byte_end":64453,"line_start":1558,"line_end":1558,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":64458,"byte_end":64467,"line_start":1559,"line_end":1559,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":64472,"byte_end":64483,"line_start":1560,"line_end":1560,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":64777,"byte_end":64791,"line_start":1569,"line_end":1569,"column_start":12,"column_end":26},"name":"from_str_radix","qualname":"<Decimal>::from_str_radix","value":"pub fn from_str_radix(&str, u32) -> Result<Self, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/error.rs","byte_start":85479,"byte_end":85490,"line_start":8,"line_end":8,"column_start":5,"column_end":16},"name":"ErrorString","qualname":"::error::Error::ErrorString","value":"Error::ErrorString(String)","parent":{"krate":0,"index":1007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1011},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/error.rs","byte_start":85504,"byte_end":85531,"line_start":9,"line_end":9,"column_start":5,"column_end":32},"name":"ExceedsMaximumPossibleValue","qualname":"::error::Error::ExceedsMaximumPossibleValue","value":"Error::ExceedsMaximumPossibleValue","parent":{"krate":0,"index":1007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/error.rs","byte_start":85537,"byte_end":85565,"line_start":10,"line_end":10,"column_start":5,"column_end":33},"name":"LessThanMinimumPossibleValue","qualname":"::error::Error::LessThanMinimumPossibleValue","value":"Error::LessThanMinimumPossibleValue","parent":{"krate":0,"index":1007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1015},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/error.rs","byte_start":85571,"byte_end":85599,"line_start":11,"line_end":11,"column_start":5,"column_end":33},"name":"ScaleExceedsMaximumPrecision","qualname":"::error::Error::ScaleExceedsMaximumPrecision","value":"Error::ScaleExceedsMaximumPrecision(u32)","parent":{"krate":0,"index":1007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1007},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/error.rs","byte_start":85467,"byte_end":85472,"line_start":7,"line_end":7,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    ErrorString(String),\n    ExceedsMaximumPossibleValue,\n    LessThanMinimumPossibleValue,\n    ScaleExceedsMaximumPrecision(u32),\n}","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1013},{"krate":0,"index":1015}],"decl_id":null,"docs":" Error type for the library.\n","sig":null,"attributes":[{"value":"/ Error type for the library.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/error.rs","byte_start":85391,"byte_end":85422,"line_start":5,"line_end":5,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":847},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":6774,"byte_end":6781,"line_start":188,"line_end":188,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":852},{"krate":0,"index":855},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":865},{"krate":0,"index":868}],"decl_id":null,"docs":" A convenience module appropriate for glob imports (`use rust_decimal::prelude::*;`).\n","sig":null,"attributes":[{"value":"/ A convenience module appropriate for glob imports (`use rust_decimal::prelude::*;`).","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":6677,"byte_end":6765,"line_start":187,"line_end":187,"column_start":1,"column_end":89}}]},{"kind":"Type","id":{"krate":0,"index":871},"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":7207,"byte_end":7213,"line_start":202,"line_end":202,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Shortcut for `core::result::Result<T, rust_decimal::Error>`. Useful to distinguish\n between `rust_decimal` and `std` types.\n","sig":null,"attributes":[{"value":"/ Shortcut for `core::result::Result<T, rust_decimal::Error>`. Useful to distinguish","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":7067,"byte_end":7153,"line_start":200,"line_end":200,"column_start":1,"column_end":87}},{"value":"/ between `rust_decimal` and `std` types.","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/lib.rs","byte_start":7154,"byte_end":7197,"line_start":201,"line_end":201,"column_start":1,"column_end":44}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":14375,"byte_end":14382,"line_start":159,"line_end":159,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":65027,"byte_end":65034,"line_start":1578,"line_end":1578,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":67268,"byte_end":67275,"line_start":1666,"line_end":1666,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":67402,"byte_end":67409,"line_start":1676,"line_end":1676,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":67475,"byte_end":67482,"line_start":1682,"line_end":1682,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":68121,"byte_end":68128,"line_start":1716,"line_end":1716,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":68274,"byte_end":68281,"line_start":1723,"line_end":1723,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":68427,"byte_end":68434,"line_start":1730,"line_end":1730,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":68580,"byte_end":68587,"line_start":1737,"line_end":1737,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":68733,"byte_end":68740,"line_start":1744,"line_end":1744,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":68879,"byte_end":68886,"line_start":1751,"line_end":1751,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":69080,"byte_end":69087,"line_start":1759,"line_end":1759,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":69252,"byte_end":69259,"line_start":1767,"line_end":1767,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":74592,"byte_end":74599,"line_start":1950,"line_end":1950,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":76777,"byte_end":76784,"line_start":2022,"line_end":2022,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":77007,"byte_end":77014,"line_start":2030,"line_end":2030,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":77698,"byte_end":77705,"line_start":2054,"line_end":2054,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":77948,"byte_end":77955,"line_start":2061,"line_end":2061,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":78095,"byte_end":78102,"line_start":2067,"line_end":2067,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":78258,"byte_end":78265,"line_start":2073,"line_end":2073,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":78411,"byte_end":78418,"line_start":2079,"line_end":2079,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":79225,"byte_end":79232,"line_start":2116,"line_end":2116,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":79489,"byte_end":79496,"line_start":2126,"line_end":2126,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":80278,"byte_end":80285,"line_start":2158,"line_end":2158,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":80542,"byte_end":80549,"line_start":2168,"line_end":2168,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":81328,"byte_end":81335,"line_start":2200,"line_end":2200,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":81592,"byte_end":81599,"line_start":2210,"line_end":2210,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":82456,"byte_end":82463,"line_start":2242,"line_end":2242,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":82720,"byte_end":82727,"line_start":2252,"line_end":2252,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":83596,"byte_end":83603,"line_start":2285,"line_end":2285,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":83860,"byte_end":83867,"line_start":2295,"line_end":2295,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":84296,"byte_end":84303,"line_start":2313,"line_end":2313,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":84418,"byte_end":84425,"line_start":2320,"line_end":2320,"column_start":13,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":84444,"byte_end":84451,"line_start":2322,"line_end":2322,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":84672,"byte_end":84679,"line_start":2332,"line_end":2332,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":84813,"byte_end":84820,"line_start":2339,"line_end":2339,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":84929,"byte_end":84936,"line_start":2345,"line_end":2345,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":85133,"byte_end":85140,"line_start":2355,"line_end":2355,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/error.rs","byte_start":85629,"byte_end":85634,"line_start":14,"line_end":14,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/error.rs","byte_start":85808,"byte_end":85813,"line_start":25,"line_end":25,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/error.rs","byte_start":85840,"byte_end":85845,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/ops/common.rs","byte_start":113114,"byte_end":113119,"line_start":9,"line_end":9,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/ops/common.rs","byte_start":118489,"byte_end":118494,"line_start":191,"line_end":191,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/ops/common.rs","byte_start":119655,"byte_end":119660,"line_start":240,"line_end":240,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/ops/common.rs","byte_start":120542,"byte_end":120547,"line_start":278,"line_end":278,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/ops/div.rs","byte_start":126768,"byte_end":126773,"line_start":8,"line_end":8,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/ops/div.rs","byte_start":129012,"byte_end":129017,"line_start":75,"line_end":75,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/serde.rs","byte_start":186247,"byte_end":186254,"line_start":8,"line_end":8,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/serde.rs","byte_start":187311,"byte_end":187325,"line_start":43,"line_end":43,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":825},{"krate":0,"index":827},{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/serde.rs","byte_start":191169,"byte_end":191176,"line_start":172,"line_end":172,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":14375,"byte_end":14382,"line_start":159,"line_end":159,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":65027,"byte_end":65034,"line_start":1578,"line_end":1578,"column_start":18,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":67268,"byte_end":67275,"line_start":1666,"line_end":1666,"column_start":15,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":884},"to":{"krate":18,"index":445}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":67402,"byte_end":67409,"line_start":1676,"line_end":1676,"column_start":14,"column_end":21},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":884},"to":{"krate":18,"index":455}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":67475,"byte_end":67482,"line_start":1682,"line_end":1682,"column_start":17,"column_end":24},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":884},"to":{"krate":18,"index":765}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":68121,"byte_end":68128,"line_start":1716,"line_end":1716,"column_start":21,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":884},"to":{"krate":18,"index":544}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":68274,"byte_end":68281,"line_start":1723,"line_end":1723,"column_start":21,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":884},"to":{"krate":18,"index":547}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":68427,"byte_end":68434,"line_start":1730,"line_end":1730,"column_start":21,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":884},"to":{"krate":18,"index":549}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":68580,"byte_end":68587,"line_start":1737,"line_end":1737,"column_start":21,"column_end":28},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":884},"to":{"krate":18,"index":551}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":68733,"byte_end":68740,"line_start":1744,"line_end":1744,"column_start":21,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":884},"to":{"krate":18,"index":553}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":68879,"byte_end":68886,"line_start":1751,"line_end":1751,"column_start":14,"column_end":21},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":884},"to":{"krate":18,"index":790}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":69080,"byte_end":69087,"line_start":1759,"line_end":1759,"column_start":18,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":11872}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":69252,"byte_end":69259,"line_start":1767,"line_end":1767,"column_start":24,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":884},"to":{"krate":18,"index":316}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":74592,"byte_end":74599,"line_start":1950,"line_end":1950,"column_start":22,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":884},"to":{"krate":18,"index":290}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":76777,"byte_end":76784,"line_start":2022,"line_end":2022,"column_start":38,"column_end":45},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":77007,"byte_end":77014,"line_start":2030,"line_end":2030,"column_start":38,"column_end":45},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":77698,"byte_end":77705,"line_start":2054,"line_end":2054,"column_start":23,"column_end":30},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":77948,"byte_end":77955,"line_start":2061,"line_end":2061,"column_start":21,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":9345}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":78095,"byte_end":78102,"line_start":2067,"line_end":2067,"column_start":24,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":9364}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":78258,"byte_end":78265,"line_start":2073,"line_end":2073,"column_start":24,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":9366}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":78411,"byte_end":78418,"line_start":2079,"line_end":2079,"column_start":14,"column_end":21},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":79225,"byte_end":79232,"line_start":2116,"line_end":2116,"column_start":20,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":79489,"byte_end":79496,"line_start":2126,"line_end":2126,"column_start":37,"column_end":44},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":80278,"byte_end":80285,"line_start":2158,"line_end":2158,"column_start":20,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":3106}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":80542,"byte_end":80549,"line_start":2168,"line_end":2168,"column_start":37,"column_end":44},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":3106}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":81328,"byte_end":81335,"line_start":2200,"line_end":2200,"column_start":20,"column_end":27},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":81592,"byte_end":81599,"line_start":2210,"line_end":2210,"column_start":37,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":82456,"byte_end":82463,"line_start":2242,"line_end":2242,"column_start":20,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":82720,"byte_end":82727,"line_start":2252,"line_end":2252,"column_start":37,"column_end":44},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":83596,"byte_end":83603,"line_start":2285,"line_end":2285,"column_start":20,"column_end":27},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":3118}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":83860,"byte_end":83867,"line_start":2295,"line_end":2295,"column_start":37,"column_end":44},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":3118}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":84296,"byte_end":84303,"line_start":2313,"line_end":2313,"column_start":20,"column_end":27},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":84418,"byte_end":84425,"line_start":2320,"line_end":2320,"column_start":13,"column_end":20},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":2660}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":84444,"byte_end":84451,"line_start":2322,"line_end":2322,"column_start":15,"column_end":22},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":9551}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":84672,"byte_end":84679,"line_start":2332,"line_end":2332,"column_start":21,"column_end":28},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":2702}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":84813,"byte_end":84820,"line_start":2339,"line_end":2339,"column_start":14,"column_end":21},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":2691}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":84929,"byte_end":84936,"line_start":2345,"line_end":2345,"column_start":14,"column_end":21},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/decimal.rs","byte_start":85133,"byte_end":85140,"line_start":2355,"line_end":2355,"column_start":31,"column_end":38},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/error.rs","byte_start":85629,"byte_end":85634,"line_start":14,"line_end":14,"column_start":21,"column_end":26},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1007},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/error.rs","byte_start":85808,"byte_end":85813,"line_start":25,"line_end":25,"column_start":28,"column_end":33},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1007},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/error.rs","byte_start":85840,"byte_end":85845,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1007},"to":{"krate":2,"index":9352}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/ops/common.rs","byte_start":113114,"byte_end":113119,"line_start":9,"line_end":9,"column_start":6,"column_end":11},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/ops/common.rs","byte_start":118489,"byte_end":118494,"line_start":191,"line_end":191,"column_start":6,"column_end":11},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/ops/common.rs","byte_start":119655,"byte_end":119660,"line_start":240,"line_end":240,"column_start":6,"column_end":11},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/ops/common.rs","byte_start":120542,"byte_end":120547,"line_start":278,"line_end":278,"column_start":6,"column_end":11},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/ops/div.rs","byte_start":126768,"byte_end":126773,"line_start":8,"line_end":8,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/ops/div.rs","byte_start":129012,"byte_end":129017,"line_start":75,"line_end":75,"column_start":6,"column_end":11},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/serde.rs","byte_start":186247,"byte_end":186254,"line_start":8,"line_end":8,"column_start":39,"column_end":46},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":884},"to":{"krate":20,"index":1539}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/serde.rs","byte_start":187311,"byte_end":187325,"line_start":43,"line_end":43,"column_start":39,"column_end":53},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":817},"to":{"krate":20,"index":1623}},{"span":{"file_name":"/Users/stevenli/.cargo/registry/src/github.com-1ecc6299db9ec823/rust_decimal-1.16.0/src/serde.rs","byte_start":191169,"byte_end":191176,"line_start":172,"line_end":172,"column_start":27,"column_end":34},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":884},"to":{"krate":20,"index":2078}}]}